begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.imports
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_comment
comment|/**  *   * @author Nosh&Dan  * @version 09.11.2008 | 19:41:40  *   */
end_comment

begin_class
DECL|class|UnlinkedFilesCrawlerTest
specifier|public
class|class
name|UnlinkedFilesCrawlerTest
extends|extends
name|TestCase
block|{
DECL|field|fileInDatabase
specifier|private
name|File
name|fileInDatabase
decl_stmt|;
DECL|field|fileNotInDatabase
specifier|private
name|File
name|fileNotInDatabase
decl_stmt|;
DECL|field|existingFolder
specifier|private
name|File
name|existingFolder
decl_stmt|;
DECL|field|notExistingFolder
specifier|private
name|File
name|notExistingFolder
decl_stmt|;
comment|/* (non-Javadoc) 	 * @see junit.framework.TestCase#setUp() 	 */
DECL|method|setUp ()
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|fileInDatabase
operator|=
operator|new
name|File
argument_list|(
literal|"src/resources/tests/net/sf/jabref/imports/unlinkedFilesTestFolder/pdfInDatabase.pdf"
argument_list|)
expr_stmt|;
name|fileNotInDatabase
operator|=
operator|new
name|File
argument_list|(
literal|"src/resources/tests/net/sf/jabref/imports/unlinkedFilesTestFolder/pdfNotInDatabase.pdf"
argument_list|)
expr_stmt|;
name|existingFolder
operator|=
operator|new
name|File
argument_list|(
literal|"src/resources/tests/net/sf/jabref/imports/unlinkedFilesTestFolder"
argument_list|)
expr_stmt|;
name|notExistingFolder
operator|=
operator|new
name|File
argument_list|(
literal|"notexistingfolder"
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Tests the testing environment. 	 */
DECL|method|testTestingEnvironment ()
specifier|public
name|void
name|testTestingEnvironment
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|existingFolder
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|existingFolder
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|existingFolder
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fileInDatabase
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fileInDatabase
operator|.
name|isFile
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fileNotInDatabase
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|fileNotInDatabase
operator|.
name|isFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|testOpenNotExistingDirectory ()
specifier|public
name|void
name|testOpenNotExistingDirectory
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|notExistingFolder
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|notExistingFolder
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

