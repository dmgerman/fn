begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntryTypesManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|StandardField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|types
operator|.
name|StandardEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|types
operator|.
name|UnknownEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|TypedBibEntryTest
specifier|public
class|class
name|TypedBibEntryTest
block|{
DECL|field|entryTypesManager
specifier|private
name|BibEntryTypesManager
name|entryTypesManager
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
name|void
name|setUp
parameter_list|()
block|{
name|entryTypesManager
operator|=
operator|new
name|BibEntryTypesManager
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|hasAllRequiredFieldsFail ()
specifier|public
name|void
name|hasAllRequiredFieldsFail
parameter_list|()
block|{
name|BibEntry
name|e
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
decl_stmt|;
name|e
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|TypedBibEntry
name|typedEntry
init|=
operator|new
name|TypedBibEntry
argument_list|(
name|e
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|typedEntry
operator|.
name|hasAllRequiredFields
argument_list|(
name|entryTypesManager
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|hasAllRequiredFields ()
specifier|public
name|void
name|hasAllRequiredFields
parameter_list|()
block|{
name|BibEntry
name|e
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
decl_stmt|;
name|e
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"abc"
argument_list|)
expr_stmt|;
name|e
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"2015"
argument_list|)
expr_stmt|;
name|TypedBibEntry
name|typedEntry
init|=
operator|new
name|TypedBibEntry
argument_list|(
name|e
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|typedEntry
operator|.
name|hasAllRequiredFields
argument_list|(
name|entryTypesManager
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|hasAllRequiredFieldsForUnknownTypeReturnsTrue ()
specifier|public
name|void
name|hasAllRequiredFieldsForUnknownTypeReturnsTrue
parameter_list|()
block|{
name|BibEntry
name|e
init|=
operator|new
name|BibEntry
argument_list|(
operator|new
name|UnknownEntryType
argument_list|(
literal|"articlllleeeee"
argument_list|)
argument_list|)
decl_stmt|;
name|TypedBibEntry
name|typedEntry
init|=
operator|new
name|TypedBibEntry
argument_list|(
name|e
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|typedEntry
operator|.
name|hasAllRequiredFields
argument_list|(
name|entryTypesManager
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getTypeForDisplayReturnsTypeName ()
specifier|public
name|void
name|getTypeForDisplayReturnsTypeName
parameter_list|()
block|{
name|BibEntry
name|e
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|InProceedings
argument_list|)
decl_stmt|;
name|TypedBibEntry
name|typedEntry
init|=
operator|new
name|TypedBibEntry
argument_list|(
name|e
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"InProceedings"
argument_list|,
name|typedEntry
operator|.
name|getTypeForDisplay
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getTypeForDisplayForUnknownTypeCapitalizeFirstLetter ()
specifier|public
name|void
name|getTypeForDisplayForUnknownTypeCapitalizeFirstLetter
parameter_list|()
block|{
name|BibEntry
name|e
init|=
operator|new
name|BibEntry
argument_list|(
operator|new
name|UnknownEntryType
argument_list|(
literal|"articlllleeeee"
argument_list|)
argument_list|)
decl_stmt|;
name|TypedBibEntry
name|typedEntry
init|=
operator|new
name|TypedBibEntry
argument_list|(
name|e
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Articlllleeeee"
argument_list|,
name|typedEntry
operator|.
name|getTypeForDisplay
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

