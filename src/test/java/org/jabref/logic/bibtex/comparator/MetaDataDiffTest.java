begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.bibtex.comparator
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|bibtex
operator|.
name|comparator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|metadata
operator|.
name|ContentSelector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|metadata
operator|.
name|MetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|MetaDataDiffTest
specifier|public
class|class
name|MetaDataDiffTest
block|{
annotation|@
name|Test
DECL|method|compareWithSameContentSelectorsDoesNotReportAnyDiffs ()
specifier|public
name|void
name|compareWithSameContentSelectorsDoesNotReportAnyDiffs
parameter_list|()
throws|throws
name|Exception
block|{
name|MetaData
name|one
init|=
operator|new
name|MetaData
argument_list|()
decl_stmt|;
name|one
operator|.
name|addContentSelector
argument_list|(
operator|new
name|ContentSelector
argument_list|(
literal|"author"
argument_list|,
literal|"first"
argument_list|,
literal|"second"
argument_list|)
argument_list|)
expr_stmt|;
name|MetaData
name|two
init|=
operator|new
name|MetaData
argument_list|()
decl_stmt|;
name|two
operator|.
name|addContentSelector
argument_list|(
operator|new
name|ContentSelector
argument_list|(
literal|"author"
argument_list|,
literal|"first"
argument_list|,
literal|"second"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|MetaDataDiff
operator|.
name|compare
argument_list|(
name|one
argument_list|,
name|two
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

