begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.bibtex
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|bibtex
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntryTypesManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|StandardEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|StandardField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|DuplicateCheckTest
specifier|public
class|class
name|DuplicateCheckTest
block|{
DECL|field|simpleArticle
specifier|private
name|BibEntry
name|simpleArticle
decl_stmt|;
DECL|field|unrelatedArticle
specifier|private
name|BibEntry
name|unrelatedArticle
decl_stmt|;
DECL|field|simpleInbook
specifier|private
name|BibEntry
name|simpleInbook
decl_stmt|;
DECL|field|simpleIncollection
specifier|private
name|BibEntry
name|simpleIncollection
decl_stmt|;
DECL|field|duplicateChecker
specifier|private
name|DuplicateCheck
name|duplicateChecker
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|simpleArticle
operator|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Single Author"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"A serious paper about something"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|unrelatedArticle
operator|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Completely Different"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Holy Moly Uffdada und Trallalla"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"1992"
argument_list|)
expr_stmt|;
name|simpleInbook
operator|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|InBook
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Alice in Wonderland"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Charles Lutwidge Dodgson"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|CHAPTER
argument_list|,
literal|"Chapter One â Down the Rabbit Hole"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|LANGUAGE
argument_list|,
literal|"English"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Macmillan"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"1865"
argument_list|)
expr_stmt|;
name|simpleIncollection
operator|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|InCollection
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Innovation and Intellectual Property Rights"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Ove Grandstrand"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|BOOKTITLE
argument_list|,
literal|"The Oxford Handbook of Innovation"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Oxford University Press"
argument_list|)
operator|.
name|withField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"2004"
argument_list|)
expr_stmt|;
name|duplicateChecker
operator|=
operator|new
name|DuplicateCheck
argument_list|(
operator|new
name|BibEntryTypesManager
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDuplicateDetection ()
specifier|public
name|void
name|testDuplicateDetection
parameter_list|()
block|{
name|BibEntry
name|one
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
decl_stmt|;
name|BibEntry
name|two
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
decl_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Billy Bob"
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Billy Bob"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"James Joyce"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Billy Bob"
argument_list|)
expr_stmt|;
name|two
operator|.
name|setType
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|two
operator|.
name|setType
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
expr_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"2005"
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"2005"
argument_list|)
expr_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"A title"
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"A title"
argument_list|)
expr_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"A"
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"A"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.01
argument_list|,
name|DuplicateCheck
operator|.
name|compareEntriesStrictly
argument_list|(
name|one
argument_list|,
name|two
argument_list|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"B"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.75
argument_list|,
name|DuplicateCheck
operator|.
name|compareEntriesStrictly
argument_list|(
name|one
argument_list|,
name|two
argument_list|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"A"
argument_list|)
expr_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|NUMBER
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|VOLUME
argument_list|,
literal|"21"
argument_list|)
expr_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PAGES
argument_list|,
literal|"334--337"
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PAGES
argument_list|,
literal|"334--337"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|NUMBER
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|VOLUME
argument_list|,
literal|"21"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|VOLUME
argument_list|,
literal|"22"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"B"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|one
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|two
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Another title"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|one
argument_list|,
name|two
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testWordCorrelation ()
specifier|public
name|void
name|testWordCorrelation
parameter_list|()
block|{
name|String
name|d1
init|=
literal|"Characterization of Calanus finmarchicus habitat in the North Sea"
decl_stmt|;
name|String
name|d2
init|=
literal|"Characterization of Calunus finmarchicus habitat in the North Sea"
decl_stmt|;
name|String
name|d3
init|=
literal|"Characterization of Calanus glacialissss habitat in the South Sea"
decl_stmt|;
name|assertEquals
argument_list|(
literal|1.0
argument_list|,
operator|(
name|DuplicateCheck
operator|.
name|correlateByWords
argument_list|(
name|d1
argument_list|,
name|d2
argument_list|)
operator|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.78
argument_list|,
operator|(
name|DuplicateCheck
operator|.
name|correlateByWords
argument_list|(
name|d1
argument_list|,
name|d3
argument_list|)
operator|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0.78
argument_list|,
operator|(
name|DuplicateCheck
operator|.
name|correlateByWords
argument_list|(
name|d2
argument_list|,
name|d3
argument_list|)
operator|)
argument_list|,
literal|0.01
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoUnrelatedEntriesAreNoDuplicates ()
specifier|public
name|void
name|twoUnrelatedEntriesAreNoDuplicates
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|simpleArticle
argument_list|,
name|unrelatedArticle
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates ()
specifier|public
name|void
name|twoUnrelatedEntriesWithDifferentDoisAreNoDuplicates
parameter_list|()
block|{
name|simpleArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DOI
argument_list|,
literal|"10.1016/j.is.2004.02.002"
argument_list|)
expr_stmt|;
name|unrelatedArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DOI
argument_list|,
literal|"10.1016/j.is.2004.02.00X"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|simpleArticle
argument_list|,
name|unrelatedArticle
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoUnrelatedEntriesWithEqualDoisAreDuplicates ()
specifier|public
name|void
name|twoUnrelatedEntriesWithEqualDoisAreDuplicates
parameter_list|()
block|{
name|simpleArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DOI
argument_list|,
literal|"10.1016/j.is.2004.02.002"
argument_list|)
expr_stmt|;
name|unrelatedArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DOI
argument_list|,
literal|"10.1016/j.is.2004.02.002"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|simpleArticle
argument_list|,
name|unrelatedArticle
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoUnrelatedEntriesWithEqualPmidAreDuplicates ()
specifier|public
name|void
name|twoUnrelatedEntriesWithEqualPmidAreDuplicates
parameter_list|()
block|{
name|simpleArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PMID
argument_list|,
literal|"12345678"
argument_list|)
expr_stmt|;
name|unrelatedArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PMID
argument_list|,
literal|"12345678"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|simpleArticle
argument_list|,
name|unrelatedArticle
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoUnrelatedEntriesWithEqualEprintAreDuplicates ()
specifier|public
name|void
name|twoUnrelatedEntriesWithEqualEprintAreDuplicates
parameter_list|()
block|{
name|simpleArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|EPRINT
argument_list|,
literal|"12345678"
argument_list|)
expr_stmt|;
name|unrelatedArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|EPRINT
argument_list|,
literal|"12345678"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|simpleArticle
argument_list|,
name|unrelatedArticle
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoEntriesWithSameDoiButDifferentTypesAreDuplicates ()
specifier|public
name|void
name|twoEntriesWithSameDoiButDifferentTypesAreDuplicates
parameter_list|()
block|{
name|simpleArticle
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DOI
argument_list|,
literal|"10.1016/j.is.2004.02.002"
argument_list|)
expr_stmt|;
name|BibEntry
name|duplicateWithDifferentType
init|=
operator|(
name|BibEntry
operator|)
name|simpleArticle
operator|.
name|clone
argument_list|()
decl_stmt|;
name|duplicateWithDifferentType
operator|.
name|setType
argument_list|(
name|StandardEntryType
operator|.
name|InCollection
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|simpleArticle
argument_list|,
name|duplicateWithDifferentType
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoInbooksWithDifferentChaptersAreNotDuplicates ()
specifier|public
name|void
name|twoInbooksWithDifferentChaptersAreNotDuplicates
parameter_list|()
block|{
name|twoEntriesWithDifferentSpecificFieldsAreNotDuplicates
argument_list|(
name|simpleInbook
argument_list|,
name|StandardField
operator|.
name|CHAPTER
argument_list|,
literal|"Chapter One â Down the Rabbit Hole"
argument_list|,
literal|"Chapter Two â The Pool of Tears"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoInbooksWithDifferentPagesAreNotDuplicates ()
specifier|public
name|void
name|twoInbooksWithDifferentPagesAreNotDuplicates
parameter_list|()
block|{
name|twoEntriesWithDifferentSpecificFieldsAreNotDuplicates
argument_list|(
name|simpleInbook
argument_list|,
name|StandardField
operator|.
name|PAGES
argument_list|,
literal|"1-20"
argument_list|,
literal|"21-40"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoIncollectionsWithDifferentChaptersAreNotDuplicates ()
specifier|public
name|void
name|twoIncollectionsWithDifferentChaptersAreNotDuplicates
parameter_list|()
block|{
name|twoEntriesWithDifferentSpecificFieldsAreNotDuplicates
argument_list|(
name|simpleIncollection
argument_list|,
name|StandardField
operator|.
name|CHAPTER
argument_list|,
literal|"10"
argument_list|,
literal|"9"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoIncollectionsWithDifferentPagesAreNotDuplicates ()
specifier|public
name|void
name|twoIncollectionsWithDifferentPagesAreNotDuplicates
parameter_list|()
block|{
name|twoEntriesWithDifferentSpecificFieldsAreNotDuplicates
argument_list|(
name|simpleIncollection
argument_list|,
name|StandardField
operator|.
name|PAGES
argument_list|,
literal|"1-20"
argument_list|,
literal|"21-40"
argument_list|)
expr_stmt|;
block|}
DECL|method|twoEntriesWithDifferentSpecificFieldsAreNotDuplicates (final BibEntry cloneable, final Field field, final String firstValue, final String secondValue)
specifier|private
name|void
name|twoEntriesWithDifferentSpecificFieldsAreNotDuplicates
parameter_list|(
specifier|final
name|BibEntry
name|cloneable
parameter_list|,
specifier|final
name|Field
name|field
parameter_list|,
specifier|final
name|String
name|firstValue
parameter_list|,
specifier|final
name|String
name|secondValue
parameter_list|)
block|{
specifier|final
name|BibEntry
name|entry1
init|=
operator|(
name|BibEntry
operator|)
name|cloneable
operator|.
name|clone
argument_list|()
decl_stmt|;
name|entry1
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|firstValue
argument_list|)
expr_stmt|;
specifier|final
name|BibEntry
name|entry2
init|=
operator|(
name|BibEntry
operator|)
name|cloneable
operator|.
name|clone
argument_list|()
decl_stmt|;
name|entry2
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|secondValue
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|entry1
argument_list|,
name|entry2
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter ()
specifier|public
name|void
name|inbookWithoutChapterCouldBeDuplicateOfInbookWithChapter
parameter_list|()
block|{
specifier|final
name|BibEntry
name|inbook1
init|=
operator|(
name|BibEntry
operator|)
name|simpleInbook
operator|.
name|clone
argument_list|()
decl_stmt|;
specifier|final
name|BibEntry
name|inbook2
init|=
operator|(
name|BibEntry
operator|)
name|simpleInbook
operator|.
name|clone
argument_list|()
decl_stmt|;
name|inbook2
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|CHAPTER
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|inbook1
argument_list|,
name|inbook2
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|inbook2
argument_list|,
name|inbook1
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|twoBooksWithDifferentEditionsAreNotDuplicates ()
specifier|public
name|void
name|twoBooksWithDifferentEditionsAreNotDuplicates
parameter_list|()
block|{
name|BibEntry
name|editionOne
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Effective Java"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Bloch, Joshua"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Prentice Hall"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DATE
argument_list|,
literal|"2001"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|EDITION
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|BibEntry
name|editionTwo
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Effective Java"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Bloch, Joshua"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Prentice Hall"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DATE
argument_list|,
literal|"2008"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|EDITION
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|editionOne
argument_list|,
name|editionTwo
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|sameBooksWithMissingEditionAreDuplicates ()
specifier|public
name|void
name|sameBooksWithMissingEditionAreDuplicates
parameter_list|()
block|{
name|BibEntry
name|editionOne
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Effective Java"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Bloch, Joshua"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Prentice Hall"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DATE
argument_list|,
literal|"2001"
argument_list|)
expr_stmt|;
name|BibEntry
name|editionTwo
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Effective Java"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Bloch, Joshua"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Prentice Hall"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DATE
argument_list|,
literal|"2008"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|editionOne
argument_list|,
name|editionTwo
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|sameBooksWithPartiallyMissingEditionAreDuplicates ()
specifier|public
name|void
name|sameBooksWithPartiallyMissingEditionAreDuplicates
parameter_list|()
block|{
name|BibEntry
name|editionOne
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Effective Java"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Bloch, Joshua"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Prentice Hall"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DATE
argument_list|,
literal|"2001"
argument_list|)
expr_stmt|;
name|BibEntry
name|editionTwo
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Effective Java"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Bloch, Joshua"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"Prentice Hall"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|DATE
argument_list|,
literal|"2008"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|EDITION
argument_list|,
literal|"2"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|editionOne
argument_list|,
name|editionTwo
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|sameBooksWithDifferentEditionsAreNotDuplicates ()
specifier|public
name|void
name|sameBooksWithDifferentEditionsAreNotDuplicates
parameter_list|()
block|{
name|BibEntry
name|editionTwo
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionTwo
operator|.
name|setCiteKey
argument_list|(
literal|"Sutton17reinfLrnIntroBook"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Reinforcement learning:An introduction"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"MIT Press"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"2017"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Sutton, Richard S and Barto, Andrew G"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|ADDRESS
argument_list|,
literal|"Cambridge, MA.USA"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|EDITION
argument_list|,
literal|"Second"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|JOURNAL
argument_list|,
literal|"MIT Press"
argument_list|)
expr_stmt|;
name|editionTwo
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|URL
argument_list|,
literal|"https://webdocs.cs.ualberta.ca/~sutton/book/the-book-2nd.html"
argument_list|)
expr_stmt|;
name|BibEntry
name|editionOne
init|=
operator|new
name|BibEntry
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
decl_stmt|;
name|editionOne
operator|.
name|setCiteKey
argument_list|(
literal|"Sutton98reinfLrnIntroBook"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
literal|"Reinforcement learning: An introduction"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
literal|"MIT press Cambridge"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
literal|"1998"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
literal|"Sutton, Richard S and Barto, Andrew G"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|VOLUME
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|NUMBER
argument_list|,
literal|"1"
argument_list|)
expr_stmt|;
name|editionOne
operator|.
name|setField
argument_list|(
name|StandardField
operator|.
name|EDITION
argument_list|,
literal|"First"
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|duplicateChecker
operator|.
name|isDuplicate
argument_list|(
name|editionOne
argument_list|,
name|editionTwo
argument_list|,
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

