begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.remote
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|RemotePreferencesTest
specifier|public
class|class
name|RemotePreferencesTest
block|{
DECL|field|preferences
specifier|private
name|RemotePreferences
name|preferences
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|preferences
operator|=
operator|new
name|RemotePreferences
argument_list|(
literal|1000
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testGetPort ()
specifier|public
name|void
name|testGetPort
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|1000
argument_list|,
name|preferences
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetPort ()
specifier|public
name|void
name|testSetPort
parameter_list|()
block|{
name|preferences
operator|.
name|setPort
argument_list|(
literal|2000
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2000
argument_list|,
name|preferences
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testUseRemoteServer ()
specifier|public
name|void
name|testUseRemoteServer
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|preferences
operator|.
name|useRemoteServer
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetUseRemoteServer ()
specifier|public
name|void
name|testSetUseRemoteServer
parameter_list|()
block|{
name|preferences
operator|.
name|setUseRemoteServer
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|preferences
operator|.
name|useRemoteServer
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsDifferentPortTrue ()
specifier|public
name|void
name|testIsDifferentPortTrue
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|preferences
operator|.
name|isDifferentPort
argument_list|(
literal|2000
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsDifferentPortFalse ()
specifier|public
name|void
name|testIsDifferentPortFalse
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|preferences
operator|.
name|isDifferentPort
argument_list|(
literal|1000
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

