begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.remote
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|remote
operator|.
name|client
operator|.
name|RemoteClient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|remote
operator|.
name|server
operator|.
name|MessageHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|remote
operator|.
name|server
operator|.
name|RemoteListenerServerLifecycle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|support
operator|.
name|DisabledOnCIServer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|AfterEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_comment
comment|/**  * Tests for the case where the client and server are set-up correctly.  * Testing the exceptional cases happens in {@link RemoteSetupTest}.  */
end_comment

begin_class
annotation|@
name|DisabledOnCIServer
argument_list|(
literal|"Tests fails sporadically on CI server"
argument_list|)
DECL|class|RemoteCommunicationTest
class|class
name|RemoteCommunicationTest
block|{
DECL|field|client
specifier|private
name|RemoteClient
name|client
decl_stmt|;
DECL|field|serverLifeCycle
specifier|private
name|RemoteListenerServerLifecycle
name|serverLifeCycle
decl_stmt|;
DECL|field|server
specifier|private
name|MessageHandler
name|server
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
name|void
name|setUp
parameter_list|()
block|{
specifier|final
name|int
name|port
init|=
literal|34567
decl_stmt|;
name|server
operator|=
name|mock
argument_list|(
name|MessageHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|serverLifeCycle
operator|=
operator|new
name|RemoteListenerServerLifecycle
argument_list|()
expr_stmt|;
name|serverLifeCycle
operator|.
name|openAndStart
argument_list|(
name|server
argument_list|,
name|port
argument_list|)
expr_stmt|;
name|client
operator|=
operator|new
name|RemoteClient
argument_list|(
name|port
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterEach
DECL|method|tearDown ()
name|void
name|tearDown
parameter_list|()
block|{
name|serverLifeCycle
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|pingReturnsTrue ()
name|void
name|pingReturnsTrue
parameter_list|()
throws|throws
name|IOException
throws|,
name|InterruptedException
block|{
name|assertTrue
argument_list|(
name|client
operator|.
name|ping
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commandLineArgumentSinglePassedToServer ()
name|void
name|commandLineArgumentSinglePassedToServer
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|message
init|=
operator|new
name|String
index|[]
block|{
literal|"my message"
block|}
decl_stmt|;
name|client
operator|.
name|sendCommandLineArguments
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|server
argument_list|)
operator|.
name|handleCommandLineArguments
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commandLineArgumentTwoPassedToServer ()
name|void
name|commandLineArgumentTwoPassedToServer
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|message
init|=
operator|new
name|String
index|[]
block|{
literal|"my message"
block|,
literal|"second"
block|}
decl_stmt|;
name|client
operator|.
name|sendCommandLineArguments
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|server
argument_list|)
operator|.
name|handleCommandLineArguments
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|commandLineArgumentMultiLinePassedToServer ()
name|void
name|commandLineArgumentMultiLinePassedToServer
parameter_list|()
block|{
specifier|final
name|String
index|[]
name|message
init|=
operator|new
name|String
index|[]
block|{
literal|"my message\n second line"
block|,
literal|"second \r and third"
block|}
decl_stmt|;
name|client
operator|.
name|sendCommandLineArguments
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|server
argument_list|)
operator|.
name|handleCommandLineArguments
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

