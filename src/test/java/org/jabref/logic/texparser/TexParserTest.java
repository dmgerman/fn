begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.texparser
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|texparser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ImportFormatPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ParserResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|BibtexParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
operator|.
name|TexParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
operator|.
name|TexParserResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|util
operator|.
name|DummyFileUpdateMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|AfterEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Answers
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
DECL|class|TexParserTest
class|class
name|TexParserTest
block|{
DECL|field|importFormatPreferences
specifier|private
name|ImportFormatPreferences
name|importFormatPreferences
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
name|void
name|setUp
parameter_list|()
block|{
name|importFormatPreferences
operator|=
name|mock
argument_list|(
name|ImportFormatPreferences
operator|.
name|class
argument_list|,
name|Answers
operator|.
name|RETURNS_DEEP_STUBS
argument_list|)
expr_stmt|;
block|}
annotation|@
name|AfterEach
DECL|method|tearDown ()
name|void
name|tearDown
parameter_list|()
block|{
name|importFormatPreferences
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSingleFile ()
name|void
name|testSingleFile
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
specifier|final
name|String
name|DARWIN
init|=
literal|"Darwin1888"
decl_stmt|;
specifier|final
name|String
name|EINSTEIN
init|=
literal|"Einstein1920"
decl_stmt|;
name|InputStream
name|originalStream
init|=
name|TexParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"origin.bib"
argument_list|)
decl_stmt|;
name|Path
name|texFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"paper.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStreamReader
name|originalReader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|originalStream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|ParserResult
name|result
init|=
operator|new
name|BibtexParser
argument_list|(
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|originalReader
argument_list|)
decl_stmt|;
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|texFile
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|,
name|texResult
operator|.
name|getMasterDatabase
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check entries
name|assertTrue
argument_list|(
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|hasEntries
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getCitationsCountByKey
argument_list|(
name|DARWIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getCitationsCountByKey
argument_list|(
name|EINSTEIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getNestedFilesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
operator|+
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
operator|+
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newDatabase
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check paths
name|assertEquals
argument_list|(
name|texFile
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texFile
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check lines
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check columns
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|19
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|67
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|84
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|33
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check line texts
name|assertEquals
argument_list|(
literal|"\\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Nunc ultricies leo nec libero rhoncus, eu vehicula enim efficitur.~\\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Einstein said~\\cite{Einstein1920} that lorem impsum, consectetur adipiscing elit. Integer eros tortor, dictum nec aliquet in, pharetra nec justo."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"\\cite{Darwin1888}."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check contexts
name|assertEquals
argument_list|(
literal|"\\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cus, eu vehicula enim efficitur.~\\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Einstein said~\\cite{Einstein1920} that lorem impsu"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"\\cite{Darwin1888}."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testTwoFiles ()
name|void
name|testTwoFiles
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
specifier|final
name|String
name|DARWIN
init|=
literal|"Darwin1888"
decl_stmt|;
specifier|final
name|String
name|EINSTEIN
init|=
literal|"Einstein1920"
decl_stmt|;
specifier|final
name|String
name|NEWTON
init|=
literal|"Newton1999"
decl_stmt|;
name|InputStream
name|originalStream
init|=
name|TexParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"origin.bib"
argument_list|)
decl_stmt|;
name|Path
name|texFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"paper.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|Path
name|texFile2
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"paper2.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStreamReader
name|originalReader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|originalStream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|ParserResult
name|result
init|=
operator|new
name|BibtexParser
argument_list|(
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|originalReader
argument_list|)
decl_stmt|;
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|texFile
argument_list|,
name|texFile2
argument_list|)
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|,
name|texResult
operator|.
name|getMasterDatabase
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check entries
name|assertTrue
argument_list|(
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|hasEntries
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|texResult
operator|.
name|getCitationsCountByKey
argument_list|(
name|DARWIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|texResult
operator|.
name|getCitationsCountByKey
argument_list|(
name|EINSTEIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getNestedFilesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
operator|+
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
operator|+
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|newDatabase
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check paths
name|assertEquals
argument_list|(
name|texFile
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texFile
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texFile2
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texFile2
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texFile2
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|NEWTON
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check lines
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|NEWTON
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check columns
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|19
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|67
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|84
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|33
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|48
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|48
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|67
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|48
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|NEWTON
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|65
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|NEWTON
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check line texts
name|assertEquals
argument_list|(
literal|"\\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Nunc ultricies leo nec libero rhoncus, eu vehicula enim efficitur.~\\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Einstein said~\\cite{Einstein1920} that lorem impsum, consectetur adipiscing elit. Integer eros tortor, dictum nec aliquet in, pharetra nec justo."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"\\cite{Darwin1888}."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"This is some content trying to cite a bib file: \\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"This is some content trying to cite a bib file: \\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"This is some content trying to cite a bib file: \\cite{Newton1999}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|NEWTON
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check contexts
name|assertEquals
argument_list|(
literal|"\\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cus, eu vehicula enim efficitur.~\\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Einstein said~\\cite{Einstein1920} that lorem impsu"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"\\cite{Darwin1888}."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ntent trying to cite a bib file: \\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ent trying to cite a bib file: \\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|2
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ntent trying to cite a bib file: \\cite{Newton1999}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|NEWTON
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testDuplicateFiles ()
name|void
name|testDuplicateFiles
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
specifier|final
name|String
name|DARWIN
init|=
literal|"Darwin1888"
decl_stmt|;
specifier|final
name|String
name|EINSTEIN
init|=
literal|"Einstein1920"
decl_stmt|;
name|InputStream
name|originalStream
init|=
name|TexParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"origin.bib"
argument_list|)
decl_stmt|;
name|Path
name|texFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"paper.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStreamReader
name|originalReader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|originalStream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|ParserResult
name|result
init|=
operator|new
name|BibtexParser
argument_list|(
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|originalReader
argument_list|)
decl_stmt|;
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|texFile
argument_list|,
name|texFile
argument_list|)
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|,
name|texResult
operator|.
name|getMasterDatabase
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check entries
name|assertTrue
argument_list|(
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|hasEntries
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getCitationsCountByKey
argument_list|(
name|DARWIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getCitationsCountByKey
argument_list|(
name|EINSTEIN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getNestedFilesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
operator|+
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
operator|+
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newDatabase
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check paths
name|assertEquals
argument_list|(
name|texFile
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texFile
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check lines
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|7
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLine
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check columns
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|19
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|67
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|84
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|14
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|33
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColStart
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|17
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColEnd
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check line texts
name|assertEquals
argument_list|(
literal|"\\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Nunc ultricies leo nec libero rhoncus, eu vehicula enim efficitur.~\\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Einstein said~\\cite{Einstein1920} that lorem impsum, consectetur adipiscing elit. Integer eros tortor, dictum nec aliquet in, pharetra nec justo."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"\\cite{Darwin1888}."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getLineText
argument_list|()
argument_list|)
expr_stmt|;
comment|// Check contexts
name|assertEquals
argument_list|(
literal|"\\cite{Einstein1920}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cus, eu vehicula enim efficitur.~\\cite{Darwin1888}"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Einstein said~\\cite{Einstein1920} that lorem impsu"
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|EINSTEIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"\\cite{Darwin1888}."
argument_list|,
name|texResult
operator|.
name|getUniqueKeys
argument_list|()
operator|.
name|get
argument_list|(
name|DARWIN
argument_list|)
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testUnknownKey ()
name|void
name|testUnknownKey
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|InputStream
name|originalStream
init|=
name|TexParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"origin.bib"
argument_list|)
decl_stmt|;
name|Path
name|texFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"unknown_key.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStreamReader
name|originalReader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|originalStream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|ParserResult
name|result
init|=
operator|new
name|BibtexParser
argument_list|(
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|originalReader
argument_list|)
decl_stmt|;
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|texFile
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|hasEntries
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getNestedFilesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
operator|+
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
operator|+
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newDatabase
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testFileNotFound ()
name|void
name|testFileNotFound
parameter_list|()
block|{
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
operator|new
name|BibDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
literal|"file_not_found.tex"
argument_list|)
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|hasEntries
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getNestedFilesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
operator|+
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
operator|+
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|newDatabase
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testDuplicateBibDatabaseConfiguration ()
name|void
name|testDuplicateBibDatabaseConfiguration
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|InputStream
name|originalStream
init|=
name|TexParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"config.bib"
argument_list|)
decl_stmt|;
name|Path
name|texFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"paper.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStreamReader
name|originalReader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|originalStream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|ParserResult
name|result
init|=
operator|new
name|BibtexParser
argument_list|(
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|originalReader
argument_list|)
decl_stmt|;
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|texFile
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
literal|"\"Maintained by \" # maintainer"
argument_list|)
argument_list|,
name|newDatabase
operator|.
name|getPreamble
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|newDatabase
operator|.
name|getStringCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testNestedFiles ()
name|void
name|testNestedFiles
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|InputStream
name|originalStream
init|=
name|TexParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"origin.bib"
argument_list|)
decl_stmt|;
name|Path
name|texFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"nested.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStreamReader
name|originalReader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|originalStream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|ParserResult
name|result
init|=
operator|new
name|BibtexParser
argument_list|(
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|originalReader
argument_list|)
decl_stmt|;
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|texFile
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|hasEntries
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|texResult
operator|.
name|getNestedFilesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
operator|+
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
operator|+
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newDatabase
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testCrossRef ()
name|void
name|testCrossRef
parameter_list|()
throws|throws
name|URISyntaxException
throws|,
name|IOException
block|{
name|InputStream
name|originalStream
init|=
name|TexParserTest
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"origin.bib"
argument_list|)
decl_stmt|;
name|Path
name|texFile
init|=
name|Paths
operator|.
name|get
argument_list|(
name|TexParserTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"crossref.tex"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
try|try
init|(
name|InputStreamReader
name|originalReader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|originalStream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|ParserResult
name|result
init|=
operator|new
name|BibtexParser
argument_list|(
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
operator|.
name|parse
argument_list|(
name|originalReader
argument_list|)
decl_stmt|;
name|TexParser
name|texParser
init|=
operator|new
name|DefaultTexParser
argument_list|(
name|result
operator|.
name|getDatabase
argument_list|()
argument_list|)
decl_stmt|;
name|TexParserResult
name|texResult
init|=
name|texParser
operator|.
name|parse
argument_list|(
name|texFile
argument_list|)
decl_stmt|;
name|BibDatabase
name|newDatabase
init|=
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|texResult
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|hasEntries
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|texResult
operator|.
name|getNestedFilesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|texResult
operator|.
name|getFoundKeysInTex
argument_list|()
operator|+
name|texResult
operator|.
name|getCrossRefEntriesCount
argument_list|()
argument_list|,
name|texResult
operator|.
name|getResolvedKeysCount
argument_list|()
operator|+
name|texResult
operator|.
name|getUnresolvedKeysCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|newDatabase
operator|.
name|getEntries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

