begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|TrustLevel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|AfterEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|FulltextFetchersTest
specifier|public
class|class
name|FulltextFetchersTest
block|{
DECL|field|entry
specifier|private
name|BibEntry
name|entry
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|entry
operator|=
operator|new
name|BibEntry
argument_list|()
expr_stmt|;
block|}
annotation|@
name|AfterEach
DECL|method|tearDown ()
specifier|public
name|void
name|tearDown
parameter_list|()
block|{
name|entry
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|acceptPdfUrls ()
specifier|public
name|void
name|acceptPdfUrls
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|URL
name|pdfUrl
init|=
operator|new
name|URL
argument_list|(
literal|"http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf"
argument_list|)
decl_stmt|;
name|FulltextFetcher
name|finder
init|=
parameter_list|(
name|e
parameter_list|)
lambda|->
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
decl_stmt|;
name|FulltextFetchers
name|fetcher
init|=
operator|new
name|FulltextFetchers
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|finder
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
argument_list|,
name|fetcher
operator|.
name|findFullTextPDF
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rejectNonPdfUrls ()
specifier|public
name|void
name|rejectNonPdfUrls
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|URL
name|pdfUrl
init|=
operator|new
name|URL
argument_list|(
literal|"https://github.com/JabRef/jabref/blob/master/README.md"
argument_list|)
decl_stmt|;
name|FulltextFetcher
name|finder
init|=
parameter_list|(
name|e
parameter_list|)
lambda|->
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
decl_stmt|;
name|FulltextFetchers
name|fetcher
init|=
operator|new
name|FulltextFetchers
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|finder
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|fetcher
operator|.
name|findFullTextPDF
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|noTrustLevel ()
specifier|public
name|void
name|noTrustLevel
parameter_list|()
throws|throws
name|MalformedURLException
block|{
name|URL
name|pdfUrl
init|=
operator|new
name|URL
argument_list|(
literal|"http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf"
argument_list|)
decl_stmt|;
name|FulltextFetcher
name|finder
init|=
parameter_list|(
name|e
parameter_list|)
lambda|->
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
decl_stmt|;
name|FulltextFetchers
name|fetcher
init|=
operator|new
name|FulltextFetchers
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|finder
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
argument_list|,
name|fetcher
operator|.
name|findFullTextPDF
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|higherTrustLevelWins ()
specifier|public
name|void
name|higherTrustLevelWins
parameter_list|()
throws|throws
name|MalformedURLException
throws|,
name|IOException
throws|,
name|FetcherException
block|{
specifier|final
name|URL
name|lowUrl
init|=
operator|new
name|URL
argument_list|(
literal|"http://docs.oasis-open.org/opencsa/sca-bpel/sca-bpel-1.1-spec-cd-01.pdf"
argument_list|)
decl_stmt|;
specifier|final
name|URL
name|highUrl
init|=
operator|new
name|URL
argument_list|(
literal|"http://docs.oasis-open.org/wsbpel/2.0/OS/wsbpel-v2.0-OS.pdf"
argument_list|)
decl_stmt|;
name|FulltextFetcher
name|finderHigh
init|=
name|mock
argument_list|(
name|FulltextFetcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|FulltextFetcher
name|finderLow
init|=
name|mock
argument_list|(
name|FulltextFetcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|finderHigh
operator|.
name|getTrustLevel
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TrustLevel
operator|.
name|SOURCE
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|finderLow
operator|.
name|getTrustLevel
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TrustLevel
operator|.
name|UNKNOWN
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|finderHigh
operator|.
name|findFullText
argument_list|(
name|entry
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|highUrl
argument_list|)
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|finderLow
operator|.
name|findFullText
argument_list|(
name|entry
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|lowUrl
argument_list|)
argument_list|)
expr_stmt|;
name|FulltextFetchers
name|fetcher
init|=
operator|new
name|FulltextFetchers
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|finderLow
argument_list|,
name|finderHigh
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|highUrl
argument_list|)
argument_list|,
name|fetcher
operator|.
name|findFullTextPDF
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

