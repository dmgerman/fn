begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|AbstractIsbnFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|IsbnViaChimboriFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|IsbnViaEbookDeFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|IsbnViaOttoBibFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|MrDLibFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Disabled
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|reflections
operator|.
name|Reflections
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_comment
comment|// TODO: Reenable as soon as https://github.com/ronmamo/reflections/issues/202 is fixed
end_comment

begin_class
annotation|@
name|Disabled
DECL|class|WebFetchersTest
class|class
name|WebFetchersTest
block|{
DECL|field|reflections
specifier|private
name|Reflections
name|reflections
init|=
operator|new
name|Reflections
argument_list|(
literal|"org.jabref"
argument_list|)
decl_stmt|;
DECL|field|importFormatPreferences
specifier|private
name|ImportFormatPreferences
name|importFormatPreferences
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|importFormatPreferences
operator|=
name|mock
argument_list|(
name|ImportFormatPreferences
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher ()
name|void
name|getIdBasedFetchersReturnsAllFetcherDerivingFromIdBasedFetcher
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|IdBasedFetcher
argument_list|>
name|idFetchers
init|=
name|WebFetchers
operator|.
name|getIdBasedFetchers
argument_list|(
name|importFormatPreferences
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|IdBasedFetcher
argument_list|>
argument_list|>
name|expected
init|=
name|reflections
operator|.
name|getSubTypesOf
argument_list|(
name|IdBasedFetcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|AbstractIsbnFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|IdBasedParserFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// Remove special ISBN fetcher since we don't want to expose them to the user
name|expected
operator|.
name|remove
argument_list|(
name|IsbnViaChimboriFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|IsbnViaEbookDeFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|IsbnViaOttoBibFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|getClasses
argument_list|(
name|idFetchers
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher ()
name|void
name|getEntryBasedFetchersReturnsAllFetcherDerivingFromEntryBasedFetcher
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|EntryBasedFetcher
argument_list|>
name|idFetchers
init|=
name|WebFetchers
operator|.
name|getEntryBasedFetchers
argument_list|(
name|importFormatPreferences
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|EntryBasedFetcher
argument_list|>
argument_list|>
name|expected
init|=
name|reflections
operator|.
name|getSubTypesOf
argument_list|(
name|EntryBasedFetcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|EntryBasedParserFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|MrDLibFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|getClasses
argument_list|(
name|idFetchers
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher ()
name|void
name|getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|SearchBasedFetcher
argument_list|>
name|searchBasedFetchers
init|=
name|WebFetchers
operator|.
name|getSearchBasedFetchers
argument_list|(
name|importFormatPreferences
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|SearchBasedFetcher
argument_list|>
argument_list|>
name|expected
init|=
name|reflections
operator|.
name|getSubTypesOf
argument_list|(
name|SearchBasedFetcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|SearchBasedParserFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|getClasses
argument_list|(
name|searchBasedFetchers
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher ()
name|void
name|getFullTextFetchersReturnsAllFetcherDerivingFromFullTextFetcher
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|FulltextFetcher
argument_list|>
name|fullTextFetchers
init|=
name|WebFetchers
operator|.
name|getFullTextFetchers
argument_list|(
name|importFormatPreferences
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|FulltextFetcher
argument_list|>
argument_list|>
name|expected
init|=
name|reflections
operator|.
name|getSubTypesOf
argument_list|(
name|FulltextFetcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|getClasses
argument_list|(
name|fullTextFetchers
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|getIdFetchersReturnsAllFetcherDerivingFromIdFetcher ()
name|void
name|getIdFetchersReturnsAllFetcherDerivingFromIdFetcher
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|IdFetcher
argument_list|>
name|idFetchers
init|=
name|WebFetchers
operator|.
name|getIdFetchers
argument_list|(
name|importFormatPreferences
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|IdFetcher
argument_list|>
argument_list|>
name|expected
init|=
name|reflections
operator|.
name|getSubTypesOf
argument_list|(
name|IdFetcher
operator|.
name|class
argument_list|)
decl_stmt|;
name|expected
operator|.
name|remove
argument_list|(
name|IdParserFetcher
operator|.
name|class
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|getClasses
argument_list|(
name|idFetchers
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getClasses (List<?> objects)
specifier|private
name|Set
argument_list|<
name|?
extends|extends
name|Class
argument_list|<
name|?
argument_list|>
argument_list|>
name|getClasses
parameter_list|(
name|List
argument_list|<
name|?
argument_list|>
name|objects
parameter_list|)
block|{
return|return
name|objects
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|Object
operator|::
name|getClass
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toSet
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

