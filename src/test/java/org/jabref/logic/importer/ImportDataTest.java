begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * @author Nosh&Dan  * @version 09.11.2008 | 19:41:40  */
end_comment

begin_class
DECL|class|ImportDataTest
specifier|public
class|class
name|ImportDataTest
block|{
DECL|field|FILE_IN_DATABASE
specifier|public
specifier|static
specifier|final
name|File
name|FILE_IN_DATABASE
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/resources/org/jabref/logic/importer/unlinkedFilesTestFolder/pdfInDatabase.pdf"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
DECL|field|FILE_NOT_IN_DATABASE
specifier|public
specifier|static
specifier|final
name|File
name|FILE_NOT_IN_DATABASE
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/resources/org/jabref/logic/importer/unlinkedFilesTestFolder/pdfNotInDatabase.pdf"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
DECL|field|EXISTING_FOLDER
specifier|public
specifier|static
specifier|final
name|File
name|EXISTING_FOLDER
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/resources/org/jabref/logic/importer/unlinkedFilesTestFolder"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
DECL|field|NOT_EXISTING_FOLDER
specifier|public
specifier|static
specifier|final
name|File
name|NOT_EXISTING_FOLDER
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"notexistingfolder"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
DECL|field|NOT_EXISTING_PDF
specifier|public
specifier|static
specifier|final
name|File
name|NOT_EXISTING_PDF
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/resources/org/jabref/logic/importer/unlinkedFilesTestFolder/null.pdf"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
DECL|field|UNLINKED_FILES_TEST_BIB
specifier|public
specifier|static
specifier|final
name|File
name|UNLINKED_FILES_TEST_BIB
init|=
name|Paths
operator|.
name|get
argument_list|(
literal|"src/test/resources/org/jabref/util/unlinkedFilesTestBib.bib"
argument_list|)
operator|.
name|toFile
argument_list|()
decl_stmt|;
comment|/**      * Tests the testing environment.      */
annotation|@
name|Test
DECL|method|testTestingEnvironment ()
specifier|public
name|void
name|testTestingEnvironment
parameter_list|()
block|{
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ImportDataTest
operator|.
name|EXISTING_FOLDER
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ImportDataTest
operator|.
name|EXISTING_FOLDER
operator|.
name|isDirectory
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ImportDataTest
operator|.
name|FILE_IN_DATABASE
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ImportDataTest
operator|.
name|FILE_IN_DATABASE
operator|.
name|isFile
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ImportDataTest
operator|.
name|FILE_NOT_IN_DATABASE
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|ImportDataTest
operator|.
name|FILE_NOT_IN_DATABASE
operator|.
name|isFile
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testOpenNotExistingDirectory ()
specifier|public
name|void
name|testOpenNotExistingDirectory
parameter_list|()
block|{
name|Assert
operator|.
name|assertFalse
argument_list|(
name|ImportDataTest
operator|.
name|NOT_EXISTING_FOLDER
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|ImportDataTest
operator|.
name|NOT_EXISTING_PDF
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

