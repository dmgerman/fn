begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer.fileformat
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|params
operator|.
name|ParameterizedTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|params
operator|.
name|provider
operator|.
name|MethodSource
import|;
end_import

begin_comment
comment|/**  * The type mapping between BibTeXML and BibTeX is actually an identity mapping. The purpose of this class is to ensure  * that all BibTeXML types are tested.  */
end_comment

begin_class
DECL|class|BibTeXMLImporterTestTypes
specifier|public
class|class
name|BibTeXMLImporterTestTypes
block|{
DECL|method|types ()
specifier|public
specifier|static
name|Collection
argument_list|<
name|String
argument_list|>
name|types
parameter_list|()
block|{
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"article"
block|,
literal|"book"
block|,
literal|"booklet"
block|,
literal|"conference"
block|,
literal|"inbook"
block|,
literal|"incollection"
block|,
literal|"inproceedings"
block|,
literal|"manual"
block|,
literal|"mastersthesis"
block|,
literal|"misc"
block|,
literal|"phdthesis"
block|,
literal|"techreport"
block|,
literal|"unpublished"
block|}
argument_list|)
return|;
block|}
annotation|@
name|ParameterizedTest
annotation|@
name|MethodSource
argument_list|(
literal|"types"
argument_list|)
DECL|method|importConvertsToCorrectBibType (String type)
specifier|public
name|void
name|importConvertsToCorrectBibType
parameter_list|(
name|String
name|type
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|bibteXMLInput
init|=
literal|"<?xml version=\"1.0\" ?>\n"
operator|+
literal|"<bibtex:file xmlns:bibtex=\"http://bibtexml.sf.net/\">\n"
operator|+
literal|"<bibtex:entry>\n"
operator|+
literal|"<bibtex:"
operator|+
name|type
operator|+
literal|">\n"
operator|+
literal|"<bibtex:author>Max Mustermann</bibtex:author>\n"
operator|+
literal|"<bibtex:keywords>java</bibtex:keywords>\n"
operator|+
literal|"<bibtex:title>Java tricks</bibtex:title>\n"
operator|+
literal|"<bibtex:year>2016</bibtex:year>\n"
operator|+
literal|"</bibtex:"
operator|+
name|type
operator|+
literal|">\n"
operator|+
literal|"</bibtex:entry>\n"
operator|+
literal|"</bibtex:file>"
decl_stmt|;
name|List
argument_list|<
name|BibEntry
argument_list|>
name|bibEntries
init|=
operator|new
name|BibTeXMLImporter
argument_list|()
operator|.
name|importDatabase
argument_list|(
operator|new
name|BufferedReader
argument_list|(
operator|new
name|StringReader
argument_list|(
name|bibteXMLInput
argument_list|)
argument_list|)
argument_list|)
operator|.
name|getDatabase
argument_list|()
operator|.
name|getEntries
argument_list|()
decl_stmt|;
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"author"
argument_list|,
literal|"Max Mustermann"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"keywords"
argument_list|,
literal|"java"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"title"
argument_list|,
literal|"Java tricks"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"year"
argument_list|,
literal|"2016"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setType
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|Assertions
operator|.
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|entry
argument_list|)
argument_list|,
name|bibEntries
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

