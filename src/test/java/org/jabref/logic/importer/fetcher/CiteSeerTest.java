begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer.fetcher
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibtexEntryTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|testutils
operator|.
name|category
operator|.
name|FetcherTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_class
annotation|@
name|FetcherTest
DECL|class|CiteSeerTest
class|class
name|CiteSeerTest
block|{
DECL|field|fetcher
name|CiteSeer
name|fetcher
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|fetcher
operator|=
operator|new
name|CiteSeer
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|searchByQueryFindsEntry ()
name|void
name|searchByQueryFindsEntry
parameter_list|()
throws|throws
name|Exception
block|{
name|BibEntry
name|expected
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|expected
operator|.
name|setType
argument_list|(
name|BibtexEntryTypes
operator|.
name|MISC
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"author"
argument_list|,
literal|"Wang Wei and Zhang Pingwen and Zhang Zhifei"
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"title"
argument_list|,
literal|"Rigorous Derivation from Landau-de Gennes Theory to Eericksen-leslie Theory"
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"doi"
argument_list|,
literal|"10.1.1.744.5780"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|BibEntry
argument_list|>
name|fetchedEntries
init|=
name|fetcher
operator|.
name|performSearch
argument_list|(
literal|"title:Ericksen-Leslie AND venue:q AND ncites:[10 TO 15000]"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|expected
argument_list|)
argument_list|,
name|fetchedEntries
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|searchByQueryFindsEntry2 ()
name|void
name|searchByQueryFindsEntry2
parameter_list|()
throws|throws
name|Exception
block|{
name|BibEntry
name|expected
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|expected
operator|.
name|setType
argument_list|(
name|BibtexEntryTypes
operator|.
name|MISC
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"author"
argument_list|,
literal|"Lazarus Richard S."
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"title"
argument_list|,
literal|"Coping Theory and Research: Past Present and Future"
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"doi"
argument_list|,
literal|"10.1.1.115.9665"
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"year"
argument_list|,
literal|"1993"
argument_list|)
expr_stmt|;
name|expected
operator|.
name|setField
argument_list|(
literal|"journaltitle"
argument_list|,
literal|"PSYCHOSOMATIC MEDICINE"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|BibEntry
argument_list|>
name|fetchedEntries
init|=
name|fetcher
operator|.
name|performSearch
argument_list|(
literal|"JabRef"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|fetchedEntries
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

