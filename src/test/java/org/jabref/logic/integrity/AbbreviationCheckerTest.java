begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.integrity
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|Abbreviation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|JournalAbbreviationRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertNotEquals
import|;
end_import

begin_class
DECL|class|AbbreviationCheckerTest
class|class
name|AbbreviationCheckerTest
block|{
DECL|field|abbreviationRepository
specifier|private
name|JournalAbbreviationRepository
name|abbreviationRepository
decl_stmt|;
DECL|field|checker
specifier|private
name|AbbreviationChecker
name|checker
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
name|void
name|setUp
parameter_list|()
block|{
name|abbreviationRepository
operator|=
operator|new
name|JournalAbbreviationRepository
argument_list|(
operator|new
name|Abbreviation
argument_list|(
literal|"Test Journal"
argument_list|,
literal|"T. J."
argument_list|)
argument_list|)
expr_stmt|;
name|checker
operator|=
operator|new
name|AbbreviationChecker
argument_list|(
name|abbreviationRepository
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|checkValueComplainsAboutAbbreviatedJournalName ()
name|void
name|checkValueComplainsAboutAbbreviatedJournalName
parameter_list|()
block|{
name|assertNotEquals
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|checker
operator|.
name|checkValue
argument_list|(
literal|"T. J."
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|checkValueDoesNotComplainAboutJournalNameThatHasSameAbbreviation ()
name|void
name|checkValueDoesNotComplainAboutJournalNameThatHasSameAbbreviation
parameter_list|()
block|{
name|abbreviationRepository
operator|.
name|addEntry
argument_list|(
operator|new
name|Abbreviation
argument_list|(
literal|"Journal"
argument_list|,
literal|"Journal"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|checker
operator|.
name|checkValue
argument_list|(
literal|"Journal"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

