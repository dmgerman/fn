begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.integrity
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_class
DECL|class|BracesCorrectorTest
specifier|public
class|class
name|BracesCorrectorTest
block|{
annotation|@
name|Test
DECL|method|inputIsNull ()
specifier|public
name|void
name|inputIsNull
parameter_list|()
block|{
name|assertNull
argument_list|(
name|BracesCorrector
operator|.
name|apply
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|inputIsEmpty ()
specifier|public
name|void
name|inputIsEmpty
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|BracesCorrector
operator|.
name|apply
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|inputWithoutBraces ()
specifier|public
name|void
name|inputWithoutBraces
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"banana"
argument_list|,
name|BracesCorrector
operator|.
name|apply
argument_list|(
literal|"banana"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|inputMissingClosing ()
specifier|public
name|void
name|inputMissingClosing
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"{banana}"
argument_list|,
name|BracesCorrector
operator|.
name|apply
argument_list|(
literal|"{banana"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|inputMissingOpening ()
specifier|public
name|void
name|inputMissingOpening
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"{banana}"
argument_list|,
name|BracesCorrector
operator|.
name|apply
argument_list|(
literal|"banana}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|inputWithMaskedBraces ()
specifier|public
name|void
name|inputWithMaskedBraces
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"\\\\\\{banana"
argument_list|,
name|BracesCorrector
operator|.
name|apply
argument_list|(
literal|"\\\\\\{banana"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|inputWithMixedBraces ()
specifier|public
name|void
name|inputWithMixedBraces
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"{b{anana\\\\\\}}}"
argument_list|,
name|BracesCorrector
operator|.
name|apply
argument_list|(
literal|"{b{anana\\\\\\}"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

