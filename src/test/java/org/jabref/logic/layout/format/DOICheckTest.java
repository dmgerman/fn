begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.layout.format
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|format
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|LayoutFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
DECL|class|DOICheckTest
specifier|public
class|class
name|DOICheckTest
block|{
annotation|@
name|Test
DECL|method|testFormat ()
specifier|public
name|void
name|testFormat
parameter_list|()
block|{
name|LayoutFormatter
name|lf
init|=
operator|new
name|DOICheck
argument_list|()
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|null
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"https://doi.org/10.1000/ISBN1-900512-44-0"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"10.1000/ISBN1-900512-44-0"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"https://doi.org/10.1000/ISBN1-900512-44-0"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"http://dx.doi.org/10.1000/ISBN1-900512-44-0"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"https://doi.org/10.1000/ISBN1-900512-44-0"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"http://doi.acm.org/10.1000/ISBN1-900512-44-0"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"https://doi.org/10.1145/354401.354407"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"http://doi.acm.org/10.1145/354401.354407"
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"https://doi.org/10.1145/354401.354407"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"10.1145/354401.354407"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Works even when having a / at the front
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"https://doi.org/10.1145/354401.354407"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"/10.1145/354401.354407"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Obviously a wrong doi, will not change anything.
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"10"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Obviously a wrong doi, will not change anything.
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|"1"
argument_list|,
name|lf
operator|.
name|format
argument_list|(
literal|"1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

