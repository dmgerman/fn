begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.specialfields
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|specialfields
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|FieldChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|Keyword
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|KeywordList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|specialfields
operator|.
name|SpecialField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|SpecialFieldsUtilsTest
specifier|public
class|class
name|SpecialFieldsUtilsTest
block|{
annotation|@
name|Test
DECL|method|syncKeywordsFromSpecialFieldsWritesToKeywords ()
specifier|public
name|void
name|syncKeywordsFromSpecialFieldsWritesToKeywords
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"ranking"
argument_list|,
literal|"rank2"
argument_list|)
expr_stmt|;
name|SpecialFieldsUtils
operator|.
name|syncKeywordsFromSpecialFields
argument_list|(
name|entry
argument_list|,
literal|','
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
literal|"rank2"
argument_list|)
argument_list|,
name|entry
operator|.
name|getField
argument_list|(
literal|"keywords"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|syncKeywordsFromSpecialFieldsCausesChange ()
specifier|public
name|void
name|syncKeywordsFromSpecialFieldsCausesChange
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"ranking"
argument_list|,
literal|"rank2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldChange
argument_list|>
name|changes
init|=
name|SpecialFieldsUtils
operator|.
name|syncKeywordsFromSpecialFields
argument_list|(
name|entry
argument_list|,
literal|','
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|changes
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|syncKeywordsFromSpecialFieldsOverwritesKeywords ()
specifier|public
name|void
name|syncKeywordsFromSpecialFieldsOverwritesKeywords
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"ranking"
argument_list|,
literal|"rank2"
argument_list|)
expr_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"keywords"
argument_list|,
literal|"rank3"
argument_list|)
expr_stmt|;
name|SpecialFieldsUtils
operator|.
name|syncKeywordsFromSpecialFields
argument_list|(
name|entry
argument_list|,
literal|','
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
literal|"rank2"
argument_list|)
argument_list|,
name|entry
operator|.
name|getField
argument_list|(
literal|"keywords"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|syncKeywordsFromSpecialFieldsForEmptyFieldCausesNoChange ()
specifier|public
name|void
name|syncKeywordsFromSpecialFieldsForEmptyFieldCausesNoChange
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldChange
argument_list|>
name|changes
init|=
name|SpecialFieldsUtils
operator|.
name|syncKeywordsFromSpecialFields
argument_list|(
name|entry
argument_list|,
literal|','
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|changes
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|syncSpecialFieldsFromKeywordWritesToSpecialField ()
specifier|public
name|void
name|syncSpecialFieldsFromKeywordWritesToSpecialField
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"keywords"
argument_list|,
literal|"rank2"
argument_list|)
expr_stmt|;
name|SpecialFieldsUtils
operator|.
name|syncSpecialFieldsFromKeywords
argument_list|(
name|entry
argument_list|,
literal|','
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
literal|"rank2"
argument_list|)
argument_list|,
name|entry
operator|.
name|getField
argument_list|(
literal|"ranking"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|syncSpecialFieldsFromKeywordCausesChange ()
specifier|public
name|void
name|syncSpecialFieldsFromKeywordCausesChange
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"keywords"
argument_list|,
literal|"rank2"
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|FieldChange
argument_list|>
name|changes
init|=
name|SpecialFieldsUtils
operator|.
name|syncSpecialFieldsFromKeywords
argument_list|(
name|entry
argument_list|,
literal|','
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|changes
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|syncSpecialFieldsFromKeywordCausesNoChangeWhenKeywordsAreEmpty ()
specifier|public
name|void
name|syncSpecialFieldsFromKeywordCausesNoChangeWhenKeywordsAreEmpty
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|FieldChange
argument_list|>
name|changes
init|=
name|SpecialFieldsUtils
operator|.
name|syncSpecialFieldsFromKeywords
argument_list|(
name|entry
argument_list|,
literal|','
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|changes
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|updateFieldRemovesSpecialFieldKeywordWhenKeywordSyncIsUsed ()
specifier|public
name|void
name|updateFieldRemovesSpecialFieldKeywordWhenKeywordSyncIsUsed
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|SpecialField
name|specialField
init|=
name|SpecialField
operator|.
name|PRINTED
decl_stmt|;
name|Keyword
name|specialFieldKeyword
init|=
name|specialField
operator|.
name|getKeyWords
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// Add the special field
name|SpecialFieldsUtils
operator|.
name|updateField
argument_list|(
name|specialField
argument_list|,
name|specialFieldKeyword
operator|.
name|get
argument_list|()
argument_list|,
name|entry
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|','
argument_list|)
expr_stmt|;
comment|// Remove it
name|List
argument_list|<
name|FieldChange
argument_list|>
name|changes
init|=
name|SpecialFieldsUtils
operator|.
name|updateField
argument_list|(
name|specialField
argument_list|,
name|specialFieldKeyword
operator|.
name|get
argument_list|()
argument_list|,
name|entry
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|,
literal|','
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|FieldChange
argument_list|(
name|entry
argument_list|,
name|specialField
operator|.
name|getFieldName
argument_list|()
argument_list|,
name|specialFieldKeyword
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|,
operator|new
name|FieldChange
argument_list|(
name|entry
argument_list|,
name|FieldName
operator|.
name|KEYWORDS
argument_list|,
name|specialFieldKeyword
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
argument_list|,
name|changes
argument_list|)
expr_stmt|;
name|KeywordList
name|remainingKeywords
init|=
name|entry
operator|.
name|getKeywords
argument_list|(
literal|','
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|remainingKeywords
operator|.
name|contains
argument_list|(
name|specialFieldKeyword
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

