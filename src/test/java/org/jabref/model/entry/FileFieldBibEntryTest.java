begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|BibtexDatabaseWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|SaveException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|SavePreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|StringSaveSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|OS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|Defaults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|metadata
operator|.
name|MetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|FileFieldBibEntryTest
specifier|public
class|class
name|FileFieldBibEntryTest
block|{
DECL|field|emptyEntry
specifier|private
name|BibEntry
name|emptyEntry
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|emptyEntry
operator|=
operator|new
name|BibEntry
argument_list|()
expr_stmt|;
name|emptyEntry
operator|.
name|setType
argument_list|(
literal|"article"
argument_list|)
expr_stmt|;
name|emptyEntry
operator|.
name|setChanged
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFileFieldSerialization ()
specifier|public
name|void
name|testFileFieldSerialization
parameter_list|()
block|{
name|LinkedFile
name|file
init|=
operator|new
name|LinkedFile
argument_list|(
literal|"test"
argument_list|,
literal|"/home/uers/test.pdf"
argument_list|,
literal|"PDF"
argument_list|)
decl_stmt|;
name|emptyEntry
operator|.
name|addFile
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"@article{,\n"
operator|+
literal|"  file = {test:/home/uers/test.pdf:PDF}\n"
operator|+
literal|"}"
argument_list|,
name|emptyEntry
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFileFieldSerializationDatabase ()
specifier|public
name|void
name|testFileFieldSerializationDatabase
parameter_list|()
throws|throws
name|SaveException
block|{
name|BibDatabase
name|database
init|=
operator|new
name|BibDatabase
argument_list|()
decl_stmt|;
name|LinkedFile
name|file
init|=
operator|new
name|LinkedFile
argument_list|(
literal|"test"
argument_list|,
literal|"/home/uers/test.pdf"
argument_list|,
literal|"PDF"
argument_list|)
decl_stmt|;
name|emptyEntry
operator|.
name|addFile
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|database
operator|.
name|insertEntries
argument_list|(
name|emptyEntry
argument_list|)
expr_stmt|;
name|BibtexDatabaseWriter
argument_list|<
name|StringSaveSession
argument_list|>
name|databaseWriter
init|=
operator|new
name|BibtexDatabaseWriter
argument_list|<>
argument_list|(
name|StringSaveSession
operator|::
operator|new
argument_list|)
decl_stmt|;
name|StringSaveSession
name|saveSession
init|=
name|databaseWriter
operator|.
name|savePartOfDatabase
argument_list|(
operator|new
name|BibDatabaseContext
argument_list|(
name|database
argument_list|,
operator|new
name|MetaData
argument_list|()
argument_list|,
operator|new
name|Defaults
argument_list|()
argument_list|)
argument_list|,
name|database
operator|.
name|getEntries
argument_list|()
argument_list|,
operator|new
name|SavePreferences
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|OS
operator|.
name|NEWLINE
operator|+
literal|"@Article{,"
operator|+
name|OS
operator|.
name|NEWLINE
operator|+
literal|"  file = {test:/home/uers/test.pdf:PDF},"
operator|+
name|OS
operator|.
name|NEWLINE
operator|+
literal|"}"
operator|+
name|OS
operator|.
name|NEWLINE
operator|+
name|OS
operator|.
name|NEWLINE
operator|+
literal|"@Comment{jabref-meta: databaseType:bibtex;}"
operator|+
name|OS
operator|.
name|NEWLINE
argument_list|,
name|saveSession
operator|.
name|getStringValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

