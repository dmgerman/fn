begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
operator|.
name|Parameters
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|EntryLinkListTest
specifier|public
class|class
name|EntryLinkListTest
block|{
annotation|@
name|Test
DECL|method|givenFieldValueAndDatabaseWhenParsingThenExpectLink ()
specifier|public
name|void
name|givenFieldValueAndDatabaseWhenParsingThenExpectLink
parameter_list|()
block|{
name|String
name|fieldValue
init|=
literal|"test"
decl_stmt|;
name|BibDatabase
name|bibDatabase
init|=
operator|new
name|BibDatabase
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ParsedEntryLink
argument_list|>
name|links
init|=
name|EntryLinkList
operator|.
name|parse
argument_list|(
name|fieldValue
argument_list|,
name|bibDatabase
argument_list|)
decl_stmt|;
name|ParsedEntryLink
name|link
init|=
name|links
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|fieldValue
argument_list|,
name|link
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|bibDatabase
argument_list|,
name|link
operator|.
name|getDataBase
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|link
operator|.
name|getLinkedEntry
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|givenNullFieldValueAndDatabaseWhenParsingThenExpectLinksSizeZero ()
specifier|public
name|void
name|givenNullFieldValueAndDatabaseWhenParsingThenExpectLinksSizeZero
parameter_list|()
block|{
name|String
name|fieldValue
init|=
literal|null
decl_stmt|;
name|BibDatabase
name|bibDatabase
init|=
operator|new
name|BibDatabase
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ParsedEntryLink
argument_list|>
name|links
init|=
name|EntryLinkList
operator|.
name|parse
argument_list|(
name|fieldValue
argument_list|,
name|bibDatabase
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|links
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

