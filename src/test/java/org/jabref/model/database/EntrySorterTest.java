begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.database
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|EntrySorterTest
specifier|public
class|class
name|EntrySorterTest
block|{
annotation|@
name|Test
DECL|method|testEmptyEntrySorter ()
specifier|public
name|void
name|testEmptyEntrySorter
parameter_list|()
throws|throws
name|Exception
block|{
name|EntrySorter
name|es
init|=
operator|new
name|EntrySorter
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|Comparator
operator|.
name|comparing
argument_list|(
name|BibEntry
operator|::
name|getId
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|es
operator|.
name|getEntryCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEntrySorterWithOneElement ()
specifier|public
name|void
name|testEntrySorterWithOneElement
parameter_list|()
throws|throws
name|Exception
block|{
name|BibEntry
name|entryA
init|=
operator|new
name|BibEntry
argument_list|(
literal|"article"
argument_list|)
decl_stmt|;
name|EntrySorter
name|es
init|=
operator|new
name|EntrySorter
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|entryA
argument_list|)
argument_list|,
name|Comparator
operator|.
name|comparing
argument_list|(
name|BibEntry
operator|::
name|getId
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|es
operator|.
name|getEntryCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entryA
argument_list|,
name|es
operator|.
name|getEntryAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testEntrySorterWithTwoElements ()
specifier|public
name|void
name|testEntrySorterWithTwoElements
parameter_list|()
throws|throws
name|Exception
block|{
name|BibEntry
name|entryB
init|=
operator|new
name|BibEntry
argument_list|(
literal|"article"
argument_list|)
decl_stmt|;
name|entryB
operator|.
name|setId
argument_list|(
literal|"2"
argument_list|)
expr_stmt|;
name|BibEntry
name|entryA
init|=
operator|new
name|BibEntry
argument_list|(
literal|"article"
argument_list|)
decl_stmt|;
name|entryB
operator|.
name|setId
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|EntrySorter
name|es
init|=
operator|new
name|EntrySorter
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|entryB
argument_list|,
name|entryA
argument_list|)
argument_list|,
name|Comparator
operator|.
name|comparing
argument_list|(
name|BibEntry
operator|::
name|getId
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|es
operator|.
name|getEntryCount
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entryA
argument_list|,
name|es
operator|.
name|getEntryAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|entryB
argument_list|,
name|es
operator|.
name|getEntryAt
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

