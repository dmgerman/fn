begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.gui
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|testutils
operator|.
name|category
operator|.
name|GUITests
import|;
end_import

begin_import
import|import
name|org
operator|.
name|assertj
operator|.
name|swing
operator|.
name|fixture
operator|.
name|JTableFixture
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|experimental
operator|.
name|categories
operator|.
name|Category
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runner
operator|.
name|RunWith
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|runners
operator|.
name|Parameterized
import|;
end_import

begin_class
annotation|@
name|RunWith
argument_list|(
name|Parameterized
operator|.
name|class
argument_list|)
annotation|@
name|Category
argument_list|(
name|GUITests
operator|.
name|class
argument_list|)
DECL|class|ParameterizedMenuNewEntryTest
specifier|public
class|class
name|ParameterizedMenuNewEntryTest
extends|extends
name|AbstractUITest
block|{
DECL|field|databaseMode
specifier|private
specifier|final
name|String
name|databaseMode
decl_stmt|;
DECL|field|entryType
specifier|private
specifier|final
name|String
name|entryType
decl_stmt|;
DECL|method|ParameterizedMenuNewEntryTest (String databaseMode, String entryType)
specifier|public
name|ParameterizedMenuNewEntryTest
parameter_list|(
name|String
name|databaseMode
parameter_list|,
name|String
name|entryType
parameter_list|)
block|{
name|this
operator|.
name|databaseMode
operator|=
name|databaseMode
expr_stmt|;
name|this
operator|.
name|entryType
operator|=
name|entryType
expr_stmt|;
block|}
comment|// Not working on Travis
annotation|@
name|Test
DECL|method|addEntryOfGivenType ()
specifier|public
name|void
name|addEntryOfGivenType
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"File"
argument_list|,
literal|"New "
operator|+
name|databaseMode
operator|+
literal|" database"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|JTableFixture
name|entryTable
init|=
name|mainFrame
operator|.
name|table
argument_list|()
decl_stmt|;
name|entryTable
operator|.
name|requireRowCount
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"BibTeX"
argument_list|,
literal|"New entry by type..."
argument_list|,
name|StringUtil
operator|.
name|capitalizeFirst
argument_list|(
name|entryType
argument_list|)
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|entryTable
operator|.
name|requireRowCount
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Parameterized
operator|.
name|Parameters
argument_list|(
name|name
operator|=
literal|"{index}: {0} : {1}"
argument_list|)
DECL|method|instancesToTest ()
specifier|public
specifier|static
name|Collection
argument_list|<
name|Object
index|[]
argument_list|>
name|instancesToTest
parameter_list|()
block|{
comment|// Create entry from menu
comment|// Structure:
comment|// {"BibTeX"/"biblatex", "type"}
comment|// @formatter:off
return|return
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"article"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"inbook"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"book"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"booklet"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"incollection"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"conference"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"inproceedings"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"proceedings"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"manual"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"mastersthesis"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"phdthesis"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"techreport"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"unpublished"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"BibTeX"
block|,
literal|"misc"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"article"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"inbook"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"book"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"booklet"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"incollection"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"conference"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"inproceedings"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"proceedings"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"manual"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"mastersthesis"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"phdthesis"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"techreport"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"unpublished"
block|}
argument_list|,
operator|new
name|Object
index|[]
block|{
literal|"biblatex"
block|,
literal|"misc"
block|}
argument_list|)
return|;
comment|// @formatter:on
block|}
block|}
end_class

end_unit

