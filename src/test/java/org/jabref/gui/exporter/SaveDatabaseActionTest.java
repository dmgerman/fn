begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.exporter
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|exporter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileDialogConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|shared
operator|.
name|DatabaseLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntryTypesManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|doNothing
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|spy
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|times
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
DECL|class|SaveDatabaseActionTest
class|class
name|SaveDatabaseActionTest
block|{
DECL|field|TEST_FILE_PATH
specifier|private
specifier|static
specifier|final
name|String
name|TEST_FILE_PATH
init|=
literal|"C:\\Users\\John_Doe\\Jabref"
decl_stmt|;
DECL|field|file
specifier|private
specifier|final
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|TEST_FILE_PATH
argument_list|)
decl_stmt|;
DECL|field|path
specifier|private
name|Optional
argument_list|<
name|Path
argument_list|>
name|path
init|=
name|Optional
operator|.
name|of
argument_list|(
name|file
operator|.
name|toPath
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|dialogService
specifier|private
name|DialogService
name|dialogService
init|=
name|mock
argument_list|(
name|DialogService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|preferences
specifier|private
name|JabRefPreferences
name|preferences
init|=
name|mock
argument_list|(
name|JabRefPreferences
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|basePanel
specifier|private
name|BasePanel
name|basePanel
init|=
name|mock
argument_list|(
name|BasePanel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|jabRefFrame
specifier|private
name|JabRefFrame
name|jabRefFrame
init|=
name|mock
argument_list|(
name|JabRefFrame
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|dbContext
specifier|private
name|BibDatabaseContext
name|dbContext
init|=
name|spy
argument_list|(
name|BibDatabaseContext
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|saveDatabaseAction
specifier|private
name|SaveDatabaseAction
name|saveDatabaseAction
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|when
argument_list|(
name|basePanel
operator|.
name|frame
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|jabRefFrame
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|basePanel
operator|.
name|getBibDatabaseContext
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|dbContext
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|jabRefFrame
operator|.
name|getDialogService
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|dialogService
argument_list|)
expr_stmt|;
name|saveDatabaseAction
operator|=
name|spy
argument_list|(
operator|new
name|SaveDatabaseAction
argument_list|(
name|basePanel
argument_list|,
name|preferences
argument_list|,
name|mock
argument_list|(
name|BibEntryTypesManager
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|saveAsShouldSetWorkingDirectory ()
specifier|public
name|void
name|saveAsShouldSetWorkingDirectory
parameter_list|()
block|{
name|when
argument_list|(
name|preferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|WORKING_DIRECTORY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TEST_FILE_PATH
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|dialogService
operator|.
name|showFileSaveDialog
argument_list|(
name|any
argument_list|(
name|FileDialogConfiguration
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|saveDatabaseAction
argument_list|)
operator|.
name|saveAs
argument_list|(
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|saveDatabaseAction
operator|.
name|saveAs
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|preferences
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|setWorkingDir
argument_list|(
name|path
operator|.
name|get
argument_list|()
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|saveAsShouldNotSetWorkingDirectoryIfNotSelected ()
specifier|public
name|void
name|saveAsShouldNotSetWorkingDirectoryIfNotSelected
parameter_list|()
block|{
name|when
argument_list|(
name|preferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|WORKING_DIRECTORY
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|TEST_FILE_PATH
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|dialogService
operator|.
name|showFileSaveDialog
argument_list|(
name|any
argument_list|(
name|FileDialogConfiguration
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|saveDatabaseAction
argument_list|)
operator|.
name|saveAs
argument_list|(
name|any
argument_list|()
argument_list|)
expr_stmt|;
name|saveDatabaseAction
operator|.
name|saveAs
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|preferences
argument_list|,
name|times
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|setWorkingDir
argument_list|(
name|path
operator|.
name|get
argument_list|()
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|saveAsShouldSetNewDatabasePathIntoContext ()
specifier|public
name|void
name|saveAsShouldSetNewDatabasePathIntoContext
parameter_list|()
block|{
name|when
argument_list|(
name|dbContext
operator|.
name|getDatabasePath
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|dbContext
operator|.
name|getLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DatabaseLocation
operator|.
name|LOCAL
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|preferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|LOCAL_AUTO_SAVE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|saveDatabaseAction
operator|.
name|saveAs
argument_list|(
name|file
operator|.
name|toPath
argument_list|()
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|dbContext
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|setDatabaseFile
argument_list|(
name|file
operator|.
name|toPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|saveShouldShowSaveAsIfDatabaseNotSelected ()
specifier|public
name|void
name|saveShouldShowSaveAsIfDatabaseNotSelected
parameter_list|()
block|{
name|when
argument_list|(
name|dbContext
operator|.
name|getDatabasePath
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|dbContext
operator|.
name|getLocation
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|DatabaseLocation
operator|.
name|LOCAL
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|preferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|LOCAL_AUTO_SAVE
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|dialogService
operator|.
name|showFileSaveDialog
argument_list|(
name|any
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|doNothing
argument_list|()
operator|.
name|when
argument_list|(
name|saveDatabaseAction
argument_list|)
operator|.
name|saveAs
argument_list|(
name|file
operator|.
name|toPath
argument_list|()
argument_list|)
expr_stmt|;
name|saveDatabaseAction
operator|.
name|save
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|saveDatabaseAction
argument_list|,
name|times
argument_list|(
literal|1
argument_list|)
argument_list|)
operator|.
name|saveAs
argument_list|(
name|file
operator|.
name|toPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|saveShouldNotSaveDatabaseIfPathNotSet ()
specifier|public
name|void
name|saveShouldNotSaveDatabaseIfPathNotSet
parameter_list|()
block|{
name|when
argument_list|(
name|dbContext
operator|.
name|getDatabasePath
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|result
init|=
name|saveDatabaseAction
operator|.
name|save
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|result
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

