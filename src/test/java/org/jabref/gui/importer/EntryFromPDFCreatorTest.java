begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.importer
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|JabRefGUI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
operator|.
name|ExternalFileTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ImportDataTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|testutils
operator|.
name|category
operator|.
name|GUITest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|BeforeEach
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Disabled
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Answers
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|jupiter
operator|.
name|api
operator|.
name|Assertions
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_class
annotation|@
name|GUITest
DECL|class|EntryFromPDFCreatorTest
specifier|public
class|class
name|EntryFromPDFCreatorTest
block|{
DECL|field|entryCreator
specifier|private
name|EntryFromPDFCreator
name|entryCreator
decl_stmt|;
annotation|@
name|BeforeEach
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
comment|// Needed to initialize ExternalFileTypes
name|entryCreator
operator|=
operator|new
name|EntryFromPDFCreator
argument_list|(
name|mock
argument_list|(
name|ExternalFileTypes
operator|.
name|class
argument_list|,
name|Answers
operator|.
name|RETURNS_DEEP_STUBS
argument_list|)
argument_list|)
expr_stmt|;
comment|// Needed for PdfImporter - still not enough
name|JabRefGUI
operator|.
name|setMainFrame
argument_list|(
name|mock
argument_list|(
name|JabRefFrame
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPDFFileFilter ()
specifier|public
name|void
name|testPDFFileFilter
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|entryCreator
operator|.
name|accept
argument_list|(
operator|new
name|File
argument_list|(
literal|"aPDF.pdf"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|entryCreator
operator|.
name|accept
argument_list|(
operator|new
name|File
argument_list|(
literal|"aPDF.PDF"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|entryCreator
operator|.
name|accept
argument_list|(
operator|new
name|File
argument_list|(
literal|"foo.jpg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCreationOfEntryNoPDF ()
specifier|public
name|void
name|testCreationOfEntryNoPDF
parameter_list|()
block|{
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|entry
init|=
name|entryCreator
operator|.
name|createEntry
argument_list|(
name|ImportDataTest
operator|.
name|NOT_EXISTING_PDF
operator|.
name|toFile
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|entry
operator|.
name|isPresent
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
annotation|@
name|Disabled
comment|//Can't mock basepanel and maintable
DECL|method|testCreationOfEntryNotInDatabase ()
specifier|public
name|void
name|testCreationOfEntryNotInDatabase
parameter_list|()
block|{
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|entry
init|=
name|entryCreator
operator|.
name|createEntry
argument_list|(
name|ImportDataTest
operator|.
name|FILE_NOT_IN_DATABASE
operator|.
name|toFile
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|entry
operator|.
name|isPresent
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|entry
operator|.
name|get
argument_list|()
operator|.
name|getField
argument_list|(
literal|"file"
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|":PDF"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|ImportDataTest
operator|.
name|FILE_NOT_IN_DATABASE
operator|.
name|getFileName
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|entry
operator|.
name|get
argument_list|()
operator|.
name|getField
argument_list|(
literal|"title"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

