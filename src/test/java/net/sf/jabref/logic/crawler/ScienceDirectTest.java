begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.crawler
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|crawler
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|crawler
operator|.
name|ScienceDirect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_class
DECL|class|ScienceDirectTest
specifier|public
class|class
name|ScienceDirectTest
block|{
DECL|field|finder
name|ScienceDirect
name|finder
decl_stmt|;
DECL|field|entry
name|BibtexEntry
name|entry
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|finder
operator|=
operator|new
name|ScienceDirect
argument_list|()
expr_stmt|;
name|entry
operator|=
operator|new
name|BibtexEntry
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
DECL|method|rejectNullParameter ()
specifier|public
name|void
name|rejectNullParameter
parameter_list|()
throws|throws
name|IOException
block|{
name|finder
operator|.
name|findFullText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/*     @Test     public void findFullTextURL() throws IOException {         Assert.assertEquals(                 new URL("http://www.sciencedirect.com/science/article/pii/S2212671614001024/pdf?md5=4e2e9a369b4d5b3db5100aba599bef8b&pid=1-s2.0-S2212671614001024-main.pdf"),                 finder.findFullTextURL(new URL("http://www.sciencedirect.com/science/article/pii/S2212671614001024"))         );     }      @Test     public void nullWithNoFullTextURL() throws IOException {         Assert.assertNull(finder.findFullTextURL(new URL("http://www.sciencedirect.com/science/journals")));     }     */
block|}
end_class

end_unit

