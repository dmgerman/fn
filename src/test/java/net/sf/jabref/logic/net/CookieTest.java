begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.net
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
DECL|class|CookieTest
specifier|public
class|class
name|CookieTest
block|{
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testIncorrectExpiresFormat ()
specifier|public
name|void
name|testIncorrectExpiresFormat
parameter_list|()
throws|throws
name|URISyntaxException
block|{
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"name=TestCookie; expires=Tue, 25/07/10 16:43:15 GMT"
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testIncorrectDomain ()
specifier|public
name|void
name|testIncorrectDomain
parameter_list|()
throws|throws
name|URISyntaxException
block|{
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"name=TestCookie; domain=google.com"
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHasExpiredFalse ()
specifier|public
name|void
name|testHasExpiredFalse
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"name=TestCookie; expires=Tue, 25-Jul-45 16:43:15 GMT"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cookie
operator|.
name|hasExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHasExpiredFalseWhenNotSet ()
specifier|public
name|void
name|testHasExpiredFalseWhenNotSet
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"name=TestCookie; domain=jabref.org; path=/"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cookie
operator|.
name|hasExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHasExpiredTrueSpaceFormat ()
specifier|public
name|void
name|testHasExpiredTrueSpaceFormat
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"name=Nicholas; expires=Sat, 02 May 2009 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cookie
operator|.
name|hasExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHasExpiredTrueHyphenFormat ()
specifier|public
name|void
name|testHasExpiredTrueHyphenFormat
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"name=Nicholas; expires=Sat, 02-May-2009 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cookie
operator|.
name|hasExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testHasExpiredTrueTwoDigitYearHyphenFormat ()
specifier|public
name|void
name|testHasExpiredTrueTwoDigitYearHyphenFormat
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"name=Nicholas; expires=Sat, 02-May-09 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cookie
operator|.
name|hasExpired
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMatches ()
specifier|public
name|void
name|testMatches
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"LSID=LSDLSD; Domain=jabref.org; Path=/; Secure; expires=Sat, 02-May-99 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cookie
operator|.
name|matches
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMatchesWWWInDomain ()
specifier|public
name|void
name|testMatchesWWWInDomain
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://www.jabref.org/"
argument_list|)
argument_list|,
literal|"LSID=LSDLSD; Domain=www.jabref.org; Path=/; Secure; expires=Sat, 02-May-99 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cookie
operator|.
name|matches
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMatchesDotInDomain ()
specifier|public
name|void
name|testMatchesDotInDomain
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"LSID=LSDLSD; Domain=.jabref.org; Path=/; Secure; expires=Sat, 02-May-99 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|cookie
operator|.
name|matches
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNotMatchesWhenExpired ()
specifier|public
name|void
name|testNotMatchesWhenExpired
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"LSID=LSDLSD; Domain=jabref.org; Path=/; Secure; expires=Sat, 02-May-09 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cookie
operator|.
name|matches
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testNotMatchesWrongPath ()
specifier|public
name|void
name|testNotMatchesWrongPath
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"LSID=LSDLSD; Domain=jabref.org; Path=/blog/; Secure; expires=Sat, 02-May-99 23:38:25 GMT"
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|cookie
operator|.
name|matches
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testToString ()
specifier|public
name|void
name|testToString
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Cookie
name|cookie
init|=
operator|new
name|Cookie
argument_list|(
operator|new
name|URI
argument_list|(
literal|"http://jabref.org/"
argument_list|)
argument_list|,
literal|"LSID=LSDLSD; Domain=jabref.org; Path=/; Secure"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"LSID=LSDLSD"
argument_list|,
name|cookie
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

