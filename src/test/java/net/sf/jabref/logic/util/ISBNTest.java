begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.util
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|ISBNTest
specifier|public
class|class
name|ISBNTest
block|{
annotation|@
name|Test
DECL|method|testIsValidFormat10Correct ()
specifier|public
name|void
name|testIsValidFormat10Correct
parameter_list|()
block|{
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-123456-47-9"
argument_list|)
operator|.
name|isValidFormat
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-9752298-0-X"
argument_list|)
operator|.
name|isValidFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsValidFormat10Incorrect ()
specifier|public
name|void
name|testIsValidFormat10Incorrect
parameter_list|()
block|{
name|assertFalse
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-12B456-47-9"
argument_list|)
operator|.
name|isValidFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsValidChecksum10Correct ()
specifier|public
name|void
name|testIsValidChecksum10Correct
parameter_list|()
block|{
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-123456-47-9"
argument_list|)
operator|.
name|isValidChecksum
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-9752298-0-X"
argument_list|)
operator|.
name|isValidChecksum
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-9752298-0-x"
argument_list|)
operator|.
name|isValidChecksum
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsValidChecksum10Incorrect ()
specifier|public
name|void
name|testIsValidChecksum10Incorrect
parameter_list|()
block|{
name|assertFalse
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-123456-47-8"
argument_list|)
operator|.
name|isValidChecksum
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsValidFormat13Correct ()
specifier|public
name|void
name|testIsValidFormat13Correct
parameter_list|()
block|{
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"978-1-56619-909-4"
argument_list|)
operator|.
name|isValidFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsValidFormat13Incorrect ()
specifier|public
name|void
name|testIsValidFormat13Incorrect
parameter_list|()
block|{
name|assertFalse
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"978-1-56619-9O9-4 "
argument_list|)
operator|.
name|isValidFormat
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsValidChecksum13Correct ()
specifier|public
name|void
name|testIsValidChecksum13Correct
parameter_list|()
block|{
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"978-1-56619-909-4 "
argument_list|)
operator|.
name|isValidChecksum
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsValidChecksum13Incorrect ()
specifier|public
name|void
name|testIsValidChecksum13Incorrect
parameter_list|()
block|{
name|assertFalse
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"978-1-56619-909-5"
argument_list|)
operator|.
name|isValidChecksum
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsIsbn10Correct ()
specifier|public
name|void
name|testIsIsbn10Correct
parameter_list|()
block|{
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-123456-47-9"
argument_list|)
operator|.
name|isIsbn10
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-9752298-0-X"
argument_list|)
operator|.
name|isIsbn10
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsIsbn10Incorrect ()
specifier|public
name|void
name|testIsIsbn10Incorrect
parameter_list|()
block|{
name|assertFalse
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"978-1-56619-909-4"
argument_list|)
operator|.
name|isIsbn10
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsIsbn13Correct ()
specifier|public
name|void
name|testIsIsbn13Correct
parameter_list|()
block|{
name|assertTrue
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"978-1-56619-909-4"
argument_list|)
operator|.
name|isIsbn13
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIsIsbn13Incorrect ()
specifier|public
name|void
name|testIsIsbn13Incorrect
parameter_list|()
block|{
name|assertFalse
argument_list|(
operator|new
name|ISBN
argument_list|(
literal|"0-123456-47-9"
argument_list|)
operator|.
name|isIsbn13
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

