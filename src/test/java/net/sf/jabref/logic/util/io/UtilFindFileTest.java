begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.util.io
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|FileBasedTestCase
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Ignore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_comment
comment|/**  * Testing Util.findFile for finding files based on regular expressions.  *  * @author Christopher Oezbek<oezi@oezi.de>  */
end_comment

begin_class
DECL|class|UtilFindFileTest
specifier|public
class|class
name|UtilFindFileTest
extends|extends
name|FileBasedTestCase
block|{
annotation|@
name|Test
annotation|@
name|Ignore
argument_list|(
name|value
operator|=
literal|"works on windows but not on linux"
argument_list|)
DECL|method|testFindAssociatedFiles ()
specifier|public
name|void
name|testFindAssociatedFiles
parameter_list|()
block|{
name|Collection
argument_list|<
name|BibEntry
argument_list|>
name|entries
init|=
name|Collections
operator|.
name|singletonList
argument_list|(
name|entry
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|extensions
init|=
name|Arrays
operator|.
name|asList
argument_list|(
literal|"jpg"
argument_list|,
literal|"pdf"
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|File
argument_list|>
name|dirs
init|=
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|File
argument_list|(
name|root
operator|.
name|getAbsoluteFile
argument_list|()
operator|+
literal|"/pdfs/"
argument_list|)
argument_list|,
operator|new
name|File
argument_list|(
name|root
operator|.
name|getAbsoluteFile
argument_list|()
operator|+
literal|"/graphicsDir/"
argument_list|)
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|BibEntry
argument_list|,
name|List
argument_list|<
name|File
argument_list|>
argument_list|>
name|results
init|=
name|FileUtil
operator|.
name|findAssociatedFiles
argument_list|(
name|entries
argument_list|,
name|extensions
argument_list|,
name|dirs
argument_list|,
name|Globals
operator|.
name|prefs
argument_list|)
decl_stmt|;
name|Assert
operator|.
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|results
operator|.
name|get
argument_list|(
name|entry
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|results
operator|.
name|get
argument_list|(
name|entry
argument_list|)
operator|.
name|contains
argument_list|(
operator|new
name|File
argument_list|(
name|root
operator|.
name|getAbsoluteFile
argument_list|()
operator|+
literal|"/graphicsDir/subDir/HipKro03test.jpg"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertFalse
argument_list|(
name|results
operator|.
name|get
argument_list|(
name|entry
argument_list|)
operator|.
name|contains
argument_list|(
operator|new
name|File
argument_list|(
name|root
operator|.
name|getAbsoluteFile
argument_list|()
operator|+
literal|"/graphicsDir/subDir/HipKro03test.png"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|Assert
operator|.
name|assertTrue
argument_list|(
name|results
operator|.
name|get
argument_list|(
name|entry
argument_list|)
operator|.
name|contains
argument_list|(
operator|new
name|File
argument_list|(
name|root
operator|.
name|getAbsoluteFile
argument_list|()
operator|+
literal|"/pdfs/sub/HipKro03-sub.pdf"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

