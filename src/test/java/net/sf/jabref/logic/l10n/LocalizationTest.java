begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.l10n
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|AfterClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|BeforeClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|LocalizationTest
specifier|public
class|class
name|LocalizationTest
block|{
annotation|@
name|BeforeClass
annotation|@
name|AfterClass
DECL|method|loadTranslationDefaultLocale ()
specifier|public
specifier|static
name|void
name|loadTranslationDefaultLocale
parameter_list|()
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|Locale
operator|.
name|getDefault
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testSetKnownLanguage ()
specifier|public
name|void
name|testSetKnownLanguage
parameter_list|()
block|{
name|Locale
name|before
init|=
name|Locale
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|Locale
operator|.
name|setDefault
argument_list|(
name|Locale
operator|.
name|CHINA
argument_list|)
expr_stmt|;
name|Localization
operator|.
name|setLanguage
argument_list|(
literal|"en"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"en"
argument_list|,
name|Locale
operator|.
name|getDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|Locale
operator|.
name|setDefault
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testSetUnknownLanguage ()
specifier|public
name|void
name|testSetUnknownLanguage
parameter_list|()
block|{
name|Locale
name|before
init|=
name|Locale
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|Locale
operator|.
name|setDefault
argument_list|(
name|Locale
operator|.
name|CHINA
argument_list|)
expr_stmt|;
name|Localization
operator|.
name|setLanguage
argument_list|(
literal|"WHATEVER"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|Locale
operator|.
name|CHINA
operator|.
name|toString
argument_list|()
argument_list|,
name|Locale
operator|.
name|getDefault
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|Locale
operator|.
name|setDefault
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testKnownTranslation ()
specifier|public
name|void
name|testKnownTranslation
parameter_list|()
block|{
name|Locale
name|before
init|=
name|Locale
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|Localization
operator|.
name|setLanguage
argument_list|(
literal|"en"
argument_list|)
expr_stmt|;
name|String
name|knownKey
init|=
literal|"Groups"
decl_stmt|;
name|assertEquals
argument_list|(
name|knownKey
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
name|knownKey
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|knownKey
argument_list|,
name|Localization
operator|.
name|menuTitle
argument_list|(
name|knownKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|Locale
operator|.
name|setDefault
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
DECL|method|testUnknownTranslation ()
specifier|public
name|void
name|testUnknownTranslation
parameter_list|()
block|{
name|Locale
name|before
init|=
name|Locale
operator|.
name|getDefault
argument_list|()
decl_stmt|;
try|try
block|{
name|Localization
operator|.
name|setLanguage
argument_list|(
literal|"en"
argument_list|)
expr_stmt|;
name|String
name|knownKey
init|=
literal|"WHATEVER"
decl_stmt|;
name|assertEquals
argument_list|(
name|knownKey
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
name|knownKey
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|knownKey
argument_list|,
name|Localization
operator|.
name|menuTitle
argument_list|(
name|knownKey
argument_list|)
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|Locale
operator|.
name|setDefault
argument_list|(
name|before
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

