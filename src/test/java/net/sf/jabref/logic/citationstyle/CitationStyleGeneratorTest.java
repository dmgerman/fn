begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.citationstyle
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|citationstyle
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
DECL|class|CitationStyleGeneratorTest
specifier|public
class|class
name|CitationStyleGeneratorTest
block|{
annotation|@
name|Test
DECL|method|testIgnoreNewLine ()
specifier|public
name|void
name|testIgnoreNewLine
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
name|FieldName
operator|.
name|AUTHOR
argument_list|,
literal|"Last, First and\nDoe, Jane"
argument_list|)
expr_stmt|;
comment|// if the default citation style changes this has to be modified
name|String
name|expected
init|=
literal|"<div class=\"csl-entry\">\n"
operator|+
literal|"<div class=\"csl-left-margin\">[1]</div><div class=\"csl-right-inline\">F. Last and J. Doe, .</div>\n"
operator|+
literal|"</div>\n"
decl_stmt|;
name|String
name|citation
init|=
name|CitationStyleGenerator
operator|.
name|generateCitation
argument_list|(
name|entry
argument_list|,
name|CitationStyle
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|citation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testIgnoreCarriageReturnNewLine ()
specifier|public
name|void
name|testIgnoreCarriageReturnNewLine
parameter_list|()
block|{
name|BibEntry
name|entry
init|=
operator|new
name|BibEntry
argument_list|()
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
name|FieldName
operator|.
name|AUTHOR
argument_list|,
literal|"Last, First and\r\nDoe, Jane"
argument_list|)
expr_stmt|;
comment|// if the default citation style changes this has to be modified
name|String
name|expected
init|=
literal|"<div class=\"csl-entry\">\n"
operator|+
literal|"<div class=\"csl-left-margin\">[1]</div><div class=\"csl-right-inline\">F. Last and J. Doe, .</div>\n"
operator|+
literal|"</div>\n"
decl_stmt|;
name|String
name|citation
init|=
name|CitationStyleGenerator
operator|.
name|generateCitation
argument_list|(
name|entry
argument_list|,
name|CitationStyle
operator|.
name|getDefault
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|citation
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testMissingCitationStyle ()
specifier|public
name|void
name|testMissingCitationStyle
parameter_list|()
block|{
name|String
name|expected
init|=
name|Localization
operator|.
name|lang
argument_list|(
literal|"Cannot generate preview based on selected citation style."
argument_list|)
decl_stmt|;
name|String
name|citation
init|=
name|CitationStyleGenerator
operator|.
name|generateCitation
argument_list|(
operator|new
name|BibEntry
argument_list|()
argument_list|,
literal|"faulty citation style"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|citation
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

