begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.search
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
DECL|class|SearchQueryHighlightObservableTest
specifier|public
class|class
name|SearchQueryHighlightObservableTest
block|{
annotation|@
name|Test
DECL|method|testUsage ()
specifier|public
name|void
name|testUsage
parameter_list|()
block|{
name|SearchQueryHighlightObservable
name|observable
init|=
operator|new
name|SearchQueryHighlightObservable
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|observable
operator|.
name|getListenerCount
argument_list|()
argument_list|)
expr_stmt|;
name|observable
operator|.
name|fireSearchlistenerEvent
argument_list|(
operator|new
name|SearchQuery
argument_list|(
literal|"test"
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|SearchQueryHighlightListener
name|listener
init|=
name|highlightPattern
lambda|->
name|assertTrue
argument_list|(
literal|"pattern must be there"
argument_list|,
name|highlightPattern
operator|.
name|isPresent
argument_list|()
argument_list|)
decl_stmt|;
name|observable
operator|.
name|addSearchListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|observable
operator|.
name|getListenerCount
argument_list|()
argument_list|)
expr_stmt|;
name|observable
operator|.
name|addSearchListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|observable
operator|.
name|getListenerCount
argument_list|()
argument_list|)
expr_stmt|;
name|observable
operator|.
name|fireSearchlistenerEvent
argument_list|(
operator|new
name|SearchQuery
argument_list|(
literal|"test"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|observable
operator|.
name|removeSearchListener
argument_list|(
name|listener
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|observable
operator|.
name|getListenerCount
argument_list|()
argument_list|)
expr_stmt|;
name|observable
operator|.
name|fireSearchlistenerEvent
argument_list|(
operator|new
name|SearchQuery
argument_list|(
literal|"author=harrer"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|observable
operator|.
name|addSearchListener
argument_list|(
name|p
lambda|->
name|assertEquals
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|p
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|observable
operator|.
name|getListenerCount
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

