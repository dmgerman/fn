begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.importer
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|fail
import|;
end_import

begin_class
DECL|class|ImportFormatReaderTestParameterless
specifier|public
class|class
name|ImportFormatReaderTestParameterless
block|{
DECL|field|reader
specifier|private
name|ImportFormatReader
name|reader
decl_stmt|;
annotation|@
name|Before
DECL|method|setUp ()
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|Globals
operator|.
name|prefs
operator|=
name|JabRefPreferences
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|reader
operator|=
operator|new
name|ImportFormatReader
argument_list|()
expr_stmt|;
name|reader
operator|.
name|resetImportFormats
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testImportUnknownFormatNotWorking ()
specifier|public
name|void
name|testImportUnknownFormatNotWorking
parameter_list|()
throws|throws
name|URISyntaxException
block|{
name|Path
name|file
init|=
name|Paths
operator|.
name|get
argument_list|(
name|ImportFormatReaderTestParameterless
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"fileformat/emptyFile.xml"
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|ImportFormatReader
operator|.
name|UnknownFormatImport
name|unknownFormat
init|=
name|reader
operator|.
name|importUnknownFormat
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|unknownFormat
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|NullPointerException
operator|.
name|class
argument_list|)
DECL|method|testNullImportUnknownFormat ()
specifier|public
name|void
name|testNullImportUnknownFormat
parameter_list|()
block|{
name|reader
operator|.
name|importUnknownFormat
argument_list|(
operator|(
name|Path
operator|)
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
DECL|method|testImportFromFileUnknownFormat ()
specifier|public
name|void
name|testImportFromFileUnknownFormat
parameter_list|()
throws|throws
name|IOException
block|{
name|reader
operator|.
name|importFromFile
argument_list|(
literal|"someunknownformat"
argument_list|,
name|Paths
operator|.
name|get
argument_list|(
literal|"somepath"
argument_list|)
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

