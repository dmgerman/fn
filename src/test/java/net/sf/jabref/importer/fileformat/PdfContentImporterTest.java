begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.importer.fileformat
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|importer
operator|.
name|fileformat
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
DECL|class|PdfContentImporterTest
specifier|public
class|class
name|PdfContentImporterTest
block|{
annotation|@
name|Test
DECL|method|doesNotHandleEncryptedPdfs ()
specifier|public
name|void
name|doesNotHandleEncryptedPdfs
parameter_list|()
throws|throws
name|IOException
block|{
name|PdfContentImporter
name|importer
init|=
operator|new
name|PdfContentImporter
argument_list|()
decl_stmt|;
try|try
init|(
name|InputStream
name|is
init|=
name|PdfContentImporter
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
literal|"/pdfs/encrypted.pdf"
argument_list|)
init|)
block|{
name|List
argument_list|<
name|BibEntry
argument_list|>
name|result
init|=
name|importer
operator|.
name|importDatabase
argument_list|(
name|is
argument_list|)
operator|.
name|getDatabase
argument_list|()
operator|.
name|getEntries
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|Collections
operator|.
name|emptyList
argument_list|()
argument_list|,
name|result
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

