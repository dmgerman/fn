begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.external
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|external
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|fetcher
operator|.
name|FullTextFinder
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
DECL|class|FindFullTextTest
specifier|public
class|class
name|FindFullTextTest
block|{
DECL|field|entry
specifier|private
name|BibEntry
name|entry
decl_stmt|;
annotation|@
name|Before
DECL|method|setup ()
specifier|public
name|void
name|setup
parameter_list|()
block|{
name|entry
operator|=
operator|new
name|BibEntry
argument_list|()
expr_stmt|;
block|}
annotation|@
name|After
DECL|method|teardown ()
specifier|public
name|void
name|teardown
parameter_list|()
block|{
name|entry
operator|=
literal|null
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|acceptPdfUrls ()
specifier|public
name|void
name|acceptPdfUrls
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|pdfUrl
init|=
operator|new
name|URL
argument_list|(
literal|"https://github.com/JabRef/jabref/tree/master/src/test/resources/net/sf/jabref/logic/io/empty.pdf"
argument_list|)
decl_stmt|;
name|FullTextFinder
name|finder
init|=
parameter_list|(
name|e
parameter_list|)
lambda|->
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
decl_stmt|;
name|FindFullText
name|fetcher
init|=
operator|new
name|FindFullText
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|finder
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
argument_list|,
name|fetcher
operator|.
name|findFullTextPDF
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|rejectNonPdfUrls ()
specifier|public
name|void
name|rejectNonPdfUrls
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|pdfUrl
init|=
operator|new
name|URL
argument_list|(
literal|"https://github.com/JabRef/jabref/blob/master/README.md"
argument_list|)
decl_stmt|;
name|FullTextFinder
name|finder
init|=
parameter_list|(
name|e
parameter_list|)
lambda|->
name|Optional
operator|.
name|of
argument_list|(
name|pdfUrl
argument_list|)
decl_stmt|;
name|FindFullText
name|fetcher
init|=
operator|new
name|FindFullText
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|finder
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|Optional
operator|.
name|empty
argument_list|()
argument_list|,
name|fetcher
operator|.
name|findFullTextPDF
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

