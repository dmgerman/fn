begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|com.incors.plaf
package|package
name|com
operator|.
name|incors
operator|.
name|plaf
package|;
end_package

begin_comment
comment|/*  * This code was contributed by Sebastian Ferreyra (sebastianf@citycolor.net).  * It is published under the terms of the GNU Lesser General Public License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|PaintContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|ColorModel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|Raster
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|WritableRaster
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|WeakHashMap
import|;
end_import

begin_class
DECL|class|FastGradientPaintContext
class|class
name|FastGradientPaintContext
implements|implements
name|PaintContext
block|{
DECL|class|GradientInfo
specifier|private
class|class
name|GradientInfo
block|{
DECL|field|model
name|ColorModel
name|model
decl_stmt|;
DECL|field|parallelLength
DECL|field|startColor
DECL|field|endColor
name|int
name|parallelLength
decl_stmt|,
name|startColor
decl_stmt|,
name|endColor
decl_stmt|;
DECL|field|isVertical
name|boolean
name|isVertical
decl_stmt|;
DECL|method|equals ( Object o )
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|GradientInfo
operator|)
condition|)
return|return
literal|false
return|;
name|GradientInfo
name|gi
init|=
operator|(
name|GradientInfo
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|gi
operator|.
name|model
operator|.
name|equals
argument_list|(
name|model
argument_list|)
operator|&&
name|gi
operator|.
name|parallelLength
operator|==
name|parallelLength
operator|&&
name|gi
operator|.
name|startColor
operator|==
name|startColor
operator|&&
name|gi
operator|.
name|endColor
operator|==
name|endColor
operator|&&
name|gi
operator|.
name|isVertical
operator|==
name|isVertical
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|parallelLength
return|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"Direction:"
operator|+
operator|(
name|isVertical
condition|?
literal|"ver"
else|:
literal|"hor"
operator|)
operator|+
literal|", Length: "
operator|+
name|Integer
operator|.
name|toString
argument_list|(
name|parallelLength
argument_list|)
operator|+
literal|", Color1: "
operator|+
name|Integer
operator|.
name|toString
argument_list|(
name|startColor
argument_list|,
literal|16
argument_list|)
operator|+
literal|", Color2: "
operator|+
name|Integer
operator|.
name|toString
argument_list|(
name|endColor
argument_list|,
literal|16
argument_list|)
return|;
block|}
block|}
DECL|class|Gradient
specifier|private
class|class
name|Gradient
block|{
DECL|field|info
name|GradientInfo
name|info
decl_stmt|;
DECL|field|perpendicularLength
name|int
name|perpendicularLength
init|=
literal|0
decl_stmt|;
DECL|field|raster
name|WritableRaster
name|raster
decl_stmt|;
DECL|field|childRasterCache
name|HashMap
name|childRasterCache
decl_stmt|;
DECL|method|Gradient ( GradientInfo i )
name|Gradient
parameter_list|(
name|GradientInfo
name|i
parameter_list|)
block|{
name|info
operator|=
name|i
expr_stmt|;
block|}
DECL|method|getRaster ( int parallelPos, int perpendicularLength, int parallelLength )
specifier|private
name|Raster
name|getRaster
parameter_list|(
name|int
name|parallelPos
parameter_list|,
name|int
name|perpendicularLength
parameter_list|,
name|int
name|parallelLength
parameter_list|)
block|{
if|if
condition|(
name|raster
operator|==
literal|null
operator|||
operator|(
name|this
operator|.
name|perpendicularLength
operator|<
name|perpendicularLength
operator|)
condition|)
name|createRaster
argument_list|(
name|perpendicularLength
argument_list|)
expr_stmt|;
name|Integer
name|key
init|=
operator|new
name|Integer
argument_list|(
name|parallelPos
argument_list|)
decl_stmt|;
name|Object
name|o
init|=
name|childRasterCache
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
return|return
operator|(
name|Raster
operator|)
name|o
return|;
else|else
block|{
name|Raster
name|r
decl_stmt|;
if|if
condition|(
name|info
operator|.
name|isVertical
condition|)
name|r
operator|=
name|raster
operator|.
name|createChild
argument_list|(
literal|0
argument_list|,
name|parallelPos
argument_list|,
name|this
operator|.
name|perpendicularLength
argument_list|,
name|info
operator|.
name|parallelLength
operator|-
name|parallelPos
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
else|else
name|r
operator|=
name|raster
operator|.
name|createChild
argument_list|(
name|parallelPos
argument_list|,
literal|0
argument_list|,
name|info
operator|.
name|parallelLength
operator|-
name|parallelPos
argument_list|,
name|this
operator|.
name|perpendicularLength
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|childRasterCache
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|r
argument_list|)
expr_stmt|;
comment|//System.out.println( "Storing child raster in cache. Position: " + Integer.toString(parallelPos) );
return|return
name|r
return|;
block|}
block|}
DECL|method|dispose ()
specifier|public
name|void
name|dispose
parameter_list|()
block|{
comment|//			raster = null;
block|}
DECL|method|createRaster ( int perpendicularLength )
specifier|private
name|void
name|createRaster
parameter_list|(
name|int
name|perpendicularLength
parameter_list|)
block|{
name|int
name|gradientWidth
decl_stmt|,
name|gradientHeight
decl_stmt|;
if|if
condition|(
name|info
operator|.
name|isVertical
condition|)
block|{
name|gradientHeight
operator|=
name|info
operator|.
name|parallelLength
expr_stmt|;
name|gradientWidth
operator|=
name|this
operator|.
name|perpendicularLength
operator|=
name|perpendicularLength
expr_stmt|;
block|}
else|else
block|{
name|gradientWidth
operator|=
name|info
operator|.
name|parallelLength
expr_stmt|;
name|gradientHeight
operator|=
name|this
operator|.
name|perpendicularLength
operator|=
name|perpendicularLength
expr_stmt|;
block|}
name|int
name|sa
init|=
operator|(
name|info
operator|.
name|startColor
operator|>>
literal|24
operator|)
operator|&
literal|0xFF
decl_stmt|;
name|int
name|sr
init|=
operator|(
name|info
operator|.
name|startColor
operator|>>
literal|16
operator|)
operator|&
literal|0xFF
decl_stmt|;
name|int
name|sg
init|=
operator|(
name|info
operator|.
name|startColor
operator|>>
literal|8
operator|)
operator|&
literal|0xFF
decl_stmt|;
name|int
name|sb
init|=
name|info
operator|.
name|startColor
operator|&
literal|0xFF
decl_stmt|;
name|int
name|da
init|=
operator|(
operator|(
name|info
operator|.
name|endColor
operator|>>
literal|24
operator|)
operator|&
literal|0xFF
operator|)
operator|-
name|sa
decl_stmt|;
name|int
name|dr
init|=
operator|(
operator|(
name|info
operator|.
name|endColor
operator|>>
literal|16
operator|)
operator|&
literal|0xFF
operator|)
operator|-
name|sr
decl_stmt|;
name|int
name|dg
init|=
operator|(
operator|(
name|info
operator|.
name|endColor
operator|>>
literal|8
operator|)
operator|&
literal|0xFF
operator|)
operator|-
name|sg
decl_stmt|;
name|int
name|db
init|=
operator|(
name|info
operator|.
name|endColor
operator|&
literal|0xFF
operator|)
operator|-
name|sb
decl_stmt|;
name|raster
operator|=
name|info
operator|.
name|model
operator|.
name|createCompatibleWritableRaster
argument_list|(
name|gradientWidth
argument_list|,
name|gradientHeight
argument_list|)
expr_stmt|;
name|Object
name|c
init|=
literal|null
decl_stmt|;
name|int
name|pl
init|=
name|info
operator|.
name|parallelLength
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|pl
condition|;
name|i
operator|++
control|)
block|{
name|c
operator|=
name|info
operator|.
name|model
operator|.
name|getDataElements
argument_list|(
operator|(
name|sa
operator|+
operator|(
name|i
operator|*
name|da
operator|)
operator|/
name|pl
operator|)
operator|<<
literal|24
operator||
operator|(
name|sr
operator|+
operator|(
name|i
operator|*
name|dr
operator|)
operator|/
name|pl
operator|)
operator|<<
literal|16
operator||
operator|(
name|sg
operator|+
operator|(
name|i
operator|*
name|dg
operator|)
operator|/
name|pl
operator|)
operator|<<
literal|8
operator||
operator|(
name|sb
operator|+
operator|(
name|i
operator|*
name|db
operator|)
operator|/
name|pl
operator|)
argument_list|,
name|c
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|perpendicularLength
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|info
operator|.
name|isVertical
condition|)
name|raster
operator|.
name|setDataElements
argument_list|(
name|j
argument_list|,
name|i
argument_list|,
name|c
argument_list|)
expr_stmt|;
else|else
name|raster
operator|.
name|setDataElements
argument_list|(
name|i
argument_list|,
name|j
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
block|}
name|childRasterCache
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
block|}
block|}
DECL|field|gradientCache
specifier|private
specifier|static
name|WeakHashMap
name|gradientCache
init|=
operator|new
name|WeakHashMap
argument_list|()
decl_stmt|;
DECL|field|recentInfos
specifier|private
specifier|static
name|LinkedList
name|recentInfos
init|=
operator|new
name|LinkedList
argument_list|()
decl_stmt|;
DECL|field|info
name|GradientInfo
name|info
decl_stmt|;
DECL|field|parallelDevicePos
name|int
name|parallelDevicePos
decl_stmt|;
DECL|field|gradient
name|Gradient
name|gradient
decl_stmt|;
DECL|method|FastGradientPaintContext (ColorModel cm, Rectangle r, int sc, int ec, boolean ver )
name|FastGradientPaintContext
parameter_list|(
name|ColorModel
name|cm
parameter_list|,
name|Rectangle
name|r
parameter_list|,
name|int
name|sc
parameter_list|,
name|int
name|ec
parameter_list|,
name|boolean
name|ver
parameter_list|)
block|{
name|info
operator|=
operator|new
name|GradientInfo
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
operator|(
operator|(
name|sc
operator|&
name|ec
operator|)
operator|>>
literal|24
operator|)
operator|&
literal|0xFF
operator|)
operator|!=
literal|0xFF
condition|)
name|info
operator|.
name|model
operator|=
name|ColorModel
operator|.
name|getRGBdefault
argument_list|()
expr_stmt|;
else|else
name|info
operator|.
name|model
operator|=
name|cm
expr_stmt|;
name|info
operator|.
name|startColor
operator|=
name|sc
expr_stmt|;
name|info
operator|.
name|endColor
operator|=
name|ec
expr_stmt|;
if|if
condition|(
name|info
operator|.
name|isVertical
operator|=
name|ver
condition|)
block|{
name|parallelDevicePos
operator|=
name|r
operator|.
name|y
expr_stmt|;
name|info
operator|.
name|parallelLength
operator|=
name|r
operator|.
name|height
expr_stmt|;
block|}
else|else
block|{
name|parallelDevicePos
operator|=
name|r
operator|.
name|x
expr_stmt|;
name|info
operator|.
name|parallelLength
operator|=
name|r
operator|.
name|width
expr_stmt|;
block|}
name|recentInfos
operator|.
name|remove
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|recentInfos
operator|.
name|add
argument_list|(
literal|0
argument_list|,
name|info
argument_list|)
expr_stmt|;
if|if
condition|(
name|recentInfos
operator|.
name|size
argument_list|()
operator|>
literal|16
condition|)
name|recentInfos
operator|.
name|removeLast
argument_list|()
expr_stmt|;
name|Object
name|o
init|=
name|gradientCache
operator|.
name|get
argument_list|(
name|info
argument_list|)
decl_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
name|o
operator|=
operator|(
operator|(
name|java
operator|.
name|lang
operator|.
name|ref
operator|.
name|WeakReference
operator|)
name|o
operator|)
operator|.
name|get
argument_list|()
expr_stmt|;
if|if
condition|(
name|o
operator|!=
literal|null
condition|)
block|{
name|gradient
operator|=
operator|(
name|Gradient
operator|)
name|o
expr_stmt|;
block|}
else|else
block|{
name|gradientCache
operator|.
name|put
argument_list|(
name|info
argument_list|,
operator|new
name|java
operator|.
name|lang
operator|.
name|ref
operator|.
name|WeakReference
argument_list|(
name|gradient
operator|=
operator|new
name|Gradient
argument_list|(
name|info
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
comment|//System.out.println( "Storing gradient in cache. Info: " + info.toString() );
block|}
block|}
DECL|method|dispose ()
specifier|public
name|void
name|dispose
parameter_list|()
block|{
name|gradient
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
DECL|method|getColorModel ()
specifier|public
name|ColorModel
name|getColorModel
parameter_list|()
block|{
return|return
name|info
operator|.
name|model
return|;
block|}
DECL|method|getRaster ( int x, int y, int w, int h )
specifier|public
specifier|synchronized
name|Raster
name|getRaster
parameter_list|(
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|,
name|int
name|w
parameter_list|,
name|int
name|h
parameter_list|)
block|{
if|if
condition|(
name|info
operator|.
name|isVertical
condition|)
return|return
name|gradient
operator|.
name|getRaster
argument_list|(
name|y
operator|-
name|parallelDevicePos
argument_list|,
name|w
argument_list|,
name|h
argument_list|)
return|;
else|else
return|return
name|gradient
operator|.
name|getRaster
argument_list|(
name|x
operator|-
name|parallelDevicePos
argument_list|,
name|h
argument_list|,
name|w
argument_list|)
return|;
block|}
block|}
end_class

end_unit

