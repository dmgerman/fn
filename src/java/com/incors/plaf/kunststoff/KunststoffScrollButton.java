begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|com.incors.plaf.kunststoff
package|package
name|com
operator|.
name|incors
operator|.
name|plaf
operator|.
name|kunststoff
package|;
end_package

begin_comment
comment|/*  * This code was developed by INCORS GmbH (www.incors.com).  * It is published under the terms of the GNU Lesser General Public License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|metal
operator|.
name|*
import|;
end_import

begin_class
DECL|class|KunststoffScrollButton
specifier|public
class|class
name|KunststoffScrollButton
extends|extends
name|MetalScrollButton
block|{
DECL|method|KunststoffScrollButton ( int direction, int width, boolean freeStanding)
specifier|public
name|KunststoffScrollButton
parameter_list|(
name|int
name|direction
parameter_list|,
name|int
name|width
parameter_list|,
name|boolean
name|freeStanding
parameter_list|)
block|{
name|super
argument_list|(
name|direction
argument_list|,
name|width
argument_list|,
name|freeStanding
argument_list|)
expr_stmt|;
block|}
comment|/**    * Calls the super classes paint(Graphics g) method and then paints two gradients.    * The direction of the gradients depends on the direction of the scrollbar.    */
DECL|method|paint (Graphics g)
specifier|public
name|void
name|paint
parameter_list|(
name|Graphics
name|g
parameter_list|)
block|{
name|super
operator|.
name|paint
argument_list|(
name|g
argument_list|)
expr_stmt|;
name|int
name|width
init|=
name|getWidth
argument_list|()
decl_stmt|;
name|int
name|height
init|=
name|getHeight
argument_list|()
decl_stmt|;
name|Rectangle
name|rectReflection
decl_stmt|;
name|Rectangle
name|rectShadow
decl_stmt|;
name|boolean
name|isVertical
init|=
operator|(
name|getDirection
argument_list|()
operator|==
name|EAST
operator|||
name|getDirection
argument_list|()
operator|==
name|WEST
operator|)
decl_stmt|;
if|if
condition|(
name|isVertical
condition|)
block|{
name|rectReflection
operator|=
operator|new
name|Rectangle
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|width
argument_list|,
name|height
operator|/
literal|2
argument_list|)
expr_stmt|;
name|rectShadow
operator|=
operator|new
name|Rectangle
argument_list|(
literal|1
argument_list|,
name|height
operator|/
literal|2
argument_list|,
name|width
argument_list|,
name|height
operator|/
literal|2
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rectReflection
operator|=
operator|new
name|Rectangle
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|width
operator|/
literal|2
argument_list|,
name|height
argument_list|)
expr_stmt|;
name|rectShadow
operator|=
operator|new
name|Rectangle
argument_list|(
name|width
operator|/
literal|2
argument_list|,
literal|1
argument_list|,
name|width
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|height
argument_list|)
expr_stmt|;
block|}
comment|// paint reflection gradient
name|Color
name|colorReflection
init|=
name|KunststoffLookAndFeel
operator|.
name|getComponentGradientColorReflection
argument_list|()
decl_stmt|;
if|if
condition|(
name|colorReflection
operator|!=
literal|null
condition|)
block|{
name|Color
name|colorReflectionFaded
init|=
name|KunststoffUtilities
operator|.
name|getTranslucentColor
argument_list|(
name|colorReflection
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|KunststoffUtilities
operator|.
name|drawGradient
argument_list|(
name|g
argument_list|,
name|colorReflection
argument_list|,
name|colorReflectionFaded
argument_list|,
name|rectReflection
argument_list|,
name|isVertical
argument_list|)
expr_stmt|;
block|}
comment|// paint shadow gradient
name|Color
name|colorShadow
init|=
name|KunststoffLookAndFeel
operator|.
name|getComponentGradientColorShadow
argument_list|()
decl_stmt|;
if|if
condition|(
name|colorShadow
operator|!=
literal|null
condition|)
block|{
name|Color
name|colorShadowFaded
init|=
name|KunststoffUtilities
operator|.
name|getTranslucentColor
argument_list|(
name|colorShadow
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|KunststoffUtilities
operator|.
name|drawGradient
argument_list|(
name|g
argument_list|,
name|colorShadowFaded
argument_list|,
name|colorShadow
argument_list|,
name|rectShadow
argument_list|,
name|isVertical
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

