begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|com.incors.plaf.kunststoff
package|package
name|com
operator|.
name|incors
operator|.
name|plaf
operator|.
name|kunststoff
package|;
end_package

begin_comment
comment|/*  * This code was developed by INCORS GmbH (www.incors.com).  * It is published under the terms of the GNU Lesser General Public License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|metal
operator|.
name|*
import|;
end_import

begin_class
DECL|class|KunststoffScrollBarUI
specifier|public
class|class
name|KunststoffScrollBarUI
extends|extends
name|MetalScrollBarUI
block|{
DECL|method|createUI (JComponent c)
specifier|public
specifier|static
name|ComponentUI
name|createUI
parameter_list|(
name|JComponent
name|c
parameter_list|)
block|{
return|return
operator|new
name|KunststoffScrollBarUI
argument_list|()
return|;
block|}
DECL|method|createDecreaseButton (int orientation)
specifier|protected
name|JButton
name|createDecreaseButton
parameter_list|(
name|int
name|orientation
parameter_list|)
block|{
name|decreaseButton
operator|=
operator|new
name|KunststoffScrollButton
argument_list|(
name|orientation
argument_list|,
name|scrollBarWidth
argument_list|,
name|isFreeStanding
argument_list|)
expr_stmt|;
return|return
name|decreaseButton
return|;
block|}
DECL|method|createIncreaseButton (int orientation)
specifier|protected
name|JButton
name|createIncreaseButton
parameter_list|(
name|int
name|orientation
parameter_list|)
block|{
name|increaseButton
operator|=
operator|new
name|KunststoffScrollButton
argument_list|(
name|orientation
argument_list|,
name|scrollBarWidth
argument_list|,
name|isFreeStanding
argument_list|)
expr_stmt|;
return|return
name|increaseButton
return|;
block|}
comment|/**    * Calls the super classes paint(Graphics g) method and then paints two gradients.    * The direction of the gradients depends on the direction of the scrollbar.    */
DECL|method|paintThumb (Graphics g, JComponent c, Rectangle thumbBounds)
specifier|protected
name|void
name|paintThumb
parameter_list|(
name|Graphics
name|g
parameter_list|,
name|JComponent
name|c
parameter_list|,
name|Rectangle
name|thumbBounds
parameter_list|)
block|{
name|super
operator|.
name|paintThumb
argument_list|(
name|g
argument_list|,
name|c
argument_list|,
name|thumbBounds
argument_list|)
expr_stmt|;
comment|// colors for the reflection gradient
name|Color
name|colorReflection
init|=
name|KunststoffLookAndFeel
operator|.
name|getComponentGradientColorReflection
argument_list|()
decl_stmt|;
name|Color
name|colorReflectionFaded
init|=
name|KunststoffUtilities
operator|.
name|getTranslucentColor
argument_list|(
name|colorReflection
argument_list|,
literal|0
argument_list|)
decl_stmt|;
comment|// colors for the shadow gradient
name|Color
name|colorShadow
init|=
name|KunststoffLookAndFeel
operator|.
name|getComponentGradientColorShadow
argument_list|()
decl_stmt|;
name|Color
name|colorShadowFaded
init|=
name|KunststoffUtilities
operator|.
name|getTranslucentColor
argument_list|(
name|colorShadow
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Rectangle
name|rectReflection
decl_stmt|;
comment|// rectangle for the reflection gradient
name|Rectangle
name|rectShadow
decl_stmt|;
comment|// rectangle for the shadow gradient
if|if
condition|(
name|scrollbar
operator|.
name|getOrientation
argument_list|()
operator|==
name|JScrollBar
operator|.
name|VERTICAL
condition|)
block|{
name|rectReflection
operator|=
operator|new
name|Rectangle
argument_list|(
name|thumbBounds
operator|.
name|x
operator|+
literal|1
argument_list|,
name|thumbBounds
operator|.
name|y
argument_list|,
name|thumbBounds
operator|.
name|width
operator|/
literal|2
argument_list|,
name|thumbBounds
operator|.
name|height
argument_list|)
expr_stmt|;
name|rectShadow
operator|=
operator|new
name|Rectangle
argument_list|(
name|thumbBounds
operator|.
name|x
operator|+
name|thumbBounds
operator|.
name|width
operator|/
literal|2
argument_list|,
name|thumbBounds
operator|.
name|y
argument_list|,
name|thumbBounds
operator|.
name|width
operator|/
literal|2
operator|+
literal|1
argument_list|,
name|thumbBounds
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|rectReflection
operator|=
operator|new
name|Rectangle
argument_list|(
name|thumbBounds
operator|.
name|x
argument_list|,
name|thumbBounds
operator|.
name|y
operator|+
literal|1
argument_list|,
name|thumbBounds
operator|.
name|width
argument_list|,
name|thumbBounds
operator|.
name|height
operator|/
literal|2
argument_list|)
expr_stmt|;
name|rectShadow
operator|=
operator|new
name|Rectangle
argument_list|(
name|thumbBounds
operator|.
name|x
argument_list|,
name|thumbBounds
operator|.
name|y
operator|+
name|thumbBounds
operator|.
name|height
operator|/
literal|2
argument_list|,
name|thumbBounds
operator|.
name|width
argument_list|,
name|thumbBounds
operator|.
name|height
operator|/
literal|2
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
comment|// the direction of the gradient is orthogonal to the direction of the scrollbar
name|boolean
name|isVertical
init|=
operator|(
name|scrollbar
operator|.
name|getOrientation
argument_list|()
operator|==
name|JScrollBar
operator|.
name|HORIZONTAL
operator|)
decl_stmt|;
name|KunststoffUtilities
operator|.
name|drawGradient
argument_list|(
name|g
argument_list|,
name|colorReflection
argument_list|,
name|colorReflectionFaded
argument_list|,
name|rectReflection
argument_list|,
name|isVertical
argument_list|)
expr_stmt|;
name|KunststoffUtilities
operator|.
name|drawGradient
argument_list|(
name|g
argument_list|,
name|colorShadowFaded
argument_list|,
name|colorShadow
argument_list|,
name|rectShadow
argument_list|,
name|isVertical
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

