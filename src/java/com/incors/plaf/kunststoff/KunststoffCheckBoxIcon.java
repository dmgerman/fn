begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|com.incors.plaf.kunststoff
package|package
name|com
operator|.
name|incors
operator|.
name|plaf
operator|.
name|kunststoff
package|;
end_package

begin_comment
comment|/*  * This code was developed by INCORS GmbH (www.incors.com).  * It is published under the terms of the GNU Lesser General Public License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|metal
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * DOCUMENT ME!  *  * @author $author$  * @version $Revision$  */
end_comment

begin_class
DECL|class|KunststoffCheckBoxIcon
specifier|public
class|class
name|KunststoffCheckBoxIcon
extends|extends
name|MetalCheckBoxIcon
block|{
comment|//~ Methods ////////////////////////////////////////////////////////////////
DECL|method|paintIcon (Component c, Graphics g, int x, int y)
specifier|public
name|void
name|paintIcon
parameter_list|(
name|Component
name|c
parameter_list|,
name|Graphics
name|g
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|super
operator|.
name|paintIcon
argument_list|(
name|c
argument_list|,
name|g
argument_list|,
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
name|Graphics2D
name|g2D
init|=
operator|(
name|Graphics2D
operator|)
name|g
decl_stmt|;
name|int
name|controlSize
init|=
name|getControlSize
argument_list|()
decl_stmt|;
comment|// paint upper gradient
name|Color
name|colorReflection
init|=
name|KunststoffLookAndFeel
operator|.
name|getComponentGradientColorReflection
argument_list|()
decl_stmt|;
if|if
condition|(
name|colorReflection
operator|!=
literal|null
condition|)
block|{
name|Color
name|colorReflectionFaded
init|=
name|KunststoffUtilities
operator|.
name|getTranslucentColor
argument_list|(
name|colorReflection
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Rectangle
name|rect
init|=
operator|new
name|Rectangle
argument_list|(
name|x
argument_list|,
name|y
argument_list|,
name|controlSize
argument_list|,
name|controlSize
operator|/
literal|2
argument_list|)
decl_stmt|;
name|KunststoffUtilities
operator|.
name|drawGradient
argument_list|(
name|g
argument_list|,
name|colorReflection
argument_list|,
name|colorReflectionFaded
argument_list|,
name|rect
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
comment|// paint lower gradient
name|Color
name|colorShadow
init|=
name|KunststoffLookAndFeel
operator|.
name|getComponentGradientColorShadow
argument_list|()
decl_stmt|;
if|if
condition|(
name|colorShadow
operator|!=
literal|null
condition|)
block|{
name|Color
name|colorShadowFaded
init|=
name|KunststoffUtilities
operator|.
name|getTranslucentColor
argument_list|(
name|colorShadow
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Rectangle
name|rect
init|=
operator|new
name|Rectangle
argument_list|(
name|x
argument_list|,
name|x
operator|+
operator|(
name|controlSize
operator|/
literal|2
operator|)
argument_list|,
name|controlSize
argument_list|,
name|controlSize
operator|/
literal|2
argument_list|)
decl_stmt|;
name|KunststoffUtilities
operator|.
name|drawGradient
argument_list|(
name|g
argument_list|,
name|colorShadowFaded
argument_list|,
name|colorShadow
argument_list|,
name|rect
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

begin_comment
comment|///////////////////////////////////////////////////////////////////////////////
end_comment

begin_comment
comment|//  END OF FILE.
end_comment

begin_comment
comment|///////////////////////////////////////////////////////////////////////////////
end_comment

end_unit

