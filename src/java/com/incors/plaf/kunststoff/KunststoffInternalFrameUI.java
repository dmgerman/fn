begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|com.incors.plaf.kunststoff
package|package
name|com
operator|.
name|incors
operator|.
name|plaf
operator|.
name|kunststoff
package|;
end_package

begin_comment
comment|/*  * This code was developed by Jerason Banes (jbanes@techie.com).  * It is published under the terms of the GNU Lesser General Public License.  */
end_comment

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|beans
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|metal
operator|.
name|*
import|;
end_import

begin_class
DECL|class|KunststoffInternalFrameUI
specifier|public
class|class
name|KunststoffInternalFrameUI
extends|extends
name|MetalInternalFrameUI
block|{
DECL|field|titlePane
specifier|private
name|MetalInternalFrameTitlePane
name|titlePane
decl_stmt|;
DECL|field|paletteListener
specifier|private
name|PropertyChangeListener
name|paletteListener
decl_stmt|;
DECL|field|FRAME_TYPE
specifier|private
specifier|static
name|String
name|FRAME_TYPE
init|=
literal|"JInternalFrame.frameType"
decl_stmt|;
DECL|field|NORMAL_FRAME
specifier|private
specifier|static
name|String
name|NORMAL_FRAME
init|=
literal|"normal"
decl_stmt|;
DECL|field|PALETTE_FRAME
specifier|private
specifier|static
name|String
name|PALETTE_FRAME
init|=
literal|"palette"
decl_stmt|;
DECL|field|OPTION_DIALOG
specifier|private
specifier|static
name|String
name|OPTION_DIALOG
init|=
literal|"optionDialog"
decl_stmt|;
DECL|field|IS_PALETTE
specifier|protected
specifier|static
name|String
name|IS_PALETTE
init|=
literal|"JInternalFrame.isPalette"
decl_stmt|;
comment|// added by Thomas Auinger
comment|// to solve a compiling problem
DECL|method|KunststoffInternalFrameUI (JInternalFrame b)
specifier|public
name|KunststoffInternalFrameUI
parameter_list|(
name|JInternalFrame
name|b
parameter_list|)
block|{
name|super
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
DECL|method|createUI (JComponent c)
specifier|public
specifier|static
name|ComponentUI
name|createUI
parameter_list|(
name|JComponent
name|c
parameter_list|)
block|{
return|return
operator|new
name|KunststoffInternalFrameUI
argument_list|(
operator|(
name|JInternalFrame
operator|)
name|c
argument_list|)
return|;
block|}
DECL|method|installUI (JComponent c)
specifier|public
name|void
name|installUI
parameter_list|(
name|JComponent
name|c
parameter_list|)
block|{
name|paletteListener
operator|=
operator|new
name|PaletteListener
argument_list|()
expr_stmt|;
name|c
operator|.
name|addPropertyChangeListener
argument_list|(
name|paletteListener
argument_list|)
expr_stmt|;
name|super
operator|.
name|installUI
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
DECL|method|uninstallUI (JComponent c)
specifier|public
name|void
name|uninstallUI
parameter_list|(
name|JComponent
name|c
parameter_list|)
block|{
name|c
operator|.
name|removePropertyChangeListener
argument_list|(
name|paletteListener
argument_list|)
expr_stmt|;
name|super
operator|.
name|uninstallUI
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
DECL|method|createNorthPane (JInternalFrame w)
specifier|protected
name|JComponent
name|createNorthPane
parameter_list|(
name|JInternalFrame
name|w
parameter_list|)
block|{
name|super
operator|.
name|createNorthPane
argument_list|(
name|w
argument_list|)
expr_stmt|;
name|titlePane
operator|=
operator|new
name|KunststoffInternalFrameTitlePane
argument_list|(
name|w
argument_list|)
expr_stmt|;
return|return
name|titlePane
return|;
block|}
DECL|method|setPalette (boolean isPalette)
specifier|public
name|void
name|setPalette
parameter_list|(
name|boolean
name|isPalette
parameter_list|)
block|{
name|super
operator|.
name|setPalette
argument_list|(
name|isPalette
argument_list|)
expr_stmt|;
name|titlePane
operator|.
name|setPalette
argument_list|(
name|isPalette
argument_list|)
expr_stmt|;
block|}
DECL|method|setFrameType (String frameType)
specifier|private
name|void
name|setFrameType
parameter_list|(
name|String
name|frameType
parameter_list|)
block|{
if|if
condition|(
name|frameType
operator|.
name|equals
argument_list|(
name|OPTION_DIALOG
argument_list|)
condition|)
block|{
name|LookAndFeel
operator|.
name|installBorder
argument_list|(
name|frame
argument_list|,
literal|"InternalFrame.optionDialogBorder"
argument_list|)
expr_stmt|;
name|titlePane
operator|.
name|setPalette
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|frameType
operator|.
name|equals
argument_list|(
name|PALETTE_FRAME
argument_list|)
condition|)
block|{
name|LookAndFeel
operator|.
name|installBorder
argument_list|(
name|frame
argument_list|,
literal|"InternalFrame.paletteBorder"
argument_list|)
expr_stmt|;
name|titlePane
operator|.
name|setPalette
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LookAndFeel
operator|.
name|installBorder
argument_list|(
name|frame
argument_list|,
literal|"InternalFrame.border"
argument_list|)
expr_stmt|;
name|titlePane
operator|.
name|setPalette
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|PaletteListener
class|class
name|PaletteListener
implements|implements
name|PropertyChangeListener
block|{
DECL|method|propertyChange (PropertyChangeEvent e)
specifier|public
name|void
name|propertyChange
parameter_list|(
name|PropertyChangeEvent
name|e
parameter_list|)
block|{
name|String
name|name
init|=
name|e
operator|.
name|getPropertyName
argument_list|()
decl_stmt|;
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|FRAME_TYPE
argument_list|)
condition|)
block|{
if|if
condition|(
name|e
operator|.
name|getNewValue
argument_list|()
operator|instanceof
name|String
condition|)
name|setFrameType
argument_list|(
operator|(
name|String
operator|)
name|e
operator|.
name|getNewValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
name|IS_PALETTE
argument_list|)
condition|)
block|{
if|if
condition|(
name|e
operator|.
name|getNewValue
argument_list|()
operator|!=
literal|null
condition|)
name|setPalette
argument_list|(
operator|(
operator|(
name|Boolean
operator|)
name|e
operator|.
name|getNewValue
argument_list|()
operator|)
operator|.
name|booleanValue
argument_list|()
argument_list|)
expr_stmt|;
else|else
name|setPalette
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// end class PaletteListener
block|}
end_class

end_unit

