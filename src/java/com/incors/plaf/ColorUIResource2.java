begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|com.incors.plaf
package|package
name|com
operator|.
name|incors
operator|.
name|plaf
package|;
end_package

begin_comment
comment|/**  * This class had to be created because<code>ColorUIResouce</code> does not allow  * transparency. Hopefully one day support for transparency will be added to we  * ColorUIResouce and we can get rid of this class. Wrapping a<code>Color</color>  * object to make a pseudo subclass is very ugly.  */
end_comment

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|PaintContext
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|RenderingHints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|color
operator|.
name|ColorSpace
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|AffineTransform
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|Rectangle2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|image
operator|.
name|ColorModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|ColorUIResource
import|;
end_import

begin_comment
comment|/**  * DOCUMENT ME!  *  * @author $author$  * @version $Revision$  */
end_comment

begin_class
DECL|class|ColorUIResource2
specifier|public
class|class
name|ColorUIResource2
extends|extends
name|ColorUIResource
block|{
comment|//~ Instance fields ////////////////////////////////////////////////////////
DECL|field|myColor
specifier|private
name|Color
name|myColor
decl_stmt|;
comment|//~ Constructors ///////////////////////////////////////////////////////////
comment|// constructors
DECL|method|ColorUIResource2 (Color c)
specifier|public
name|ColorUIResource2
parameter_list|(
name|Color
name|c
parameter_list|)
block|{
name|super
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myColor
operator|=
name|c
expr_stmt|;
block|}
DECL|method|ColorUIResource2 (int r, int g, int b)
specifier|public
name|ColorUIResource2
parameter_list|(
name|int
name|r
parameter_list|,
name|int
name|g
parameter_list|,
name|int
name|b
parameter_list|)
block|{
name|super
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myColor
operator|=
operator|new
name|Color
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
DECL|method|ColorUIResource2 (int r, int g, int b, int a)
specifier|public
name|ColorUIResource2
parameter_list|(
name|int
name|r
parameter_list|,
name|int
name|g
parameter_list|,
name|int
name|b
parameter_list|,
name|int
name|a
parameter_list|)
block|{
name|super
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myColor
operator|=
operator|new
name|Color
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|a
argument_list|)
expr_stmt|;
block|}
DECL|method|ColorUIResource2 (int rgb)
specifier|public
name|ColorUIResource2
parameter_list|(
name|int
name|rgb
parameter_list|)
block|{
name|super
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myColor
operator|=
operator|new
name|Color
argument_list|(
name|rgb
argument_list|)
expr_stmt|;
block|}
DECL|method|ColorUIResource2 (int rgba, boolean hasalpha)
specifier|public
name|ColorUIResource2
parameter_list|(
name|int
name|rgba
parameter_list|,
name|boolean
name|hasalpha
parameter_list|)
block|{
name|super
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myColor
operator|=
operator|new
name|Color
argument_list|(
name|rgba
argument_list|,
name|hasalpha
argument_list|)
expr_stmt|;
block|}
DECL|method|ColorUIResource2 (float r, float g, float b)
specifier|public
name|ColorUIResource2
parameter_list|(
name|float
name|r
parameter_list|,
name|float
name|g
parameter_list|,
name|float
name|b
parameter_list|)
block|{
name|super
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myColor
operator|=
operator|new
name|Color
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|)
expr_stmt|;
block|}
DECL|method|ColorUIResource2 (float r, float g, float b, float alpha)
specifier|public
name|ColorUIResource2
parameter_list|(
name|float
name|r
parameter_list|,
name|float
name|g
parameter_list|,
name|float
name|b
parameter_list|,
name|float
name|alpha
parameter_list|)
block|{
name|super
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|myColor
operator|=
operator|new
name|Color
argument_list|(
name|r
argument_list|,
name|g
argument_list|,
name|b
argument_list|,
name|alpha
argument_list|)
expr_stmt|;
block|}
comment|//~ Methods ////////////////////////////////////////////////////////////////
DECL|method|getAlpha ()
specifier|public
name|int
name|getAlpha
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|getAlpha
argument_list|()
return|;
block|}
DECL|method|getBlue ()
specifier|public
name|int
name|getBlue
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|getBlue
argument_list|()
return|;
block|}
DECL|method|getColorComponents (float[] compArray)
specifier|public
name|float
index|[]
name|getColorComponents
parameter_list|(
name|float
index|[]
name|compArray
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|getColorComponents
argument_list|(
name|compArray
argument_list|)
return|;
block|}
DECL|method|getColorComponents (ColorSpace cspace, float[] compArray)
specifier|public
name|float
index|[]
name|getColorComponents
parameter_list|(
name|ColorSpace
name|cspace
parameter_list|,
name|float
index|[]
name|compArray
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|getColorComponents
argument_list|(
name|cspace
argument_list|,
name|compArray
argument_list|)
return|;
block|}
DECL|method|getColorSpace ()
specifier|public
name|ColorSpace
name|getColorSpace
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|getColorSpace
argument_list|()
return|;
block|}
DECL|method|getComponents (float[] compArray)
specifier|public
name|float
index|[]
name|getComponents
parameter_list|(
name|float
index|[]
name|compArray
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|getComponents
argument_list|(
name|compArray
argument_list|)
return|;
block|}
DECL|method|getComponents (ColorSpace cspace, float[] compArray)
specifier|public
name|float
index|[]
name|getComponents
parameter_list|(
name|ColorSpace
name|cspace
parameter_list|,
name|float
index|[]
name|compArray
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|getComponents
argument_list|(
name|cspace
argument_list|,
name|compArray
argument_list|)
return|;
block|}
DECL|method|getGreen ()
specifier|public
name|int
name|getGreen
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|getGreen
argument_list|()
return|;
block|}
DECL|method|getRGB ()
specifier|public
name|int
name|getRGB
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|getRGB
argument_list|()
return|;
block|}
DECL|method|getRGBColorComponents (float[] compArray)
specifier|public
name|float
index|[]
name|getRGBColorComponents
parameter_list|(
name|float
index|[]
name|compArray
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|getRGBColorComponents
argument_list|(
name|compArray
argument_list|)
return|;
block|}
DECL|method|getRGBComponents (float[] compArray)
specifier|public
name|float
index|[]
name|getRGBComponents
parameter_list|(
name|float
index|[]
name|compArray
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|getRGBComponents
argument_list|(
name|compArray
argument_list|)
return|;
block|}
comment|// non static methods
DECL|method|getRed ()
specifier|public
name|int
name|getRed
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|getRed
argument_list|()
return|;
block|}
DECL|method|getTransparency ()
specifier|public
name|int
name|getTransparency
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|getTransparency
argument_list|()
return|;
block|}
DECL|method|brighter ()
specifier|public
name|Color
name|brighter
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|brighter
argument_list|()
return|;
block|}
DECL|method|createContext (ColorModel cm, Rectangle r, Rectangle2D r2d, AffineTransform xform, RenderingHints hints)
specifier|public
name|PaintContext
name|createContext
parameter_list|(
name|ColorModel
name|cm
parameter_list|,
name|Rectangle
name|r
parameter_list|,
name|Rectangle2D
name|r2d
parameter_list|,
name|AffineTransform
name|xform
parameter_list|,
name|RenderingHints
name|hints
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|createContext
argument_list|(
name|cm
argument_list|,
name|r
argument_list|,
name|r2d
argument_list|,
name|xform
argument_list|,
name|hints
argument_list|)
return|;
block|}
DECL|method|darker ()
specifier|public
name|Color
name|darker
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|darker
argument_list|()
return|;
block|}
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|myColor
operator|.
name|equals
argument_list|(
name|obj
argument_list|)
return|;
block|}
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|hashCode
argument_list|()
return|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|myColor
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

begin_comment
comment|///////////////////////////////////////////////////////////////////////////////
end_comment

begin_comment
comment|//  END OF FILE.
end_comment

begin_comment
comment|///////////////////////////////////////////////////////////////////////////////
end_comment

end_unit

