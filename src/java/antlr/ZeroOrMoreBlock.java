begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|antlr
package|package
name|antlr
package|;
end_package

begin_comment
comment|/* ANTLR Translator Generator  * Project led by Terence Parr at http://www.jGuru.com  * Software rights: http://www.antlr.org/RIGHTS.html  *  * $Id$  */
end_comment

begin_class
DECL|class|ZeroOrMoreBlock
class|class
name|ZeroOrMoreBlock
extends|extends
name|BlockWithImpliedExitPath
block|{
DECL|method|ZeroOrMoreBlock (Grammar g)
specifier|public
name|ZeroOrMoreBlock
parameter_list|(
name|Grammar
name|g
parameter_list|)
block|{
name|super
argument_list|(
name|g
argument_list|)
expr_stmt|;
block|}
DECL|method|ZeroOrMoreBlock (Grammar g, int line)
specifier|public
name|ZeroOrMoreBlock
parameter_list|(
name|Grammar
name|g
parameter_list|,
name|int
name|line
parameter_list|)
block|{
name|super
argument_list|(
name|g
argument_list|,
name|line
argument_list|)
expr_stmt|;
block|}
DECL|method|generate ()
specifier|public
name|void
name|generate
parameter_list|()
block|{
name|grammar
operator|.
name|generator
operator|.
name|gen
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|look (int k)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|)
block|{
return|return
name|grammar
operator|.
name|theLLkAnalyzer
operator|.
name|look
argument_list|(
name|k
argument_list|,
name|this
argument_list|)
return|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|super
operator|.
name|toString
argument_list|()
operator|+
literal|"*"
return|;
block|}
block|}
end_class

end_unit

