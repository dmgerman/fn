begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// $ANTLR : "preproc.g" -> "Preprocessor.java"$
end_comment

begin_package
DECL|package|antlr.preprocessor
package|package
name|antlr
operator|.
name|preprocessor
package|;
end_package

begin_interface
DECL|interface|PreprocessorTokenTypes
specifier|public
interface|interface
name|PreprocessorTokenTypes
block|{
DECL|field|EOF
name|int
name|EOF
init|=
literal|1
decl_stmt|;
DECL|field|NULL_TREE_LOOKAHEAD
name|int
name|NULL_TREE_LOOKAHEAD
init|=
literal|3
decl_stmt|;
DECL|field|LITERAL_tokens
name|int
name|LITERAL_tokens
init|=
literal|4
decl_stmt|;
DECL|field|HEADER_ACTION
name|int
name|HEADER_ACTION
init|=
literal|5
decl_stmt|;
DECL|field|SUBRULE_BLOCK
name|int
name|SUBRULE_BLOCK
init|=
literal|6
decl_stmt|;
DECL|field|ACTION
name|int
name|ACTION
init|=
literal|7
decl_stmt|;
DECL|field|LITERAL_class
name|int
name|LITERAL_class
init|=
literal|8
decl_stmt|;
DECL|field|ID
name|int
name|ID
init|=
literal|9
decl_stmt|;
DECL|field|LITERAL_extends
name|int
name|LITERAL_extends
init|=
literal|10
decl_stmt|;
DECL|field|SEMI
name|int
name|SEMI
init|=
literal|11
decl_stmt|;
DECL|field|TOKENS_SPEC
name|int
name|TOKENS_SPEC
init|=
literal|12
decl_stmt|;
DECL|field|OPTIONS_START
name|int
name|OPTIONS_START
init|=
literal|13
decl_stmt|;
DECL|field|ASSIGN_RHS
name|int
name|ASSIGN_RHS
init|=
literal|14
decl_stmt|;
DECL|field|RCURLY
name|int
name|RCURLY
init|=
literal|15
decl_stmt|;
DECL|field|LITERAL_protected
name|int
name|LITERAL_protected
init|=
literal|16
decl_stmt|;
DECL|field|LITERAL_private
name|int
name|LITERAL_private
init|=
literal|17
decl_stmt|;
DECL|field|LITERAL_public
name|int
name|LITERAL_public
init|=
literal|18
decl_stmt|;
DECL|field|BANG
name|int
name|BANG
init|=
literal|19
decl_stmt|;
DECL|field|ARG_ACTION
name|int
name|ARG_ACTION
init|=
literal|20
decl_stmt|;
DECL|field|LITERAL_returns
name|int
name|LITERAL_returns
init|=
literal|21
decl_stmt|;
DECL|field|RULE_BLOCK
name|int
name|RULE_BLOCK
init|=
literal|22
decl_stmt|;
DECL|field|LITERAL_throws
name|int
name|LITERAL_throws
init|=
literal|23
decl_stmt|;
DECL|field|COMMA
name|int
name|COMMA
init|=
literal|24
decl_stmt|;
DECL|field|LITERAL_exception
name|int
name|LITERAL_exception
init|=
literal|25
decl_stmt|;
DECL|field|LITERAL_catch
name|int
name|LITERAL_catch
init|=
literal|26
decl_stmt|;
DECL|field|ALT
name|int
name|ALT
init|=
literal|27
decl_stmt|;
DECL|field|ELEMENT
name|int
name|ELEMENT
init|=
literal|28
decl_stmt|;
DECL|field|LPAREN
name|int
name|LPAREN
init|=
literal|29
decl_stmt|;
DECL|field|RPAREN
name|int
name|RPAREN
init|=
literal|30
decl_stmt|;
DECL|field|ID_OR_KEYWORD
name|int
name|ID_OR_KEYWORD
init|=
literal|31
decl_stmt|;
DECL|field|CURLY_BLOCK_SCARF
name|int
name|CURLY_BLOCK_SCARF
init|=
literal|32
decl_stmt|;
DECL|field|WS
name|int
name|WS
init|=
literal|33
decl_stmt|;
DECL|field|NEWLINE
name|int
name|NEWLINE
init|=
literal|34
decl_stmt|;
DECL|field|COMMENT
name|int
name|COMMENT
init|=
literal|35
decl_stmt|;
DECL|field|SL_COMMENT
name|int
name|SL_COMMENT
init|=
literal|36
decl_stmt|;
DECL|field|ML_COMMENT
name|int
name|ML_COMMENT
init|=
literal|37
decl_stmt|;
DECL|field|CHAR_LITERAL
name|int
name|CHAR_LITERAL
init|=
literal|38
decl_stmt|;
DECL|field|STRING_LITERAL
name|int
name|STRING_LITERAL
init|=
literal|39
decl_stmt|;
DECL|field|ESC
name|int
name|ESC
init|=
literal|40
decl_stmt|;
DECL|field|DIGIT
name|int
name|DIGIT
init|=
literal|41
decl_stmt|;
DECL|field|XDIGIT
name|int
name|XDIGIT
init|=
literal|42
decl_stmt|;
block|}
end_interface

end_unit

