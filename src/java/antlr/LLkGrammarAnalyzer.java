begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|antlr
package|package
name|antlr
package|;
end_package

begin_comment
comment|/* ANTLR Translator Generator  * Project led by Terence Parr at http://www.jGuru.com  * Software rights: http://www.antlr.org/RIGHTS.html  *  * $Id$  */
end_comment

begin_interface
DECL|interface|LLkGrammarAnalyzer
specifier|public
interface|interface
name|LLkGrammarAnalyzer
extends|extends
name|GrammarAnalyzer
block|{
DECL|method|deterministic (AlternativeBlock blk)
specifier|public
name|boolean
name|deterministic
parameter_list|(
name|AlternativeBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|deterministic (OneOrMoreBlock blk)
specifier|public
name|boolean
name|deterministic
parameter_list|(
name|OneOrMoreBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|deterministic (ZeroOrMoreBlock blk)
specifier|public
name|boolean
name|deterministic
parameter_list|(
name|ZeroOrMoreBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|FOLLOW (int k, RuleEndElement end)
specifier|public
name|Lookahead
name|FOLLOW
parameter_list|(
name|int
name|k
parameter_list|,
name|RuleEndElement
name|end
parameter_list|)
function_decl|;
DECL|method|look (int k, ActionElement action)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|ActionElement
name|action
parameter_list|)
function_decl|;
DECL|method|look (int k, AlternativeBlock blk)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|AlternativeBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|look (int k, BlockEndElement end)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|BlockEndElement
name|end
parameter_list|)
function_decl|;
DECL|method|look (int k, CharLiteralElement atom)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|CharLiteralElement
name|atom
parameter_list|)
function_decl|;
DECL|method|look (int k, CharRangeElement end)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|CharRangeElement
name|end
parameter_list|)
function_decl|;
DECL|method|look (int k, GrammarAtom atom)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|GrammarAtom
name|atom
parameter_list|)
function_decl|;
DECL|method|look (int k, OneOrMoreBlock blk)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|OneOrMoreBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|look (int k, RuleBlock blk)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|RuleBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|look (int k, RuleEndElement end)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|RuleEndElement
name|end
parameter_list|)
function_decl|;
DECL|method|look (int k, RuleRefElement rr)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|RuleRefElement
name|rr
parameter_list|)
function_decl|;
DECL|method|look (int k, StringLiteralElement atom)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|StringLiteralElement
name|atom
parameter_list|)
function_decl|;
DECL|method|look (int k, SynPredBlock blk)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|SynPredBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|look (int k, TokenRangeElement end)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|TokenRangeElement
name|end
parameter_list|)
function_decl|;
DECL|method|look (int k, TreeElement end)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|TreeElement
name|end
parameter_list|)
function_decl|;
DECL|method|look (int k, WildcardElement wc)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|WildcardElement
name|wc
parameter_list|)
function_decl|;
DECL|method|look (int k, ZeroOrMoreBlock blk)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|ZeroOrMoreBlock
name|blk
parameter_list|)
function_decl|;
DECL|method|look (int k, String rule)
specifier|public
name|Lookahead
name|look
parameter_list|(
name|int
name|k
parameter_list|,
name|String
name|rule
parameter_list|)
function_decl|;
DECL|method|setGrammar (Grammar g)
specifier|public
name|void
name|setGrammar
parameter_list|(
name|Grammar
name|g
parameter_list|)
function_decl|;
DECL|method|subruleCanBeInverted (AlternativeBlock blk, boolean forLexer)
specifier|public
name|boolean
name|subruleCanBeInverted
parameter_list|(
name|AlternativeBlock
name|blk
parameter_list|,
name|boolean
name|forLexer
parameter_list|)
function_decl|;
block|}
end_interface

end_unit

