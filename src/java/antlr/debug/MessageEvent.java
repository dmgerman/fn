begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|antlr.debug
package|package
name|antlr
operator|.
name|debug
package|;
end_package

begin_class
DECL|class|MessageEvent
specifier|public
class|class
name|MessageEvent
extends|extends
name|Event
block|{
DECL|field|text
specifier|private
name|String
name|text
decl_stmt|;
DECL|field|WARNING
specifier|public
specifier|static
name|int
name|WARNING
init|=
literal|0
decl_stmt|;
DECL|field|ERROR
specifier|public
specifier|static
name|int
name|ERROR
init|=
literal|1
decl_stmt|;
DECL|method|MessageEvent (Object source)
specifier|public
name|MessageEvent
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|super
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
DECL|method|MessageEvent (Object source, int type, String text)
specifier|public
name|MessageEvent
parameter_list|(
name|Object
name|source
parameter_list|,
name|int
name|type
parameter_list|,
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|setValues
argument_list|(
name|type
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
DECL|method|getText ()
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|text
return|;
block|}
DECL|method|setText (String text)
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|this
operator|.
name|text
operator|=
name|text
expr_stmt|;
block|}
comment|/** This should NOT be called from anyone other than ParserEventSupport! */
DECL|method|setValues (int type, String text)
name|void
name|setValues
parameter_list|(
name|int
name|type
parameter_list|,
name|String
name|text
parameter_list|)
block|{
name|super
operator|.
name|setValues
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ParserMessageEvent ["
operator|+
operator|(
name|getType
argument_list|()
operator|==
name|WARNING
condition|?
literal|"warning,"
else|:
literal|"error,"
operator|)
operator|+
name|getText
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

