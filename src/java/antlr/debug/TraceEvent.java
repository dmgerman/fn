begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|antlr.debug
package|package
name|antlr
operator|.
name|debug
package|;
end_package

begin_class
DECL|class|TraceEvent
specifier|public
class|class
name|TraceEvent
extends|extends
name|GuessingEvent
block|{
DECL|field|ruleNum
specifier|private
name|int
name|ruleNum
decl_stmt|;
DECL|field|data
specifier|private
name|int
name|data
decl_stmt|;
DECL|field|ENTER
specifier|public
specifier|static
name|int
name|ENTER
init|=
literal|0
decl_stmt|;
DECL|field|EXIT
specifier|public
specifier|static
name|int
name|EXIT
init|=
literal|1
decl_stmt|;
DECL|field|DONE_PARSING
specifier|public
specifier|static
name|int
name|DONE_PARSING
init|=
literal|2
decl_stmt|;
DECL|method|TraceEvent (Object source)
specifier|public
name|TraceEvent
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|super
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
DECL|method|TraceEvent (Object source, int type, int ruleNum, int guessing, int data)
specifier|public
name|TraceEvent
parameter_list|(
name|Object
name|source
parameter_list|,
name|int
name|type
parameter_list|,
name|int
name|ruleNum
parameter_list|,
name|int
name|guessing
parameter_list|,
name|int
name|data
parameter_list|)
block|{
name|super
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|setValues
argument_list|(
name|type
argument_list|,
name|ruleNum
argument_list|,
name|guessing
argument_list|,
name|data
argument_list|)
expr_stmt|;
block|}
DECL|method|getData ()
specifier|public
name|int
name|getData
parameter_list|()
block|{
return|return
name|data
return|;
block|}
DECL|method|getRuleNum ()
specifier|public
name|int
name|getRuleNum
parameter_list|()
block|{
return|return
name|ruleNum
return|;
block|}
DECL|method|setData (int data)
name|void
name|setData
parameter_list|(
name|int
name|data
parameter_list|)
block|{
name|this
operator|.
name|data
operator|=
name|data
expr_stmt|;
block|}
DECL|method|setRuleNum (int ruleNum)
name|void
name|setRuleNum
parameter_list|(
name|int
name|ruleNum
parameter_list|)
block|{
name|this
operator|.
name|ruleNum
operator|=
name|ruleNum
expr_stmt|;
block|}
comment|/** This should NOT be called from anyone other than ParserEventSupport! */
DECL|method|setValues (int type, int ruleNum, int guessing, int data)
name|void
name|setValues
parameter_list|(
name|int
name|type
parameter_list|,
name|int
name|ruleNum
parameter_list|,
name|int
name|guessing
parameter_list|,
name|int
name|data
parameter_list|)
block|{
name|super
operator|.
name|setValues
argument_list|(
name|type
argument_list|,
name|guessing
argument_list|)
expr_stmt|;
name|setRuleNum
argument_list|(
name|ruleNum
argument_list|)
expr_stmt|;
name|setData
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ParserTraceEvent ["
operator|+
operator|(
name|getType
argument_list|()
operator|==
name|ENTER
condition|?
literal|"enter,"
else|:
literal|"exit,"
operator|)
operator|+
name|getRuleNum
argument_list|()
operator|+
literal|","
operator|+
name|getGuessing
argument_list|()
operator|+
literal|"]"
return|;
block|}
block|}
end_class

end_unit

