begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|// $ANTLR 2.7.1: "antlr.g" -> "ANTLRLexer.java"$
end_comment

begin_package
DECL|package|antlr
package|package
name|antlr
package|;
end_package

begin_interface
DECL|interface|ANTLRTokenTypes
specifier|public
interface|interface
name|ANTLRTokenTypes
block|{
DECL|field|EOF
name|int
name|EOF
init|=
literal|1
decl_stmt|;
DECL|field|NULL_TREE_LOOKAHEAD
name|int
name|NULL_TREE_LOOKAHEAD
init|=
literal|3
decl_stmt|;
DECL|field|LITERAL_tokens
name|int
name|LITERAL_tokens
init|=
literal|4
decl_stmt|;
DECL|field|LITERAL_header
name|int
name|LITERAL_header
init|=
literal|5
decl_stmt|;
DECL|field|STRING_LITERAL
name|int
name|STRING_LITERAL
init|=
literal|6
decl_stmt|;
DECL|field|ACTION
name|int
name|ACTION
init|=
literal|7
decl_stmt|;
DECL|field|DOC_COMMENT
name|int
name|DOC_COMMENT
init|=
literal|8
decl_stmt|;
DECL|field|LITERAL_lexclass
name|int
name|LITERAL_lexclass
init|=
literal|9
decl_stmt|;
DECL|field|LITERAL_class
name|int
name|LITERAL_class
init|=
literal|10
decl_stmt|;
DECL|field|LITERAL_extends
name|int
name|LITERAL_extends
init|=
literal|11
decl_stmt|;
DECL|field|LITERAL_Lexer
name|int
name|LITERAL_Lexer
init|=
literal|12
decl_stmt|;
DECL|field|LITERAL_TreeParser
name|int
name|LITERAL_TreeParser
init|=
literal|13
decl_stmt|;
DECL|field|OPTIONS
name|int
name|OPTIONS
init|=
literal|14
decl_stmt|;
DECL|field|ASSIGN
name|int
name|ASSIGN
init|=
literal|15
decl_stmt|;
DECL|field|SEMI
name|int
name|SEMI
init|=
literal|16
decl_stmt|;
DECL|field|RCURLY
name|int
name|RCURLY
init|=
literal|17
decl_stmt|;
DECL|field|LITERAL_charVocabulary
name|int
name|LITERAL_charVocabulary
init|=
literal|18
decl_stmt|;
DECL|field|CHAR_LITERAL
name|int
name|CHAR_LITERAL
init|=
literal|19
decl_stmt|;
DECL|field|INT
name|int
name|INT
init|=
literal|20
decl_stmt|;
DECL|field|OR
name|int
name|OR
init|=
literal|21
decl_stmt|;
DECL|field|RANGE
name|int
name|RANGE
init|=
literal|22
decl_stmt|;
DECL|field|TOKENS
name|int
name|TOKENS
init|=
literal|23
decl_stmt|;
DECL|field|TOKEN_REF
name|int
name|TOKEN_REF
init|=
literal|24
decl_stmt|;
DECL|field|OPEN_ELEMENT_OPTION
name|int
name|OPEN_ELEMENT_OPTION
init|=
literal|25
decl_stmt|;
DECL|field|CLOSE_ELEMENT_OPTION
name|int
name|CLOSE_ELEMENT_OPTION
init|=
literal|26
decl_stmt|;
DECL|field|LPAREN
name|int
name|LPAREN
init|=
literal|27
decl_stmt|;
DECL|field|RULE_REF
name|int
name|RULE_REF
init|=
literal|28
decl_stmt|;
DECL|field|RPAREN
name|int
name|RPAREN
init|=
literal|29
decl_stmt|;
DECL|field|LITERAL_Parser
name|int
name|LITERAL_Parser
init|=
literal|30
decl_stmt|;
DECL|field|LITERAL_protected
name|int
name|LITERAL_protected
init|=
literal|31
decl_stmt|;
DECL|field|LITERAL_public
name|int
name|LITERAL_public
init|=
literal|32
decl_stmt|;
DECL|field|LITERAL_private
name|int
name|LITERAL_private
init|=
literal|33
decl_stmt|;
DECL|field|BANG
name|int
name|BANG
init|=
literal|34
decl_stmt|;
DECL|field|ARG_ACTION
name|int
name|ARG_ACTION
init|=
literal|35
decl_stmt|;
DECL|field|LITERAL_returns
name|int
name|LITERAL_returns
init|=
literal|36
decl_stmt|;
DECL|field|COLON
name|int
name|COLON
init|=
literal|37
decl_stmt|;
DECL|field|LITERAL_throws
name|int
name|LITERAL_throws
init|=
literal|38
decl_stmt|;
DECL|field|COMMA
name|int
name|COMMA
init|=
literal|39
decl_stmt|;
DECL|field|LITERAL_exception
name|int
name|LITERAL_exception
init|=
literal|40
decl_stmt|;
DECL|field|LITERAL_catch
name|int
name|LITERAL_catch
init|=
literal|41
decl_stmt|;
DECL|field|NOT_OP
name|int
name|NOT_OP
init|=
literal|42
decl_stmt|;
DECL|field|SEMPRED
name|int
name|SEMPRED
init|=
literal|43
decl_stmt|;
DECL|field|TREE_BEGIN
name|int
name|TREE_BEGIN
init|=
literal|44
decl_stmt|;
DECL|field|QUESTION
name|int
name|QUESTION
init|=
literal|45
decl_stmt|;
DECL|field|STAR
name|int
name|STAR
init|=
literal|46
decl_stmt|;
DECL|field|PLUS
name|int
name|PLUS
init|=
literal|47
decl_stmt|;
DECL|field|IMPLIES
name|int
name|IMPLIES
init|=
literal|48
decl_stmt|;
DECL|field|CARET
name|int
name|CARET
init|=
literal|49
decl_stmt|;
DECL|field|WILDCARD
name|int
name|WILDCARD
init|=
literal|50
decl_stmt|;
DECL|field|LITERAL_options
name|int
name|LITERAL_options
init|=
literal|51
decl_stmt|;
DECL|field|WS
name|int
name|WS
init|=
literal|52
decl_stmt|;
DECL|field|COMMENT
name|int
name|COMMENT
init|=
literal|53
decl_stmt|;
DECL|field|SL_COMMENT
name|int
name|SL_COMMENT
init|=
literal|54
decl_stmt|;
DECL|field|ML_COMMENT
name|int
name|ML_COMMENT
init|=
literal|55
decl_stmt|;
DECL|field|ESC
name|int
name|ESC
init|=
literal|56
decl_stmt|;
DECL|field|DIGIT
name|int
name|DIGIT
init|=
literal|57
decl_stmt|;
DECL|field|XDIGIT
name|int
name|XDIGIT
init|=
literal|58
decl_stmt|;
DECL|field|VOCAB
name|int
name|VOCAB
init|=
literal|59
decl_stmt|;
DECL|field|NESTED_ARG_ACTION
name|int
name|NESTED_ARG_ACTION
init|=
literal|60
decl_stmt|;
DECL|field|NESTED_ACTION
name|int
name|NESTED_ACTION
init|=
literal|61
decl_stmt|;
DECL|field|WS_LOOP
name|int
name|WS_LOOP
init|=
literal|62
decl_stmt|;
DECL|field|INTERNAL_RULE_REF
name|int
name|INTERNAL_RULE_REF
init|=
literal|63
decl_stmt|;
DECL|field|WS_OPT
name|int
name|WS_OPT
init|=
literal|64
decl_stmt|;
DECL|field|NOT_USEFUL
name|int
name|NOT_USEFUL
init|=
literal|65
decl_stmt|;
block|}
end_interface

end_unit

