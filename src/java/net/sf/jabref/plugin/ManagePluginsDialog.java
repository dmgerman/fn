begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * To change this template, choose Tools | Templates  * and open the template in the editor.  */
end_comment

begin_package
DECL|package|net.sf.jabref.plugin
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|plugin
package|;
end_package

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|SortedList
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|gui
operator|.
name|TableFormat
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|swing
operator|.
name|EventTableModel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|ButtonBarBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ActionMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|InputMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JDialog
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFileChooser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|plugin
operator|.
name|PluginInstaller
operator|.
name|NameAndVersion
import|;
end_import

begin_comment
comment|/**  *  * @author alver  */
end_comment

begin_class
DECL|class|ManagePluginsDialog
specifier|public
class|class
name|ManagePluginsDialog
block|{
DECL|field|frame
specifier|private
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|diag
specifier|private
name|JDialog
name|diag
decl_stmt|;
DECL|field|plugins
specifier|private
name|SortedList
argument_list|<
name|NameAndVersion
argument_list|>
name|plugins
decl_stmt|;
DECL|field|table
specifier|private
name|JTable
name|table
decl_stmt|;
DECL|field|tableFormat
specifier|private
name|TableFormat
name|tableFormat
decl_stmt|;
DECL|field|close
specifier|private
name|JButton
name|close
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Close"
argument_list|)
argument_list|)
decl_stmt|,
DECL|field|install
name|install
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Install plugin"
argument_list|)
argument_list|)
decl_stmt|,
DECL|field|remove
name|remove
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Delete"
argument_list|)
argument_list|)
decl_stmt|;
DECL|method|ManagePluginsDialog (JabRefFrame frame)
specifier|public
name|ManagePluginsDialog
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|diag
operator|=
operator|new
name|JDialog
argument_list|(
name|frame
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Plugin manager"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|table
operator|=
operator|new
name|JTable
argument_list|()
expr_stmt|;
name|buildList
argument_list|()
expr_stmt|;
name|diag
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JScrollPane
argument_list|(
name|table
argument_list|)
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|ButtonBarBuilder
name|b
init|=
operator|new
name|ButtonBarBuilder
argument_list|()
decl_stmt|;
name|b
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|b
operator|.
name|addGridded
argument_list|(
name|install
argument_list|)
expr_stmt|;
name|b
operator|.
name|addGridded
argument_list|(
name|remove
argument_list|)
expr_stmt|;
name|b
operator|.
name|addRelatedGap
argument_list|()
expr_stmt|;
name|b
operator|.
name|addGridded
argument_list|(
name|close
argument_list|)
expr_stmt|;
name|b
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|b
operator|.
name|getPanel
argument_list|()
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|diag
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|b
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|diag
operator|.
name|pack
argument_list|()
expr_stmt|;
name|diag
operator|.
name|setLocationRelativeTo
argument_list|(
name|frame
argument_list|)
expr_stmt|;
name|install
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|arg0
parameter_list|)
block|{
name|installPlugin
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|Action
name|closeListener
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|arg0
parameter_list|)
block|{
name|diag
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|close
operator|.
name|addActionListener
argument_list|(
name|closeListener
argument_list|)
expr_stmt|;
name|remove
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|arg0
parameter_list|)
block|{
name|removeSelected
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// Key bindings:
name|ActionMap
name|am
init|=
name|b
operator|.
name|getPanel
argument_list|()
operator|.
name|getActionMap
argument_list|()
decl_stmt|;
name|InputMap
name|im
init|=
name|b
operator|.
name|getPanel
argument_list|()
operator|.
name|getInputMap
argument_list|(
name|JComponent
operator|.
name|WHEN_IN_FOCUSED_WINDOW
argument_list|)
decl_stmt|;
name|im
operator|.
name|put
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getKey
argument_list|(
literal|"Close dialog"
argument_list|)
argument_list|,
literal|"close"
argument_list|)
expr_stmt|;
name|am
operator|.
name|put
argument_list|(
literal|"close"
argument_list|,
name|closeListener
argument_list|)
expr_stmt|;
block|}
DECL|method|removeSelected ()
specifier|private
name|void
name|removeSelected
parameter_list|()
block|{
name|int
index|[]
name|sel
init|=
name|table
operator|.
name|getSelectedRows
argument_list|()
decl_stmt|;
if|if
condition|(
name|sel
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|String
name|message
init|=
name|Globals
operator|.
name|lang
argument_list|(
literal|"Delete the %0 selected plugins?"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|sel
operator|.
name|length
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|title
init|=
name|Globals
operator|.
name|lang
argument_list|(
literal|"Delete plugins"
argument_list|)
decl_stmt|;
if|if
condition|(
name|sel
operator|.
name|length
operator|==
literal|1
condition|)
block|{
name|message
operator|=
name|Globals
operator|.
name|lang
argument_list|(
literal|"Delete the selected plugin?"
argument_list|)
expr_stmt|;
name|title
operator|=
name|Globals
operator|.
name|lang
argument_list|(
literal|"Delete plugin"
argument_list|)
expr_stmt|;
block|}
name|int
name|reply
init|=
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|frame
argument_list|,
name|message
argument_list|,
name|title
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
decl_stmt|;
if|if
condition|(
name|reply
operator|!=
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
return|return;
name|boolean
name|success
init|=
literal|true
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sel
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|PluginInstaller
operator|.
name|NameAndVersion
name|nav
init|=
name|plugins
operator|.
name|get
argument_list|(
name|sel
index|[
name|i
index|]
argument_list|)
decl_stmt|;
name|success
operator|=
name|PluginInstaller
operator|.
name|deletePlugin
argument_list|(
name|nav
argument_list|)
operator|&
name|success
expr_stmt|;
block|}
name|buildList
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|buildList ()
specifier|private
name|void
name|buildList
parameter_list|()
block|{
name|plugins
operator|=
operator|new
name|SortedList
argument_list|<
name|NameAndVersion
argument_list|>
argument_list|(
name|PluginInstaller
operator|.
name|findInstalledPlugins
argument_list|()
argument_list|)
expr_stmt|;
name|tableFormat
operator|=
operator|new
name|PluginTableFormat
argument_list|()
expr_stmt|;
name|EventTableModel
name|tableModel
init|=
operator|new
name|EventTableModel
argument_list|(
name|plugins
argument_list|,
name|tableFormat
argument_list|)
decl_stmt|;
name|table
operator|.
name|setModel
argument_list|(
name|tableModel
argument_list|)
expr_stmt|;
block|}
DECL|method|setVisible (boolean visible)
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|visible
parameter_list|)
block|{
name|diag
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
block|}
DECL|method|installPlugin ()
specifier|public
name|void
name|installPlugin
parameter_list|()
block|{
name|String
name|filename
init|=
name|Globals
operator|.
name|getNewFile
argument_list|(
name|frame
argument_list|,
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
argument_list|)
argument_list|,
literal|".jar"
argument_list|,
name|JFileChooser
operator|.
name|OPEN_DIALOG
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|filename
operator|==
literal|null
condition|)
return|return;
name|File
name|f
init|=
operator|new
name|File
argument_list|(
name|filename
argument_list|)
decl_stmt|;
if|if
condition|(
name|f
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|f
operator|.
name|exists
argument_list|()
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|frame
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"File not found"
argument_list|)
operator|+
literal|"."
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Plugin installer"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
try|try
block|{
name|PluginInstaller
operator|.
name|installPlugin
argument_list|(
name|frame
argument_list|,
operator|new
name|URL
argument_list|(
literal|"file://"
operator|+
name|f
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|class|PluginTableFormat
class|class
name|PluginTableFormat
implements|implements
name|TableFormat
argument_list|<
name|NameAndVersion
argument_list|>
block|{
DECL|method|getColumnCount ()
specifier|public
name|int
name|getColumnCount
parameter_list|()
block|{
return|return
literal|2
return|;
block|}
DECL|method|getColumnName (int col)
specifier|public
name|String
name|getColumnName
parameter_list|(
name|int
name|col
parameter_list|)
block|{
if|if
condition|(
name|col
operator|==
literal|0
condition|)
return|return
name|Globals
operator|.
name|lang
argument_list|(
literal|"Plugin name"
argument_list|)
return|;
else|else
return|return
name|Globals
operator|.
name|lang
argument_list|(
literal|"Version"
argument_list|)
return|;
block|}
DECL|method|getColumnValue (NameAndVersion nav, int col)
specifier|public
name|Object
name|getColumnValue
parameter_list|(
name|NameAndVersion
name|nav
parameter_list|,
name|int
name|col
parameter_list|)
block|{
if|if
condition|(
name|col
operator|==
literal|0
condition|)
return|return
name|nav
operator|.
name|name
return|;
else|else
return|return
name|nav
operator|.
name|version
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

