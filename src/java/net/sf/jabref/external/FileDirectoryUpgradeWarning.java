begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.external
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|external
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
operator|.
name|ParserResult
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
operator|.
name|PostOpenAction
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_comment
comment|/**  * This class defines the warning that can be offered when opening a pre-2.7  * JabRef file into a later version. This warning mentions the new user-specific  * file directory setting in this version of JabRef, and offers to:  *  * * upgrade old-style file directory setting into the new user specific setting  */
end_comment

begin_class
DECL|class|FileDirectoryUpgradeWarning
specifier|public
class|class
name|FileDirectoryUpgradeWarning
implements|implements
name|PostOpenAction
block|{
comment|/**      * This method should be performed if the major/minor versions recorded in the ParserResult      * are less than or equal to 2.6.      * @param pr      * @return true if the file was written by a jabref version<=2.6      */
DECL|method|isActionNecessary (ParserResult pr)
specifier|public
name|boolean
name|isActionNecessary
parameter_list|(
name|ParserResult
name|pr
parameter_list|)
block|{
comment|// First check if this warning is disabled:
if|if
condition|(
operator|!
name|Globals
operator|.
name|prefs
operator|.
name|getBoolean
argument_list|(
literal|"showFileDirUpgradeWarning"
argument_list|)
condition|)
return|return
literal|false
return|;
if|if
condition|(
name|pr
operator|.
name|getJabrefMajorVersion
argument_list|()
operator|<
literal|0
condition|)
return|return
literal|false
return|;
comment|// non-JabRef file
if|if
condition|(
name|pr
operator|.
name|getJabrefMajorVersion
argument_list|()
operator|<
literal|2
condition|)
return|return
literal|true
return|;
comment|// old
if|if
condition|(
name|pr
operator|.
name|getJabrefMajorVersion
argument_list|()
operator|>
literal|2
condition|)
return|return
literal|false
return|;
comment|// wow, did we ever reach version 3?
return|return
operator|(
operator|(
operator|(
name|float
operator|)
name|pr
operator|.
name|getJabrefMinorVersion
argument_list|()
operator|+
operator|(
operator|(
name|float
operator|)
name|pr
operator|.
name|getJabrefMinor2Version
argument_list|()
operator|/
literal|10
operator|)
operator|)
operator|<
operator|(
operator|(
name|float
operator|)
literal|6.1
operator|)
operator|)
return|;
block|}
comment|/**      * This method presents a dialog box explaining and offering to make the      * changes. If the user confirms, the changes are performed.      * @param panel      * @param pr      */
DECL|method|performAction (BasePanel panel, ParserResult pr)
specifier|public
name|void
name|performAction
parameter_list|(
name|BasePanel
name|panel
parameter_list|,
name|ParserResult
name|pr
parameter_list|)
block|{
comment|// Find out which actions should be offered:
comment|// Only offer to change database properties if database already has a (legacy) GUIGlobals.FILE_FIELD+"Directory" setting
name|boolean
name|offerSetFileDir
init|=
operator|!
operator|(
name|panel
operator|.
name|metaData
argument_list|()
operator|.
name|getData
argument_list|(
name|GUIGlobals
operator|.
name|FILE_FIELD
operator|+
literal|"Directory"
argument_list|)
operator|==
literal|null
operator|)
operator|&&
operator|(
name|panel
operator|.
name|metaData
argument_list|()
operator|.
name|getData
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
literal|"userFileDir"
argument_list|)
argument_list|)
operator|==
literal|null
operator|)
decl_stmt|;
if|if
condition|(
operator|!
name|offerSetFileDir
condition|)
return|return;
comment|// Nothing to do, just return.
name|JCheckBox
name|setFileDir
init|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Set user specific file directory"
argument_list|)
operator|+
literal|":"
argument_list|,
name|offerSetFileDir
argument_list|)
decl_stmt|;
name|JTextField
name|fileDir
init|=
operator|new
name|JTextField
argument_list|(
literal|30
argument_list|)
decl_stmt|;
name|JCheckBox
name|retainOldFileDir
init|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Retain legacy file directory setting (for older versions of JabRef)"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|JCheckBox
name|doNotShowDialog
init|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Do not show these options in the future"
argument_list|)
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|"<html>"
argument_list|)
decl_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"This database was written using an older version of JabRef."
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"<br>"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"The current version features a new way of storing the file directory setting of<br>"
operator|+
literal|"a database. This enables multiple users of the same database file to keep their<br>"
operator|+
literal|"own personal setting for the path to the file directory.<br>"
operator|+
literal|"To take advantage of this, your file directory setting must be changed into the<br>"
operator|+
literal|"new format."
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"<p>"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Do you want JabRef to do the following operations?"
argument_list|)
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"</html>"
argument_list|)
expr_stmt|;
name|JPanel
name|message
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|DefaultFormBuilder
name|b
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"left:pref"
argument_list|,
literal|""
argument_list|)
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|b
operator|.
name|append
argument_list|(
operator|new
name|JLabel
argument_list|(
name|sb
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|b
operator|.
name|nextLine
argument_list|()
expr_stmt|;
if|if
condition|(
name|offerSetFileDir
condition|)
block|{
if|if
condition|(
name|panel
operator|.
name|metaData
argument_list|()
operator|.
name|getData
argument_list|(
name|GUIGlobals
operator|.
name|FILE_FIELD
operator|+
literal|"Directory"
argument_list|)
operator|!=
literal|null
condition|)
name|fileDir
operator|.
name|setText
argument_list|(
name|panel
operator|.
name|metaData
argument_list|()
operator|.
name|getData
argument_list|(
name|GUIGlobals
operator|.
name|FILE_FIELD
operator|+
literal|"Directory"
argument_list|)
operator|.
name|firstElement
argument_list|()
argument_list|)
expr_stmt|;
name|JPanel
name|pan
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|pan
operator|.
name|add
argument_list|(
name|setFileDir
argument_list|)
expr_stmt|;
name|pan
operator|.
name|add
argument_list|(
name|fileDir
argument_list|)
expr_stmt|;
comment|//b.nextLine();
name|JButton
name|browse
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Browse"
argument_list|)
argument_list|)
decl_stmt|;
name|browse
operator|.
name|addActionListener
argument_list|(
operator|new
name|BrowseAction
argument_list|(
literal|null
argument_list|,
name|fileDir
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|pan
operator|.
name|add
argument_list|(
name|browse
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|pan
argument_list|)
expr_stmt|;
name|b
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|JPanel
name|pan2
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|pan2
operator|.
name|add
argument_list|(
name|retainOldFileDir
argument_list|)
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|pan2
argument_list|)
expr_stmt|;
name|b
operator|.
name|nextLine
argument_list|()
expr_stmt|;
block|}
name|b
operator|.
name|append
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|b
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|b
operator|.
name|append
argument_list|(
name|doNotShowDialog
argument_list|)
expr_stmt|;
name|int
name|answer
init|=
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|panel
operator|.
name|frame
argument_list|()
argument_list|,
name|message
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Upgrade file"
argument_list|)
operator|+
literal|" - "
operator|+
name|pr
operator|.
name|getFile
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
decl_stmt|;
if|if
condition|(
name|doNotShowDialog
operator|.
name|isSelected
argument_list|()
condition|)
name|Globals
operator|.
name|prefs
operator|.
name|putBoolean
argument_list|(
literal|"showFileDirUpgradeWarning"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|answer
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
name|makeChanges
argument_list|(
name|panel
argument_list|,
name|pr
argument_list|,
name|setFileDir
operator|.
name|isSelected
argument_list|()
condition|?
name|fileDir
operator|.
name|getText
argument_list|()
else|:
literal|null
argument_list|,
name|retainOldFileDir
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * This method performs the actual changes.      * @param panel      * @param pr      * @param fileDir The path to the file directory to set, or null if it should not be set.      */
DECL|method|makeChanges (BasePanel panel, ParserResult pr, String fileDir, boolean retainOldFileLinks)
specifier|public
name|void
name|makeChanges
parameter_list|(
name|BasePanel
name|panel
parameter_list|,
name|ParserResult
name|pr
parameter_list|,
name|String
name|fileDir
parameter_list|,
name|boolean
name|retainOldFileLinks
parameter_list|)
block|{
name|boolean
name|changed
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|fileDir
operator|!=
literal|null
condition|)
block|{
name|Vector
argument_list|<
name|String
argument_list|>
name|vec
init|=
operator|new
name|Vector
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|vec
operator|.
name|add
argument_list|(
name|fileDir
argument_list|)
expr_stmt|;
name|panel
operator|.
name|metaData
argument_list|()
operator|.
name|putData
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
literal|"userFileDir"
argument_list|)
argument_list|,
name|vec
argument_list|)
expr_stmt|;
name|changed
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|retainOldFileLinks
condition|)
block|{
name|panel
operator|.
name|metaData
argument_list|()
operator|.
name|remove
argument_list|(
name|GUIGlobals
operator|.
name|FILE_FIELD
operator|+
literal|"Directory"
argument_list|)
expr_stmt|;
name|changed
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
name|changed
condition|)
name|panel
operator|.
name|markNonUndoableBaseChanged
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

