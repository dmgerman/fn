begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|ButtonBarBuilder
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BaseAction
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|groups
operator|.
name|AllEntriesGroup
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|groups
operator|.
name|GroupTreeCellRenderer
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|groups
operator|.
name|GroupTreeNode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Created with IntelliJ IDEA.  * User: alver  * Date: 1/22/13  * Time: 6:24 PM  * To change this template use File | Settings | File Templates.  */
end_comment

begin_class
DECL|class|GroupAddRemoveDialog
specifier|public
class|class
name|GroupAddRemoveDialog
extends|extends
name|BaseAction
block|{
DECL|field|panel
specifier|private
name|BasePanel
name|panel
decl_stmt|;
DECL|field|add
specifier|private
name|boolean
name|add
decl_stmt|;
DECL|method|GroupAddRemoveDialog (BasePanel panel, boolean add)
specifier|public
name|GroupAddRemoveDialog
parameter_list|(
name|BasePanel
name|panel
parameter_list|,
name|boolean
name|add
parameter_list|)
block|{
name|this
operator|.
name|panel
operator|=
name|panel
expr_stmt|;
name|this
operator|.
name|add
operator|=
name|add
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|action ()
specifier|public
name|void
name|action
parameter_list|()
throws|throws
name|Throwable
block|{
name|GroupTreeNode
name|groups
init|=
name|panel
operator|.
name|metaData
argument_list|()
operator|.
name|getGroups
argument_list|()
decl_stmt|;
if|if
condition|(
name|groups
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|JDialog
name|diag
init|=
operator|new
name|JDialog
argument_list|(
name|panel
operator|.
name|frame
argument_list|()
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
name|add
condition|?
literal|"Add to group"
else|:
literal|"Remove from group"
argument_list|)
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|JButton
name|ok
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Ok"
argument_list|)
argument_list|)
decl_stmt|,
name|cancel
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
decl_stmt|;
name|JTree
name|tree
init|=
operator|new
name|JTree
argument_list|(
name|groups
argument_list|)
decl_stmt|;
name|tree
operator|.
name|setCellRenderer
argument_list|(
operator|new
name|GroupTreeCellRenderer
argument_list|()
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setVisibleRowCount
argument_list|(
literal|18
argument_list|)
expr_stmt|;
name|ButtonBarBuilder
name|bb
init|=
operator|new
name|ButtonBarBuilder
argument_list|()
decl_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|cancel
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|bb
operator|.
name|getPanel
argument_list|()
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|diag
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JScrollPane
argument_list|(
name|tree
argument_list|)
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|diag
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|bb
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|diag
operator|.
name|pack
argument_list|()
expr_stmt|;
name|diag
operator|.
name|setLocationRelativeTo
argument_list|(
name|panel
operator|.
name|frame
argument_list|()
argument_list|)
expr_stmt|;
name|diag
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**      * @param move For add: if true, remove from previous groups      public void insertNodes(JMenu menu, GroupTreeNode node, BibtexEntry[] selection,                             boolean add, boolean move) {         final AbstractAction action = getAction(node,selection,add,move);          if (node.getChildCount() == 0) {             JMenuItem menuItem = new JMenuItem(action);             setGroupFontAndIcon(menuItem, node.getGroup());             menu.add(menuItem);             if (action.isEnabled())                 menu.setEnabled(true);             return;         }          JMenu submenu = null;         if (node.getGroup() instanceof AllEntriesGroup) {             for (int i = 0; i< node.getChildCount(); ++i) {                 insertNodes(menu,(GroupTreeNode) node.getChildAt(i), selection, add, move);             }         } else {             submenu = new JMenu("["+node.getGroup().getName()+"]");             setGroupFontAndIcon(submenu, node.getGroup());             // setEnabled(true) is done above/below if at least one menu             // entry (item or submenu) is enabled             submenu.setEnabled(action.isEnabled());             JMenuItem menuItem = new JMenuItem(action);             setGroupFontAndIcon(menuItem, node.getGroup());             submenu.add(menuItem);             submenu.add(new JPopupMenu.Separator());             for (int i = 0; i< node.getChildCount(); ++i)                 insertNodes(submenu,(GroupTreeNode) node.getChildAt(i), selection, add, move);             menu.add(submenu);             if (submenu.isEnabled())                 menu.setEnabled(true);         }     }      */
block|}
end_class

end_unit

