begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_comment
comment|/**  * Created by IntelliJ IDEA.  * User: alver  * Date: Oct 10, 2005  * Time: 4:29:35 PM  * To change this template use File | Settings | File Templates.  */
end_comment

begin_class
DECL|class|ColorSetupPanel
specifier|public
class|class
name|ColorSetupPanel
extends|extends
name|JPanel
block|{
DECL|field|ICON_WIDTH
DECL|field|ICON_HEIGHT
specifier|private
specifier|final
specifier|static
name|int
name|ICON_WIDTH
init|=
literal|30
decl_stmt|,
name|ICON_HEIGHT
init|=
literal|20
decl_stmt|;
DECL|field|buttons
specifier|private
name|ArrayList
argument_list|<
name|ColorButton
argument_list|>
name|buttons
init|=
operator|new
name|ArrayList
argument_list|<
name|ColorButton
argument_list|>
argument_list|()
decl_stmt|;
DECL|method|ColorSetupPanel ()
specifier|public
name|ColorSetupPanel
parameter_list|()
block|{
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"30dlu, 4dlu, fill:pref, 4dlu, fill:pref"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|ColorButton
argument_list|(
literal|"tableText"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Table text color"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|ColorButton
argument_list|(
literal|"tableBackground"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Table background color"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|ColorButton
argument_list|(
literal|"tableReqFieldBackground"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Background color for required fields"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|ColorButton
argument_list|(
literal|"tableOptFieldBackground"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Background color for optional fields"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|ColorButton
argument_list|(
literal|"markedEntryBackground"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Background color for marked entries"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|ColorButton
argument_list|(
literal|"incompleteEntryBackground"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Color for marking incomplete entries"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
operator|new
name|ColorButton
argument_list|(
literal|"gridColor"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Table grid color"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
argument_list|<
name|ColorButton
argument_list|>
name|i
init|=
name|buttons
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ColorButton
name|but
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|but
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|but
operator|.
name|getDefaultButton
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|but
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|but
operator|.
name|addActionListener
argument_list|(
operator|new
name|ColorButtonListener
argument_list|(
name|but
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|builder
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|setValues
argument_list|()
expr_stmt|;
block|}
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
for|for
control|(
name|Iterator
argument_list|<
name|ColorButton
argument_list|>
name|i
init|=
name|buttons
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ColorButton
name|but
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|but
operator|.
name|setColor
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getColor
argument_list|(
name|but
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
for|for
control|(
name|Iterator
argument_list|<
name|ColorButton
argument_list|>
name|i
init|=
name|buttons
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|ColorButton
name|but
init|=
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|Globals
operator|.
name|prefs
operator|.
name|putColor
argument_list|(
name|but
operator|.
name|getKey
argument_list|()
argument_list|,
name|but
operator|.
name|getColor
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|class|ColorButtonListener
class|class
name|ColorButtonListener
implements|implements
name|ActionListener
block|{
DECL|field|button
specifier|private
name|ColorButton
name|button
decl_stmt|;
DECL|method|ColorButtonListener (ColorButton button)
specifier|public
name|ColorButtonListener
parameter_list|(
name|ColorButton
name|button
parameter_list|)
block|{
name|this
operator|.
name|button
operator|=
name|button
expr_stmt|;
block|}
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|Color
name|chosen
init|=
name|JColorChooser
operator|.
name|showDialog
argument_list|(
literal|null
argument_list|,
name|button
operator|.
name|getName
argument_list|()
argument_list|,
name|button
operator|.
name|getColor
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|chosen
operator|!=
literal|null
condition|)
name|button
operator|.
name|setColor
argument_list|(
name|chosen
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * A button to display the chosen color, and hold key information about a color setting.      * Includes a method to produce a Default button for this setting.      */
DECL|class|ColorButton
class|class
name|ColorButton
extends|extends
name|JButton
implements|implements
name|Icon
block|{
DECL|field|color
specifier|private
name|Color
name|color
init|=
name|Color
operator|.
name|white
decl_stmt|;
DECL|field|key
DECL|field|name
specifier|private
name|String
name|key
decl_stmt|,
name|name
decl_stmt|;
DECL|method|ColorButton (String key, String name)
specifier|public
name|ColorButton
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|setIcon
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|key
operator|=
name|key
expr_stmt|;
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createRaisedBevelBorder
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getDefaultButton ()
specifier|public
name|JButton
name|getDefaultButton
parameter_list|()
block|{
name|JButton
name|toDefault
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Default"
argument_list|)
argument_list|)
decl_stmt|;
name|toDefault
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|setColor
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getDefaultColor
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
name|repaint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|toDefault
return|;
block|}
DECL|method|getKey ()
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
name|key
return|;
block|}
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getColor ()
specifier|public
name|Color
name|getColor
parameter_list|()
block|{
return|return
name|color
return|;
block|}
DECL|method|setColor (Color color)
specifier|public
name|void
name|setColor
parameter_list|(
name|Color
name|color
parameter_list|)
block|{
name|this
operator|.
name|color
operator|=
name|color
expr_stmt|;
block|}
DECL|method|paintIcon (Component c, Graphics g, int x, int y)
specifier|public
name|void
name|paintIcon
parameter_list|(
name|Component
name|c
parameter_list|,
name|Graphics
name|g
parameter_list|,
name|int
name|x
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|Rectangle
name|r
init|=
name|g
operator|.
name|getClipBounds
argument_list|()
decl_stmt|;
name|g
operator|.
name|setColor
argument_list|(
name|color
argument_list|)
expr_stmt|;
name|g
operator|.
name|fillRect
argument_list|(
name|r
operator|.
name|x
argument_list|,
name|r
operator|.
name|y
argument_list|,
name|r
operator|.
name|width
argument_list|,
name|r
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
DECL|method|getIconWidth ()
specifier|public
name|int
name|getIconWidth
parameter_list|()
block|{
return|return
name|ICON_WIDTH
return|;
block|}
DECL|method|getIconHeight ()
specifier|public
name|int
name|getIconHeight
parameter_list|()
block|{
return|return
name|ICON_HEIGHT
return|;
block|}
block|}
block|}
end_class

end_unit

