begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|BasicEventList
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|EventList
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|SortedList
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|event
operator|.
name|ListEvent
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|event
operator|.
name|ListEventListener
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|gui
operator|.
name|TableFormat
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|swing
operator|.
name|EventSelectionModel
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|swing
operator|.
name|EventTableModel
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|swing
operator|.
name|TableComparatorChooser
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|uif_lite
operator|.
name|component
operator|.
name|UIFSplitPane
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_comment
comment|/**  * Dialog to display search results, potentially from more than one BasePanel, with  * possibility to preview and to locate each entry in the main window.  *  * TODO: should be possible to save or export the list.  */
end_comment

begin_class
DECL|class|SearchResultsDialog
specifier|public
class|class
name|SearchResultsDialog
block|{
DECL|field|frame
specifier|private
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|title
specifier|private
name|String
name|title
decl_stmt|;
DECL|field|diag
specifier|private
name|JDialog
name|diag
decl_stmt|;
DECL|field|fields
specifier|private
name|String
index|[]
name|fields
init|=
operator|new
name|String
index|[]
block|{
literal|"author"
block|,
literal|"title"
block|,
literal|"year"
block|,
literal|"journal"
block|}
decl_stmt|;
DECL|field|toRect
specifier|protected
name|Rectangle
name|toRect
init|=
operator|new
name|Rectangle
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
decl_stmt|;
DECL|field|model
specifier|private
name|EventTableModel
name|model
decl_stmt|;
DECL|field|entries
specifier|private
name|EventList
argument_list|<
name|BibtexEntry
argument_list|>
name|entries
init|=
operator|new
name|BasicEventList
argument_list|<
name|BibtexEntry
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|sortedEntries
specifier|private
name|SortedList
argument_list|<
name|BibtexEntry
argument_list|>
name|sortedEntries
decl_stmt|;
DECL|field|entryHome
specifier|private
name|HashMap
argument_list|<
name|BibtexEntry
argument_list|,
name|BasePanel
argument_list|>
name|entryHome
init|=
operator|new
name|HashMap
argument_list|<
name|BibtexEntry
argument_list|,
name|BasePanel
argument_list|>
argument_list|()
decl_stmt|;
DECL|field|entryTable
specifier|private
name|JTable
name|entryTable
decl_stmt|;
DECL|field|contentPane
specifier|protected
name|UIFSplitPane
name|contentPane
init|=
operator|new
name|UIFSplitPane
argument_list|(
name|UIFSplitPane
operator|.
name|VERTICAL_SPLIT
argument_list|)
decl_stmt|;
DECL|field|preview
name|PreviewPanel
name|preview
decl_stmt|;
DECL|method|SearchResultsDialog (JabRefFrame frame, String title)
specifier|public
name|SearchResultsDialog
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|,
name|String
name|title
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|init
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
DECL|method|init (String title)
specifier|private
name|void
name|init
parameter_list|(
name|String
name|title
parameter_list|)
block|{
name|diag
operator|=
operator|new
name|JDialog
argument_list|(
name|frame
argument_list|,
name|title
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|preview
operator|=
operator|new
name|PreviewPanel
argument_list|(
literal|null
argument_list|,
operator|new
name|MetaData
argument_list|()
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
literal|"preview1"
argument_list|)
argument_list|)
expr_stmt|;
name|sortedEntries
operator|=
operator|new
name|SortedList
argument_list|<
name|BibtexEntry
argument_list|>
argument_list|(
name|entries
argument_list|,
operator|new
name|EntryComparator
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|,
literal|"author"
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|=
operator|new
name|EventTableModel
argument_list|(
name|sortedEntries
argument_list|,
operator|new
name|EntryTableFormat
argument_list|()
argument_list|)
expr_stmt|;
name|entryTable
operator|=
operator|new
name|JTable
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|TableComparatorChooser
argument_list|<
name|BibtexEntry
argument_list|>
name|tableSorter
init|=
operator|new
name|TableComparatorChooser
argument_list|<
name|BibtexEntry
argument_list|>
argument_list|(
name|entryTable
argument_list|,
name|sortedEntries
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|JScrollPane
name|sp
init|=
operator|new
name|JScrollPane
argument_list|(
name|entryTable
argument_list|)
decl_stmt|;
name|EventSelectionModel
argument_list|<
name|BibtexEntry
argument_list|>
name|selectionModel
init|=
operator|new
name|EventSelectionModel
argument_list|<
name|BibtexEntry
argument_list|>
argument_list|(
name|sortedEntries
argument_list|)
decl_stmt|;
name|entryTable
operator|.
name|setSelectionModel
argument_list|(
name|selectionModel
argument_list|)
expr_stmt|;
name|selectionModel
operator|.
name|getSelected
argument_list|()
operator|.
name|addListEventListener
argument_list|(
operator|new
name|EntrySelectionListener
argument_list|()
argument_list|)
expr_stmt|;
name|entryTable
operator|.
name|addMouseListener
argument_list|(
operator|new
name|TableClickListener
argument_list|()
argument_list|)
expr_stmt|;
name|contentPane
operator|.
name|setTopComponent
argument_list|(
name|sp
argument_list|)
expr_stmt|;
name|contentPane
operator|.
name|setBottomComponent
argument_list|(
operator|new
name|JScrollPane
argument_list|(
name|preview
argument_list|)
argument_list|)
expr_stmt|;
comment|// Key bindings:
name|AbstractAction
name|closeAction
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|diag
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|ActionMap
name|am
init|=
name|contentPane
operator|.
name|getActionMap
argument_list|()
decl_stmt|;
name|InputMap
name|im
init|=
name|contentPane
operator|.
name|getInputMap
argument_list|(
name|JComponent
operator|.
name|WHEN_IN_FOCUSED_WINDOW
argument_list|)
decl_stmt|;
name|im
operator|.
name|put
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getKey
argument_list|(
literal|"Close dialog"
argument_list|)
argument_list|,
literal|"close"
argument_list|)
expr_stmt|;
name|am
operator|.
name|put
argument_list|(
literal|"close"
argument_list|,
name|closeAction
argument_list|)
expr_stmt|;
name|diag
operator|.
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
specifier|public
name|void
name|windowOpened
parameter_list|(
name|WindowEvent
name|e
parameter_list|)
block|{
name|contentPane
operator|.
name|setDividerLocation
argument_list|(
literal|0.5f
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|diag
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|contentPane
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|diag
operator|.
name|pack
argument_list|()
expr_stmt|;
name|diag
operator|.
name|setLocationRelativeTo
argument_list|(
name|frame
argument_list|)
expr_stmt|;
block|}
DECL|method|setVisible (boolean visible)
specifier|public
name|void
name|setVisible
parameter_list|(
name|boolean
name|visible
parameter_list|)
block|{
name|diag
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
block|}
comment|/**      * Remove all entries from the table.      */
DECL|method|clear ()
specifier|public
specifier|synchronized
name|void
name|clear
parameter_list|()
block|{
name|entries
operator|.
name|clear
argument_list|()
expr_stmt|;
name|entryHome
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
comment|/**      * Add a list of entries to the table.      * @param newEntries The list of entries.      * @param panel A reference to the BasePanel where the entries belong.      */
DECL|method|addEntries (java.util.List<BibtexEntry> newEntries, BasePanel panel)
specifier|public
specifier|synchronized
name|void
name|addEntries
parameter_list|(
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|BibtexEntry
argument_list|>
name|newEntries
parameter_list|,
name|BasePanel
name|panel
parameter_list|)
block|{
for|for
control|(
name|BibtexEntry
name|entry
range|:
name|newEntries
control|)
block|{
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entryHome
operator|.
name|put
argument_list|(
name|entry
argument_list|,
name|panel
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Add a single entry to the table.      * @param entry The entry to add.      * @param panel A reference to the BasePanel where the entry belongs.      */
DECL|method|addEntry (BibtexEntry entry, BasePanel panel)
specifier|public
specifier|synchronized
name|void
name|addEntry
parameter_list|(
name|BibtexEntry
name|entry
parameter_list|,
name|BasePanel
name|panel
parameter_list|)
block|{
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|entryHome
operator|.
name|put
argument_list|(
name|entry
argument_list|,
name|panel
argument_list|)
expr_stmt|;
block|}
comment|/**      * Mouse listener for the entry table.      */
DECL|class|TableClickListener
class|class
name|TableClickListener
extends|extends
name|MouseAdapter
block|{
DECL|method|mousePressed (MouseEvent e)
specifier|public
name|void
name|mousePressed
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
comment|// First find the row on which the user has clicked.
specifier|final
name|int
name|row
init|=
name|entryTable
operator|.
name|rowAtPoint
argument_list|(
name|e
operator|.
name|getPoint
argument_list|()
argument_list|)
decl_stmt|;
comment|// A double click on an entry should highlight the entry in its BasePanel:
if|if
condition|(
name|e
operator|.
name|getClickCount
argument_list|()
operator|==
literal|2
condition|)
block|{
comment|// Get the selected entry:
name|BibtexEntry
name|toShow
init|=
operator|(
name|BibtexEntry
operator|)
name|model
operator|.
name|getElementAt
argument_list|(
name|row
argument_list|)
decl_stmt|;
comment|// Look up which BasePanel it belongs to:
name|BasePanel
name|p
init|=
name|entryHome
operator|.
name|get
argument_list|(
name|toShow
argument_list|)
decl_stmt|;
comment|// Show the correct tab in the main window:
name|frame
operator|.
name|showBasePanel
argument_list|(
name|p
argument_list|)
expr_stmt|;
comment|// Highlight the entry:
name|p
operator|.
name|highlightEntry
argument_list|(
name|toShow
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|EntrySelectionListener
class|class
name|EntrySelectionListener
implements|implements
name|ListEventListener
argument_list|<
name|BibtexEntry
argument_list|>
block|{
DECL|method|listChanged (ListEvent<BibtexEntry> listEvent)
specifier|public
name|void
name|listChanged
parameter_list|(
name|ListEvent
argument_list|<
name|BibtexEntry
argument_list|>
name|listEvent
parameter_list|)
block|{
if|if
condition|(
name|listEvent
operator|.
name|getSourceList
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
block|{
name|BibtexEntry
name|entry
init|=
name|listEvent
operator|.
name|getSourceList
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// Find out which BasePanel the selected entry belongs to:
name|BasePanel
name|p
init|=
name|entryHome
operator|.
name|get
argument_list|(
name|entry
argument_list|)
decl_stmt|;
comment|// Update the preview's metadata reference:
name|preview
operator|.
name|setMetaData
argument_list|(
name|p
operator|.
name|metaData
argument_list|()
argument_list|)
expr_stmt|;
comment|// Update the preview's entry:
name|preview
operator|.
name|setEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|contentPane
operator|.
name|setDividerLocation
argument_list|(
literal|0.5f
argument_list|)
expr_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|preview
operator|.
name|scrollRectToVisible
argument_list|(
name|toRect
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * TableFormat for the table shown in the dialog.      */
DECL|class|EntryTableFormat
specifier|public
class|class
name|EntryTableFormat
implements|implements
name|TableFormat
block|{
DECL|method|getColumnCount ()
specifier|public
name|int
name|getColumnCount
parameter_list|()
block|{
return|return
name|fields
operator|.
name|length
return|;
block|}
DECL|method|getColumnName (int column)
specifier|public
name|String
name|getColumnName
parameter_list|(
name|int
name|column
parameter_list|)
block|{
return|return
name|Util
operator|.
name|nCase
argument_list|(
name|fields
index|[
name|column
index|]
argument_list|)
return|;
block|}
DECL|method|getColumnValue (Object o, int column)
specifier|public
name|Object
name|getColumnValue
parameter_list|(
name|Object
name|o
parameter_list|,
name|int
name|column
parameter_list|)
block|{
name|BibtexEntry
name|entry
init|=
operator|(
name|BibtexEntry
operator|)
name|o
decl_stmt|;
return|return
name|entry
operator|.
name|getField
argument_list|(
name|fields
index|[
name|column
index|]
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

