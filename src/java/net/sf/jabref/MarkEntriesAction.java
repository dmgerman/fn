begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_comment
comment|/**  *  */
end_comment

begin_class
DECL|class|MarkEntriesAction
specifier|public
class|class
name|MarkEntriesAction
extends|extends
name|AbstractWorker
implements|implements
name|ActionListener
block|{
DECL|field|frame
specifier|private
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|level
specifier|final
name|int
name|level
decl_stmt|;
DECL|field|menuItem
specifier|private
name|JMenuItem
name|menuItem
decl_stmt|;
DECL|field|besLength
specifier|private
name|int
name|besLength
init|=
literal|0
decl_stmt|;
DECL|method|MarkEntriesAction (JabRefFrame frame, int level)
specifier|public
name|MarkEntriesAction
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|,
name|int
name|level
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|this
operator|.
name|level
operator|=
name|level
expr_stmt|;
comment|//menuItem = new JMenuItem(Globals.menuTitle("Mark entries").replaceAll("&",""));
name|menuItem
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"               "
argument_list|)
expr_stmt|;
name|menuItem
operator|.
name|setMnemonic
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|level
operator|+
literal|1
argument_list|)
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|menuItem
operator|.
name|setBackground
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getColor
argument_list|(
literal|"markedEntryBackground"
operator|+
name|this
operator|.
name|level
argument_list|)
argument_list|)
expr_stmt|;
name|menuItem
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|getMenuItem ()
specifier|public
name|JMenuItem
name|getMenuItem
parameter_list|()
block|{
return|return
name|menuItem
return|;
block|}
DECL|method|actionPerformed (ActionEvent actionEvent)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|actionEvent
parameter_list|)
block|{
try|try
block|{
name|this
operator|.
name|init
argument_list|()
expr_stmt|;
name|getWorker
argument_list|()
operator|.
name|run
argument_list|()
expr_stmt|;
name|getCallBack
argument_list|()
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|t
parameter_list|)
block|{
name|t
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|BasePanel
name|panel
init|=
name|frame
operator|.
name|basePanel
argument_list|()
decl_stmt|;
name|NamedCompound
name|ce
init|=
operator|new
name|NamedCompound
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Mark entries"
argument_list|)
argument_list|)
decl_stmt|;
name|BibtexEntry
index|[]
name|bes
init|=
name|panel
operator|.
name|getSelectedEntries
argument_list|()
decl_stmt|;
name|besLength
operator|=
name|bes
operator|.
name|length
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|bes
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Util
operator|.
name|markEntry
argument_list|(
name|bes
index|[
name|i
index|]
argument_list|,
name|level
operator|+
literal|1
argument_list|,
literal|false
argument_list|,
name|ce
argument_list|)
expr_stmt|;
block|}
name|ce
operator|.
name|end
argument_list|()
expr_stmt|;
name|panel
operator|.
name|undoManager
operator|.
name|addEdit
argument_list|(
name|ce
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|update ()
specifier|public
name|void
name|update
parameter_list|()
block|{
name|frame
operator|.
name|basePanel
argument_list|()
operator|.
name|markBaseChanged
argument_list|()
expr_stmt|;
name|frame
operator|.
name|output
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Marked selected"
argument_list|)
operator|+
literal|" "
operator|+
name|Globals
operator|.
name|lang
argument_list|(
name|besLength
operator|>
literal|0
condition|?
literal|"entry"
else|:
literal|"entries"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

