begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_comment
comment|/**  * HashMap that empties itself upon reaching a maximum entry count. Used to cache  * name transformations for better performance. By doing this, we accomplish removing  * old entries that may never be used again.  * @author Morten O. Alver  */
end_comment

begin_class
DECL|class|NameCache
specifier|public
class|class
name|NameCache
extends|extends
name|HashMap
block|{
DECL|field|max
DECL|field|toAdd
name|int
name|max
decl_stmt|,
name|toAdd
decl_stmt|;
DECL|method|NameCache (int max_)
specifier|public
name|NameCache
parameter_list|(
name|int
name|max_
parameter_list|)
block|{
name|max
operator|=
name|max_
expr_stmt|;
name|toAdd
operator|=
name|max_
expr_stmt|;
block|}
DECL|method|put (Object key, Object o)
specifier|public
name|Object
name|put
parameter_list|(
name|Object
name|key
parameter_list|,
name|Object
name|o
parameter_list|)
block|{
name|super
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|o
argument_list|)
expr_stmt|;
if|if
condition|(
name|size
argument_list|()
operator|>
name|max
condition|)
block|{
comment|// We have reached the maximum entry count. Thus we remove all entries, and increase the
comment|// max value.
name|clear
argument_list|()
expr_stmt|;
name|max
operator|+=
name|toAdd
expr_stmt|;
name|super
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|o
argument_list|)
expr_stmt|;
block|}
return|return
name|o
return|;
block|}
block|}
end_class

end_unit

