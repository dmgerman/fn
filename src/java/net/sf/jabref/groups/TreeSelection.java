begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Created on 10.12.2004  *  * TODO To change the template for this generated file go to  * Window - Preferences - Java - Code Style - Code Templates  */
end_comment

begin_package
DECL|package|net.sf.jabref.groups
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|groups
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|SearchRule
import|;
end_import

begin_comment
comment|/**  * @author zieren  *  * TODO To change the template for this generated type comment go to  * Window - Preferences - Java - Code Style - Code Templates  */
end_comment

begin_class
DECL|class|TreeSelection
specifier|public
class|class
name|TreeSelection
implements|implements
name|SearchRule
block|{
DECL|field|m_selection
specifier|private
name|HashSet
name|m_selection
init|=
operator|new
name|HashSet
argument_list|()
decl_stmt|;
DECL|method|TreeSelection (BibtexEntry[] selection)
specifier|public
name|TreeSelection
parameter_list|(
name|BibtexEntry
index|[]
name|selection
parameter_list|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|selection
operator|.
name|length
condition|;
operator|++
name|i
control|)
name|m_selection
operator|.
name|add
argument_list|(
name|selection
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
DECL|method|applyRule (Map searchStrings, BibtexEntry bibtexEntry)
specifier|public
name|int
name|applyRule
parameter_list|(
name|Map
name|searchStrings
parameter_list|,
name|BibtexEntry
name|bibtexEntry
parameter_list|)
block|{
return|return
name|m_selection
operator|.
name|contains
argument_list|(
name|bibtexEntry
argument_list|)
condition|?
literal|1
else|:
literal|0
return|;
block|}
block|}
end_class

end_unit

