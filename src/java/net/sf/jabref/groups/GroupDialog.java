begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003 Morten O. Alver, Nizar N. Batada   All programs in this directory and  subdirectories are published under the GNU General Public License as  described below.   This program is free software; you can redistribute it and/or modify  it under the terms of the GNU General Public License as published by  the Free Software Foundation; either version 2 of the License, or (at  your option) any later version.   This program is distributed in the hope that it will be useful, but  WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU  General Public License for more details.   You should have received a copy of the GNU General Public License  along with this program; if not, write to the Free Software  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307  USA   Further information about the GNU GPL is available at:  http://www.gnu.org/copyleft/gpl.ja.html   */
end_comment

begin_package
DECL|package|net.sf.jabref.groups
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|groups
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|*
import|;
end_import

begin_import
import|import
name|antlr
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|components
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|search
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Dialog for creating or modifying groups. Operates directly on the Vector  * containing group information.  */
end_comment

begin_class
DECL|class|GroupDialog
class|class
name|GroupDialog
extends|extends
name|JDialog
block|{
DECL|field|INDEX_KEYWORDGROUP
specifier|private
specifier|static
specifier|final
name|int
name|INDEX_KEYWORDGROUP
init|=
literal|0
decl_stmt|;
DECL|field|INDEX_SEARCHGROUP
specifier|private
specifier|static
specifier|final
name|int
name|INDEX_SEARCHGROUP
init|=
literal|1
decl_stmt|;
DECL|field|INDEX_EXPLICITGROUP
specifier|private
specifier|static
specifier|final
name|int
name|INDEX_EXPLICITGROUP
init|=
literal|2
decl_stmt|;
DECL|field|TEXTFIELD_LENGTH
specifier|private
specifier|static
specifier|final
name|int
name|TEXTFIELD_LENGTH
init|=
literal|30
decl_stmt|;
comment|// for all types
DECL|field|m_name
specifier|private
name|JTextField
name|m_name
init|=
operator|new
name|JTextField
argument_list|(
name|TEXTFIELD_LENGTH
argument_list|)
decl_stmt|;
DECL|field|m_nameLabel
specifier|private
name|JLabel
name|m_nameLabel
init|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Group name"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
comment|// for KeywordGroup
DECL|field|m_kgSearchExpression
specifier|private
name|JTextField
name|m_kgSearchExpression
init|=
operator|new
name|JTextField
argument_list|(
name|TEXTFIELD_LENGTH
argument_list|)
decl_stmt|;
DECL|field|m_searchField
specifier|private
name|JTextField
name|m_searchField
init|=
operator|new
name|JTextField
argument_list|(
name|TEXTFIELD_LENGTH
argument_list|)
decl_stmt|;
DECL|field|m_keywordLabel
specifier|private
name|JLabel
name|m_keywordLabel
init|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Search term"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
DECL|field|m_searchFieldLabel
specifier|private
name|JLabel
name|m_searchFieldLabel
init|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Field to search"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
DECL|field|m_keywordGroupPanel
specifier|private
name|JPanel
name|m_keywordGroupPanel
decl_stmt|;
comment|// for SearchGroup
DECL|field|m_sgSearchExpression
specifier|private
name|JTextField
name|m_sgSearchExpression
init|=
operator|new
name|JTextField
argument_list|(
name|TEXTFIELD_LENGTH
argument_list|)
decl_stmt|;
DECL|field|m_caseSensitive
specifier|private
name|JCheckBox
name|m_caseSensitive
init|=
operator|new
name|JCheckBox
argument_list|(
literal|"Case sensitive"
argument_list|)
decl_stmt|;
DECL|field|m_isRegExp
specifier|private
name|JCheckBox
name|m_isRegExp
init|=
operator|new
name|JCheckBox
argument_list|(
literal|"Regular Expression"
argument_list|)
decl_stmt|;
DECL|field|m_searchExpressionLabel
specifier|private
name|JLabel
name|m_searchExpressionLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|"Search expression:"
argument_list|)
decl_stmt|;
DECL|field|m_searchGroupPanel
specifier|private
name|JPanel
name|m_searchGroupPanel
decl_stmt|;
DECL|field|m_searchType
specifier|private
name|JLabel
name|m_searchType
init|=
operator|new
name|JLabel
argument_list|(
literal|"Plaintext Search"
argument_list|)
decl_stmt|;
DECL|field|m_searchAllFields
specifier|private
name|JCheckBox
name|m_searchAllFields
init|=
operator|new
name|JCheckBox
argument_list|(
literal|"Search All Fields"
argument_list|)
decl_stmt|;
DECL|field|m_searchRequiredFields
specifier|private
name|JCheckBox
name|m_searchRequiredFields
init|=
operator|new
name|JCheckBox
argument_list|(
literal|"Search Required Fields"
argument_list|)
decl_stmt|;
DECL|field|m_searchOptionalFields
specifier|private
name|JCheckBox
name|m_searchOptionalFields
init|=
operator|new
name|JCheckBox
argument_list|(
literal|"Search Optional Fields"
argument_list|)
decl_stmt|;
DECL|field|m_searchGeneralFields
specifier|private
name|JCheckBox
name|m_searchGeneralFields
init|=
operator|new
name|JCheckBox
argument_list|(
literal|"Search General Fields"
argument_list|)
decl_stmt|;
DECL|field|m_parser
specifier|private
name|SearchExpressionParser
name|m_parser
decl_stmt|;
comment|// JZTODO: translations...
comment|// for all types
DECL|field|m_types
specifier|private
name|DefaultComboBoxModel
name|m_types
init|=
operator|new
name|DefaultComboBoxModel
argument_list|()
decl_stmt|;
DECL|field|m_typeLabel
specifier|private
name|JLabel
name|m_typeLabel
init|=
operator|new
name|JLabel
argument_list|(
literal|"Assign entries based on:"
argument_list|)
decl_stmt|;
DECL|field|m_typeSelector
specifier|private
name|JComboBox
name|m_typeSelector
init|=
operator|new
name|JComboBox
argument_list|()
decl_stmt|;
DECL|field|m_ok
specifier|private
name|JButton
name|m_ok
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Ok"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|m_cancel
specifier|private
name|JButton
name|m_cancel
init|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|m_mainPanel
specifier|private
name|JPanel
name|m_mainPanel
decl_stmt|;
DECL|field|m_okPressed
specifier|private
name|boolean
name|m_okPressed
init|=
literal|false
decl_stmt|;
DECL|field|m_parent
specifier|private
specifier|final
name|JabRefFrame
name|m_parent
decl_stmt|;
DECL|field|m_basePanel
specifier|private
specifier|final
name|BasePanel
name|m_basePanel
decl_stmt|;
DECL|field|m_resultingGroup
specifier|private
name|AbstractGroup
name|m_resultingGroup
decl_stmt|;
DECL|field|m_editedGroup
specifier|private
specifier|final
name|AbstractGroup
name|m_editedGroup
decl_stmt|;
comment|/**      * Shows a group add/edit dialog.      *       * @param jabrefFrame      *            The parent frame.      * @param defaultField      *            The default grouping field.      * @param editedGroup      *            The group being edited, or null if a new group is to be      *            created.      */
DECL|method|GroupDialog (JabRefFrame jabrefFrame, BasePanel basePanel, AbstractGroup editedGroup)
specifier|public
name|GroupDialog
parameter_list|(
name|JabRefFrame
name|jabrefFrame
parameter_list|,
name|BasePanel
name|basePanel
parameter_list|,
name|AbstractGroup
name|editedGroup
parameter_list|)
block|{
name|super
argument_list|(
name|jabrefFrame
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Edit group"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|m_basePanel
operator|=
name|basePanel
expr_stmt|;
name|m_parent
operator|=
name|jabrefFrame
expr_stmt|;
name|m_editedGroup
operator|=
name|editedGroup
expr_stmt|;
comment|// set default values (overwritten if editedGroup != null)
name|m_searchField
operator|.
name|setText
argument_list|(
name|jabrefFrame
operator|.
name|prefs
argument_list|()
operator|.
name|get
argument_list|(
literal|"groupsDefaultField"
argument_list|)
argument_list|)
expr_stmt|;
comment|// configure elements
name|m_types
operator|.
name|addElement
argument_list|(
literal|"Keywords"
argument_list|)
expr_stmt|;
name|m_types
operator|.
name|addElement
argument_list|(
literal|"Search Expression"
argument_list|)
expr_stmt|;
name|m_types
operator|.
name|addElement
argument_list|(
literal|"Explicit"
argument_list|)
expr_stmt|;
name|m_typeSelector
operator|.
name|setModel
argument_list|(
name|m_types
argument_list|)
expr_stmt|;
comment|// create layout
name|m_mainPanel
operator|=
operator|new
name|JPanelYBoxPreferredWidth
argument_list|()
expr_stmt|;
name|JPanel
name|namePanel
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|()
decl_stmt|;
name|namePanel
operator|.
name|add
argument_list|(
name|m_nameLabel
argument_list|)
expr_stmt|;
name|namePanel
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|namePanel
operator|.
name|add
argument_list|(
operator|new
name|JPanelXBoxPreferredSize
argument_list|(
name|m_name
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|typePanel
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|()
decl_stmt|;
name|typePanel
operator|.
name|add
argument_list|(
name|m_typeLabel
argument_list|)
expr_stmt|;
name|typePanel
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|typePanel
operator|.
name|add
argument_list|(
operator|new
name|JPanelXBoxPreferredSize
argument_list|(
name|m_typeSelector
argument_list|)
argument_list|)
expr_stmt|;
comment|// ...for keyword group
name|m_keywordGroupPanel
operator|=
operator|new
name|JPanelYBox
argument_list|()
expr_stmt|;
name|JPanel
name|kgField
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|()
decl_stmt|;
name|kgField
operator|.
name|add
argument_list|(
name|m_searchFieldLabel
argument_list|)
expr_stmt|;
name|kgField
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|kgField
operator|.
name|add
argument_list|(
operator|new
name|JPanelXBoxPreferredSize
argument_list|(
name|m_searchField
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|kgExpression
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|()
decl_stmt|;
name|kgExpression
operator|.
name|add
argument_list|(
name|m_keywordLabel
argument_list|)
expr_stmt|;
name|kgExpression
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|kgExpression
operator|.
name|add
argument_list|(
operator|new
name|JPanelXBoxPreferredSize
argument_list|(
name|m_kgSearchExpression
argument_list|)
argument_list|)
expr_stmt|;
name|m_keywordGroupPanel
operator|.
name|add
argument_list|(
name|kgField
argument_list|)
expr_stmt|;
name|m_keywordGroupPanel
operator|.
name|add
argument_list|(
name|kgExpression
argument_list|)
expr_stmt|;
name|m_keywordGroupPanel
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createVerticalGlue
argument_list|()
argument_list|)
expr_stmt|;
comment|// ...for search group
name|m_searchGroupPanel
operator|=
operator|new
name|JPanelYBox
argument_list|()
expr_stmt|;
name|JPanel
name|sgExpression
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|()
decl_stmt|;
name|sgExpression
operator|.
name|add
argument_list|(
name|m_searchExpressionLabel
argument_list|)
expr_stmt|;
name|sgExpression
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|sgExpression
operator|.
name|add
argument_list|(
operator|new
name|JPanelXBoxPreferredSize
argument_list|(
name|m_sgSearchExpression
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|sgSearchType
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|(
name|m_searchType
argument_list|)
decl_stmt|;
name|sgSearchType
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|JPanel
name|sgCaseSensitive
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|(
name|m_caseSensitive
argument_list|)
decl_stmt|;
name|JPanel
name|sgRegExp
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|(
name|m_isRegExp
argument_list|)
decl_stmt|;
name|JPanel
name|sgAll
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|(
name|m_searchAllFields
argument_list|)
decl_stmt|;
name|JPanel
name|sgReq
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|(
name|m_searchRequiredFields
argument_list|)
decl_stmt|;
name|JPanel
name|sgOpt
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|(
name|m_searchOptionalFields
argument_list|)
decl_stmt|;
name|JPanel
name|sgGen
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|(
name|m_searchGeneralFields
argument_list|)
decl_stmt|;
name|sgCaseSensitive
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|sgRegExp
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|sgAll
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|sgReq
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|sgOpt
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|sgGen
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgExpression
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgSearchType
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgCaseSensitive
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgRegExp
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgAll
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgReq
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgOpt
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|sgGen
argument_list|)
expr_stmt|;
name|m_searchGroupPanel
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createVerticalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|m_mainPanel
operator|.
name|add
argument_list|(
name|namePanel
argument_list|)
expr_stmt|;
name|m_mainPanel
operator|.
name|add
argument_list|(
name|typePanel
argument_list|)
expr_stmt|;
name|JPanel
name|buttons
init|=
operator|new
name|JPanelXBoxPreferredHeight
argument_list|()
decl_stmt|;
name|buttons
operator|.
name|add
argument_list|(
name|m_ok
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createHorizontalStrut
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
name|m_cancel
argument_list|)
expr_stmt|;
name|Container
name|cp
init|=
name|getContentPane
argument_list|()
decl_stmt|;
name|cp
operator|.
name|setLayout
argument_list|(
operator|new
name|BoxLayout
argument_list|(
name|cp
argument_list|,
name|BoxLayout
operator|.
name|Y_AXIS
argument_list|)
argument_list|)
expr_stmt|;
name|cp
operator|.
name|add
argument_list|(
name|m_mainPanel
argument_list|)
expr_stmt|;
name|cp
operator|.
name|add
argument_list|(
name|Box
operator|.
name|createVerticalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|cp
operator|.
name|add
argument_list|(
name|buttons
argument_list|)
expr_stmt|;
comment|// add listeners
name|m_typeSelector
operator|.
name|addItemListener
argument_list|(
operator|new
name|ItemListener
argument_list|()
block|{
specifier|public
name|void
name|itemStateChanged
parameter_list|(
name|ItemEvent
name|e
parameter_list|)
block|{
name|setLayoutForGroup
argument_list|(
name|m_typeSelector
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
expr_stmt|;
name|updateComponents
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|m_cancel
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|m_ok
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|m_okPressed
operator|=
literal|true
expr_stmt|;
switch|switch
condition|(
name|m_typeSelector
operator|.
name|getSelectedIndex
argument_list|()
condition|)
block|{
case|case
name|INDEX_EXPLICITGROUP
case|:
if|if
condition|(
name|m_editedGroup
operator|instanceof
name|ExplicitGroup
condition|)
block|{
comment|// keep assignments from possible previous ExplicitGroup
name|m_resultingGroup
operator|=
name|m_editedGroup
operator|.
name|deepCopy
argument_list|()
expr_stmt|;
name|m_resultingGroup
operator|.
name|setName
argument_list|(
name|m_name
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|m_resultingGroup
operator|=
operator|new
name|ExplicitGroup
argument_list|(
name|m_name
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|m_basePanel
operator|.
name|database
argument_list|()
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
name|INDEX_KEYWORDGROUP
case|:
comment|// regex is correct, otherwise OK would have been disabled
comment|// therefore I don't catch anything here
name|m_resultingGroup
operator|=
operator|new
name|KeywordGroup
argument_list|(
name|m_name
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|m_searchField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|m_kgSearchExpression
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
name|INDEX_SEARCHGROUP
case|:
try|try
block|{
comment|// regex is correct, otherwise OK would have been
comment|// disabled
comment|// therefore I don't catch anything here
name|m_resultingGroup
operator|=
operator|new
name|SearchGroup
argument_list|(
name|m_name
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|m_sgSearchExpression
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|m_caseSensitive
operator|.
name|isSelected
argument_list|()
argument_list|,
name|m_isRegExp
operator|.
name|isSelected
argument_list|()
argument_list|,
name|m_searchAllFields
operator|.
name|isSelected
argument_list|()
argument_list|,
name|m_searchRequiredFields
operator|.
name|isSelected
argument_list|()
argument_list|,
name|m_searchOptionalFields
operator|.
name|isSelected
argument_list|()
argument_list|,
name|m_searchGeneralFields
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e1
parameter_list|)
block|{
comment|// should never happen
block|}
break|break;
block|}
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|CaretListener
name|caretListener
init|=
operator|new
name|CaretListener
argument_list|()
block|{
specifier|public
name|void
name|caretUpdate
parameter_list|(
name|CaretEvent
name|e
parameter_list|)
block|{
name|updateComponents
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|ItemListener
name|itemListener
init|=
operator|new
name|ItemListener
argument_list|()
block|{
specifier|public
name|void
name|itemStateChanged
parameter_list|(
name|ItemEvent
name|e
parameter_list|)
block|{
name|updateComponents
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|m_name
operator|.
name|addCaretListener
argument_list|(
name|caretListener
argument_list|)
expr_stmt|;
name|m_searchField
operator|.
name|addCaretListener
argument_list|(
name|caretListener
argument_list|)
expr_stmt|;
name|m_kgSearchExpression
operator|.
name|addCaretListener
argument_list|(
name|caretListener
argument_list|)
expr_stmt|;
name|m_sgSearchExpression
operator|.
name|addCaretListener
argument_list|(
name|caretListener
argument_list|)
expr_stmt|;
name|m_isRegExp
operator|.
name|addItemListener
argument_list|(
name|itemListener
argument_list|)
expr_stmt|;
name|m_caseSensitive
operator|.
name|addItemListener
argument_list|(
name|itemListener
argument_list|)
expr_stmt|;
name|m_searchAllFields
operator|.
name|addItemListener
argument_list|(
name|itemListener
argument_list|)
expr_stmt|;
name|m_searchRequiredFields
operator|.
name|addItemListener
argument_list|(
name|itemListener
argument_list|)
expr_stmt|;
name|m_searchOptionalFields
operator|.
name|addItemListener
argument_list|(
name|itemListener
argument_list|)
expr_stmt|;
name|m_searchGeneralFields
operator|.
name|addItemListener
argument_list|(
name|itemListener
argument_list|)
expr_stmt|;
comment|// configure for current type
if|if
condition|(
name|editedGroup
operator|instanceof
name|KeywordGroup
condition|)
block|{
name|KeywordGroup
name|group
init|=
operator|(
name|KeywordGroup
operator|)
name|editedGroup
decl_stmt|;
name|m_name
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchField
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getSearchField
argument_list|()
argument_list|)
expr_stmt|;
name|m_kgSearchExpression
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getSearchExpression
argument_list|()
argument_list|)
expr_stmt|;
name|m_typeSelector
operator|.
name|setSelectedIndex
argument_list|(
name|INDEX_KEYWORDGROUP
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|editedGroup
operator|instanceof
name|SearchGroup
condition|)
block|{
name|SearchGroup
name|group
init|=
operator|(
name|SearchGroup
operator|)
name|editedGroup
decl_stmt|;
name|m_name
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|m_sgSearchExpression
operator|.
name|setText
argument_list|(
name|group
operator|.
name|getSearchExpression
argument_list|()
argument_list|)
expr_stmt|;
name|m_caseSensitive
operator|.
name|setSelected
argument_list|(
name|group
operator|.
name|isCaseSensitive
argument_list|()
argument_list|)
expr_stmt|;
name|m_isRegExp
operator|.
name|setSelected
argument_list|(
name|group
operator|.
name|isRegExp
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchAllFields
operator|.
name|setSelected
argument_list|(
name|group
operator|.
name|searchAllFields
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchRequiredFields
operator|.
name|setSelected
argument_list|(
name|group
operator|.
name|searchRequiredFields
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchOptionalFields
operator|.
name|setSelected
argument_list|(
name|group
operator|.
name|searchOptionalFields
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchGeneralFields
operator|.
name|setSelected
argument_list|(
name|group
operator|.
name|searchGeneralFields
argument_list|()
argument_list|)
expr_stmt|;
name|m_typeSelector
operator|.
name|setSelectedIndex
argument_list|(
name|INDEX_SEARCHGROUP
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|editedGroup
operator|instanceof
name|ExplicitGroup
condition|)
block|{
name|m_name
operator|.
name|setText
argument_list|(
name|editedGroup
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|m_typeSelector
operator|.
name|setSelectedIndex
argument_list|(
name|INDEX_EXPLICITGROUP
argument_list|)
expr_stmt|;
block|}
name|pack
argument_list|()
expr_stmt|;
name|setSize
argument_list|(
literal|350
argument_list|,
literal|300
argument_list|)
expr_stmt|;
name|setResizable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|updateComponents
argument_list|()
expr_stmt|;
name|setLayoutForGroup
argument_list|(
name|m_typeSelector
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
expr_stmt|;
name|Util
operator|.
name|placeDialog
argument_list|(
name|this
argument_list|,
name|m_parent
argument_list|)
expr_stmt|;
block|}
DECL|method|okPressed ()
specifier|public
name|boolean
name|okPressed
parameter_list|()
block|{
return|return
name|m_okPressed
return|;
block|}
DECL|method|getResultingGroup ()
specifier|public
name|AbstractGroup
name|getResultingGroup
parameter_list|()
block|{
return|return
name|m_resultingGroup
return|;
block|}
DECL|method|setLayoutForGroup (int index)
specifier|private
name|void
name|setLayoutForGroup
parameter_list|(
name|int
name|index
parameter_list|)
block|{
switch|switch
condition|(
name|index
condition|)
block|{
case|case
name|INDEX_KEYWORDGROUP
case|:
name|m_mainPanel
operator|.
name|remove
argument_list|(
name|m_searchGroupPanel
argument_list|)
expr_stmt|;
name|m_mainPanel
operator|.
name|add
argument_list|(
name|m_keywordGroupPanel
argument_list|)
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
name|repaint
argument_list|()
expr_stmt|;
break|break;
case|case
name|INDEX_SEARCHGROUP
case|:
name|m_mainPanel
operator|.
name|remove
argument_list|(
name|m_keywordGroupPanel
argument_list|)
expr_stmt|;
name|m_mainPanel
operator|.
name|add
argument_list|(
name|m_searchGroupPanel
argument_list|)
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
name|repaint
argument_list|()
expr_stmt|;
break|break;
case|case
name|INDEX_EXPLICITGROUP
case|:
name|m_mainPanel
operator|.
name|remove
argument_list|(
name|m_searchGroupPanel
argument_list|)
expr_stmt|;
name|m_mainPanel
operator|.
name|remove
argument_list|(
name|m_keywordGroupPanel
argument_list|)
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
name|repaint
argument_list|()
expr_stmt|;
break|break;
block|}
block|}
DECL|method|updateComponents ()
specifier|private
name|void
name|updateComponents
parameter_list|()
block|{
comment|// all groups need a name
name|boolean
name|okEnabled
init|=
name|m_name
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
decl_stmt|;
name|String
name|s
decl_stmt|;
switch|switch
condition|(
name|m_typeSelector
operator|.
name|getSelectedIndex
argument_list|()
condition|)
block|{
case|case
name|INDEX_KEYWORDGROUP
case|:
name|s
operator|=
name|m_searchField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
expr_stmt|;
name|okEnabled
operator|=
name|okEnabled
operator|&&
name|s
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|&&
name|s
operator|.
name|indexOf
argument_list|(
literal|' '
argument_list|)
operator|<
literal|0
expr_stmt|;
name|s
operator|=
name|m_kgSearchExpression
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
expr_stmt|;
name|okEnabled
operator|=
name|okEnabled
operator|&&
name|s
operator|.
name|length
argument_list|()
operator|>
literal|0
expr_stmt|;
try|try
block|{
name|Pattern
operator|.
name|compile
argument_list|(
name|s
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|okEnabled
operator|=
literal|false
expr_stmt|;
block|}
break|break;
case|case
name|INDEX_SEARCHGROUP
case|:
name|s
operator|=
name|m_sgSearchExpression
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
expr_stmt|;
name|okEnabled
operator|=
name|okEnabled
operator|&
name|s
operator|.
name|length
argument_list|()
operator|>
literal|0
expr_stmt|;
name|m_parser
operator|=
operator|new
name|SearchExpressionParser
argument_list|(
operator|new
name|SearchExpressionLexer
argument_list|(
operator|new
name|StringReader
argument_list|(
name|s
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|m_parser
operator|.
name|caseSensitive
operator|=
name|m_caseSensitive
operator|.
name|isSelected
argument_list|()
expr_stmt|;
name|m_parser
operator|.
name|regex
operator|=
name|m_isRegExp
operator|.
name|isSelected
argument_list|()
expr_stmt|;
name|boolean
name|advancedSearch
init|=
literal|false
decl_stmt|;
try|try
block|{
name|m_parser
operator|.
name|searchExpression
argument_list|()
expr_stmt|;
name|advancedSearch
operator|=
literal|true
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
comment|// advancedSearch remains false;
block|}
name|m_searchType
operator|.
name|setText
argument_list|(
name|advancedSearch
condition|?
literal|"Advanced Search"
else|:
literal|"Plaintext Search"
argument_list|)
expr_stmt|;
name|m_searchAllFields
operator|.
name|setEnabled
argument_list|(
operator|!
name|advancedSearch
argument_list|)
expr_stmt|;
name|m_searchRequiredFields
operator|.
name|setEnabled
argument_list|(
operator|!
name|advancedSearch
operator|&&
operator|!
name|m_searchAllFields
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchOptionalFields
operator|.
name|setEnabled
argument_list|(
operator|!
name|advancedSearch
operator|&&
operator|!
name|m_searchAllFields
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|m_searchGeneralFields
operator|.
name|setEnabled
argument_list|(
operator|!
name|advancedSearch
operator|&&
operator|!
name|m_searchAllFields
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|validate
argument_list|()
expr_stmt|;
break|break;
case|case
name|INDEX_EXPLICITGROUP
case|:
break|break;
block|}
name|m_ok
operator|.
name|setEnabled
argument_list|(
name|okEnabled
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

