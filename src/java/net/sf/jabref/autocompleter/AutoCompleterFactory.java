begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.autocompleter
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|autocompleter
package|;
end_package

begin_comment
comment|/**  * Returns an autocompleter to a given fieldname.  *   * @author kahlert, cordes  */
end_comment

begin_class
DECL|class|AutoCompleterFactory
specifier|public
class|class
name|AutoCompleterFactory
block|{
DECL|method|getFor (String fieldName)
specifier|public
specifier|static
name|AbstractAutoCompleter
name|getFor
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
name|AbstractAutoCompleter
name|result
decl_stmt|;
if|if
condition|(
name|fieldName
operator|.
name|equals
argument_list|(
literal|"author"
argument_list|)
operator|||
name|fieldName
operator|.
name|equals
argument_list|(
literal|"editor"
argument_list|)
condition|)
block|{
name|result
operator|=
operator|new
name|NameFieldAutoCompleter
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|fieldName
operator|.
name|equals
argument_list|(
literal|"crossref"
argument_list|)
condition|)
block|{
name|result
operator|=
operator|new
name|CrossrefAutoCompleter
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|fieldName
operator|.
name|equals
argument_list|(
literal|"journal"
argument_list|)
operator|||
name|fieldName
operator|.
name|equals
argument_list|(
literal|"publisher"
argument_list|)
condition|)
block|{
name|result
operator|=
operator|new
name|EntireFieldAutoCompleter
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|result
operator|=
operator|new
name|DefaultAutoCompleter
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

