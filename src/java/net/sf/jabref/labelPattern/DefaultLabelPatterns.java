begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2011 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.labelPattern
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|labelPattern
package|;
end_package

begin_comment
comment|/*  * Created on 09-Dec-2003  */
end_comment

begin_comment
comment|/**   * How this works:   * The fields used to autogeneratr keys are stored in an ArrayList   * with the first item of the list being a string representation of   * the key pattern and the second item the spacer character.   * The order of the fields in the autogenerated key will match the   * order of the fields in the ArrayList.   *   * Each entry type will have its own corrosponding ArrayList, to handle   * this, we will have a Hashtable where an entry type> ArrayList.   * There will be a default KP, which will parent a userdefined KP.   *   * Upon generatring keys we will itentify the type of entry, fetch   * the proper Array, store the spacer in a temp. String. By reading the   * field in the Array, the proper value will be fetched and stored in a   * StringBuffer, with the spacer between each field.   *   * Btw. we wont allow for keys like [auth][year]_[pages], is this a   * problem?   *   *  * @author Ulrik Stervbo (ulriks AT ruc.dk)  */
end_comment

begin_comment
comment|//public class DefaultLabelPatterns extends ListResourceBundle{
end_comment

begin_class
DECL|class|DefaultLabelPatterns
specifier|public
class|class
name|DefaultLabelPatterns
extends|extends
name|LabelPattern
block|{
DECL|method|DefaultLabelPatterns ()
specifier|public
name|DefaultLabelPatterns
parameter_list|()
block|{
comment|/** 	 * There's no need to set all defaults; only those that should differ 	 * from the global default in LabelPatternUtil.DEFAULT_LABELPATTERN. 	 */
comment|/*addLabelPattern("book",	"[auth]_[year]"); 	addLabelPattern("booklet", "[auth]_[year]"); 	addLabelPattern("conference", "[auth]_[year]"); 	addLabelPattern("inbook", "[auth]_[year]"); 	addLabelPattern("incollection", "[auth]_[year]"); 	addLabelPattern("inproceedings", "[auth]_[year]"); 	addLabelPattern("manual", "[auth]_[year]"); 	addLabelPattern("mastersthesis", "[auth]_[year]"); 	addLabelPattern("misc",	"[auth]_[year]"); 	addLabelPattern("phdthesis", "[auth]_[year]"); 	addLabelPattern("proceedings","[auth]_[year]"); 	addLabelPattern("techreport", "[auth]_[year]"); 	addLabelPattern("unpublished", "[auth]_[year]");*/
block|}
block|}
end_class

end_unit

