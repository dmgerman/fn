begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.imports
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|DefaultHandler
import|;
end_import

begin_comment
comment|/**  * SAX-Handler to parse OAI2-xml files.  *   * @author Ulrich St&auml;rk  * @author Christian Kopf  *   * @version $Revision$ ($Date$)  *  */
end_comment

begin_class
DECL|class|OAI2Handler
specifier|public
class|class
name|OAI2Handler
extends|extends
name|DefaultHandler
block|{
DECL|field|be
name|BibtexEntry
name|be
decl_stmt|;
DECL|field|nextField
name|String
name|nextField
decl_stmt|;
DECL|field|authors
name|String
name|authors
init|=
literal|""
decl_stmt|;
DECL|field|keyname
name|String
name|keyname
decl_stmt|;
DECL|field|forenames
name|String
name|forenames
decl_stmt|;
DECL|field|key
name|String
name|key
init|=
literal|""
decl_stmt|;
DECL|field|year
name|String
name|year
init|=
literal|""
decl_stmt|;
DECL|field|assigned
name|boolean
name|assigned
init|=
literal|false
decl_stmt|;
DECL|method|OAI2Handler (BibtexEntry be)
specifier|public
name|OAI2Handler
parameter_list|(
name|BibtexEntry
name|be
parameter_list|)
block|{
name|this
operator|.
name|be
operator|=
name|be
expr_stmt|;
block|}
DECL|method|endDocument ()
specifier|public
name|void
name|endDocument
parameter_list|()
throws|throws
name|SAXException
block|{
name|be
operator|.
name|setField
argument_list|(
literal|"author"
argument_list|,
name|authors
argument_list|)
expr_stmt|;
if|if
condition|(
name|year
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
name|key
operator|+=
name|year
operator|.
name|substring
argument_list|(
name|year
operator|.
name|length
argument_list|()
operator|-
literal|2
argument_list|,
name|year
operator|.
name|length
argument_list|()
argument_list|)
expr_stmt|;
name|be
operator|.
name|setField
argument_list|(
name|BibtexFields
operator|.
name|KEY_FIELD
argument_list|,
name|key
argument_list|)
expr_stmt|;
block|}
DECL|method|startElement (String uri, String localName, String qName, Attributes attributes)
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"id"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"id"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"keyname"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"keyname"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"author"
argument_list|)
condition|)
block|{
name|keyname
operator|=
literal|""
expr_stmt|;
name|forenames
operator|=
literal|""
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"forenames"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"forenames"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"journal-ref"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"journal-ref"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"datestamp"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"datestamp"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"title"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"title"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"abstract"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"abstract"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"comments"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"comments"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"report-no"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"reportno"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"error"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"error"
expr_stmt|;
name|assigned
operator|=
literal|true
expr_stmt|;
block|}
block|}
DECL|method|endElement (String uri, String localName, String qName)
specifier|public
name|void
name|endElement
parameter_list|(
name|String
name|uri
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"author"
argument_list|)
condition|)
block|{
name|String
name|temp
init|=
name|forenames
operator|+
literal|" "
operator|+
name|keyname
decl_stmt|;
if|if
condition|(
operator|!
name|authors
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
name|authors
operator|+=
literal|" and "
expr_stmt|;
name|authors
operator|+=
name|temp
expr_stmt|;
block|}
block|}
DECL|method|characters (char[] ch, int start, int length)
specifier|public
name|void
name|characters
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
throws|throws
name|SAXException
block|{
name|String
name|content
init|=
operator|new
name|String
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
name|assigned
condition|)
block|{
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"error"
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
name|content
argument_list|)
throw|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"id"
argument_list|)
condition|)
block|{
name|be
operator|.
name|setField
argument_list|(
literal|"eprint"
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"keyname"
argument_list|)
condition|)
block|{
name|keyname
operator|=
name|content
expr_stmt|;
name|key
operator|+=
name|content
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"forenames"
argument_list|)
condition|)
block|{
name|forenames
operator|=
name|content
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"journal-ref"
argument_list|)
condition|)
block|{
name|String
name|journal
init|=
name|content
operator|.
name|replaceFirst
argument_list|(
literal|"[0-9].*"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|be
operator|.
name|setField
argument_list|(
literal|"journal"
argument_list|,
name|journal
argument_list|)
expr_stmt|;
name|String
name|volume
init|=
name|content
operator|.
name|replaceFirst
argument_list|(
name|journal
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|volume
operator|=
name|volume
operator|.
name|replaceFirst
argument_list|(
literal|" .*"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|be
operator|.
name|setField
argument_list|(
literal|"volume"
argument_list|,
name|volume
argument_list|)
expr_stmt|;
name|year
operator|=
name|content
operator|.
name|replaceFirst
argument_list|(
literal|".*?\\("
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|year
operator|=
name|year
operator|.
name|replaceFirst
argument_list|(
literal|"\\).*"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|be
operator|.
name|setField
argument_list|(
literal|"year"
argument_list|,
name|year
argument_list|)
expr_stmt|;
name|String
name|pages
init|=
name|content
operator|.
name|replaceFirst
argument_list|(
name|journal
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|pages
operator|=
name|pages
operator|.
name|replaceFirst
argument_list|(
name|volume
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|pages
operator|=
name|pages
operator|.
name|replaceFirst
argument_list|(
literal|"\\("
operator|+
name|year
operator|+
literal|"\\)"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|pages
operator|=
name|pages
operator|.
name|replaceAll
argument_list|(
literal|" "
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|be
operator|.
name|setField
argument_list|(
literal|"pages"
argument_list|,
name|pages
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"datestamp"
argument_list|)
condition|)
block|{
if|if
condition|(
name|year
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
name|year
operator|=
name|content
operator|.
name|replaceFirst
argument_list|(
literal|"-.*"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|be
operator|.
name|setField
argument_list|(
literal|"year"
argument_list|,
name|year
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"title"
argument_list|)
condition|)
block|{
name|be
operator|.
name|setField
argument_list|(
literal|"title"
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"abstract"
argument_list|)
condition|)
block|{
name|be
operator|.
name|setField
argument_list|(
literal|"abstract"
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"comments"
argument_list|)
condition|)
block|{
name|be
operator|.
name|setField
argument_list|(
literal|"comments"
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"reportno"
argument_list|)
condition|)
block|{
name|be
operator|.
name|setField
argument_list|(
literal|"reportno"
argument_list|,
name|content
argument_list|)
expr_stmt|;
block|}
name|assigned
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

