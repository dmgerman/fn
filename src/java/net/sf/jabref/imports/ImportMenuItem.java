begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.imports
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|ImportInspectionDialog
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
DECL|class|ImportMenuItem
specifier|public
class|class
name|ImportMenuItem
extends|extends
name|JMenuItem
implements|implements
name|ActionListener
implements|,
name|ImportInspectionDialog
operator|.
name|CallBack
block|{
DECL|field|importer
name|ImportFormat
name|importer
decl_stmt|;
DECL|field|frame
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|openInNew
name|boolean
name|openInNew
decl_stmt|;
DECL|method|ImportMenuItem (JabRefFrame frame, ImportFormat importer, boolean openInNew)
specifier|public
name|ImportMenuItem
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|,
name|ImportFormat
name|importer
parameter_list|,
name|boolean
name|openInNew
parameter_list|)
block|{
name|super
argument_list|(
name|importer
operator|.
name|getFormatName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|this
operator|.
name|importer
operator|=
name|importer
expr_stmt|;
name|this
operator|.
name|openInNew
operator|=
name|openInNew
expr_stmt|;
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|MyWorker
name|worker
init|=
operator|new
name|MyWorker
argument_list|()
decl_stmt|;
name|worker
operator|.
name|init
argument_list|()
expr_stmt|;
name|worker
operator|.
name|getWorker
argument_list|()
operator|.
name|run
argument_list|()
expr_stmt|;
name|worker
operator|.
name|getCallBack
argument_list|()
operator|.
name|update
argument_list|()
expr_stmt|;
block|}
DECL|class|MyWorker
class|class
name|MyWorker
extends|extends
name|AbstractWorker
block|{
DECL|field|filename
DECL|field|formatName
name|String
name|filename
init|=
literal|null
decl_stmt|,
name|formatName
init|=
literal|null
decl_stmt|;
DECL|field|entries
name|java
operator|.
name|util
operator|.
name|List
name|entries
init|=
literal|null
decl_stmt|;
DECL|field|fileOk
name|boolean
name|fileOk
init|=
literal|false
decl_stmt|;
DECL|method|init ()
specifier|public
name|void
name|init
parameter_list|()
block|{
name|filename
operator|=
name|frame
operator|.
name|getNewFile
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|filename
operator|!=
literal|null
operator|)
operator|&&
operator|!
operator|(
operator|new
name|File
argument_list|(
name|filename
argument_list|)
operator|)
operator|.
name|exists
argument_list|()
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|frame
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"File not found"
argument_list|)
operator|+
literal|": '"
operator|+
name|filename
operator|+
literal|"'"
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Import failed"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|filename
operator|!=
literal|null
condition|)
block|{
name|frame
operator|.
name|block
argument_list|()
expr_stmt|;
name|frame
operator|.
name|output
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Importing file"
argument_list|)
operator|+
literal|": '"
operator|+
name|filename
operator|+
literal|"'"
argument_list|)
expr_stmt|;
name|fileOk
operator|=
literal|true
expr_stmt|;
block|}
block|}
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
if|if
condition|(
operator|!
name|fileOk
condition|)
return|return;
try|try
block|{
name|entries
operator|=
name|Globals
operator|.
name|importFormatReader
operator|.
name|importFromFile
argument_list|(
name|importer
argument_list|,
name|filename
argument_list|)
expr_stmt|;
if|if
condition|(
name|entries
operator|!=
literal|null
condition|)
name|ImportFormatReader
operator|.
name|purgeEmptyEntries
argument_list|(
name|entries
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|update ()
specifier|public
name|void
name|update
parameter_list|()
block|{
if|if
condition|(
operator|!
name|fileOk
condition|)
return|return;
if|if
condition|(
name|entries
operator|!=
literal|null
condition|)
block|{
name|BasePanel
name|panel
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|openInNew
condition|)
block|{
name|panel
operator|=
operator|(
name|BasePanel
operator|)
name|frame
operator|.
name|getTabbedPane
argument_list|()
operator|.
name|getSelectedComponent
argument_list|()
expr_stmt|;
block|}
name|String
index|[]
name|fields
init|=
operator|new
name|String
index|[]
block|{
literal|"author"
block|,
literal|"title"
block|,
literal|"year"
block|}
decl_stmt|;
name|ImportInspectionDialog
name|diag
init|=
operator|new
name|ImportInspectionDialog
argument_list|(
name|frame
argument_list|,
name|panel
argument_list|,
name|fields
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Import"
argument_list|)
argument_list|,
name|openInNew
argument_list|)
decl_stmt|;
name|diag
operator|.
name|addEntries
argument_list|(
name|entries
argument_list|)
expr_stmt|;
name|diag
operator|.
name|addCallBack
argument_list|(
name|ImportMenuItem
operator|.
name|this
argument_list|)
expr_stmt|;
name|diag
operator|.
name|entryListComplete
argument_list|()
expr_stmt|;
name|Util
operator|.
name|placeDialog
argument_list|(
name|diag
argument_list|,
name|frame
argument_list|)
expr_stmt|;
name|diag
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|//frame.addBibEntries(entries, filename, openInNew);
block|}
else|else
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|frame
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"No entries found. Please make sure you are "
operator|+
literal|"using the correct import filter."
argument_list|)
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Import failed"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
name|frame
operator|.
name|output
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|frame
operator|.
name|unblock
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|done (int entriesImported)
specifier|public
name|void
name|done
parameter_list|(
name|int
name|entriesImported
parameter_list|)
block|{
name|frame
operator|.
name|output
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Imported entries"
argument_list|)
operator|+
literal|": "
operator|+
name|entriesImported
argument_list|)
expr_stmt|;
block|}
comment|// This method is called by the dialog when the user has cancelled or
comment|// signalled a stop. It is expected that any long-running fetch operations
comment|// will stop after this method is called.
DECL|method|stopFetching ()
specifier|public
name|void
name|stopFetching
parameter_list|()
block|{
comment|// No process to stop.
block|}
block|}
end_class

end_unit

