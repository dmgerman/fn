begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2011 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.imports
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|DefaultHandler
import|;
end_import

begin_comment
comment|/**  * SAXHandler used with CiteSeerEntryFetcher.  */
end_comment

begin_class
DECL|class|CiteSeerEntryFetcherHandler
specifier|public
class|class
name|CiteSeerEntryFetcherHandler
extends|extends
name|DefaultHandler
block|{
DECL|field|entry
name|BibtexEntry
name|entry
init|=
literal|null
decl_stmt|;
DECL|field|nextField
name|String
name|nextField
init|=
literal|null
decl_stmt|;
DECL|field|nextAssign
name|boolean
name|nextAssign
init|=
literal|false
decl_stmt|;
DECL|field|newAuthors
name|String
name|newAuthors
init|=
literal|null
decl_stmt|;
DECL|field|citeseerCitationCount
name|int
name|citeseerCitationCount
init|=
literal|0
decl_stmt|;
DECL|method|CiteSeerEntryFetcherHandler (BibtexEntry be)
specifier|public
name|CiteSeerEntryFetcherHandler
parameter_list|(
name|BibtexEntry
name|be
parameter_list|)
block|{
name|entry
operator|=
name|be
expr_stmt|;
block|}
DECL|method|characters (char[] ch, int start, int length)
specifier|public
name|void
name|characters
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
block|{
if|if
condition|(
name|nextAssign
operator|==
literal|true
condition|)
block|{
name|String
name|target
init|=
operator|new
name|String
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"title"
argument_list|)
condition|)
block|{
name|entry
operator|.
name|setField
argument_list|(
name|nextField
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"year"
argument_list|)
condition|)
block|{
name|entry
operator|.
name|setField
argument_list|(
name|nextField
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|target
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"citeseerurl"
argument_list|)
condition|)
block|{
name|entry
operator|.
name|setField
argument_list|(
name|nextField
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
name|nextAssign
operator|=
literal|false
expr_stmt|;
block|}
block|}
DECL|method|startElement (String name, String localName, String qName, Attributes attrs)
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|attrs
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"oai_citeseer:relation"
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|attrs
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|attrName
init|=
name|attrs
operator|.
name|getQName
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|String
name|attrValue
init|=
name|attrs
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|attrName
operator|.
name|equals
argument_list|(
literal|"type"
argument_list|)
operator|&&
name|attrValue
operator|.
name|equals
argument_list|(
literal|"Is Referenced By"
argument_list|)
condition|)
block|{
name|citeseerCitationCount
operator|++
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"oai_citeseer:author"
argument_list|)
condition|)
block|{
if|if
condition|(
name|newAuthors
operator|==
literal|null
condition|)
block|{
name|newAuthors
operator|=
name|attrs
operator|.
name|getValue
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|newAuthors
operator|=
name|newAuthors
operator|+
literal|" and "
operator|+
name|attrs
operator|.
name|getValue
argument_list|(
literal|"name"
argument_list|)
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"dc:title"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"title"
expr_stmt|;
name|nextAssign
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"dc:date"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"year"
expr_stmt|;
name|nextAssign
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"dc:identifier"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"citeseerurl"
expr_stmt|;
name|nextAssign
operator|=
literal|true
expr_stmt|;
block|}
block|}
DECL|method|endDocument ()
specifier|public
name|void
name|endDocument
parameter_list|()
block|{
if|if
condition|(
name|newAuthors
operator|!=
literal|null
condition|)
block|{
name|entry
operator|.
name|setField
argument_list|(
literal|"author"
argument_list|,
name|newAuthors
argument_list|)
expr_stmt|;
block|}
name|entry
operator|.
name|setField
argument_list|(
literal|"citeseercitationcount"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|citeseerCitationCount
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

