begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Created on Jun 29, 2004  *  * To change the template for this generated file go to  * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments  */
end_comment

begin_package
DECL|package|net.sf.jabref.imports
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|undo
operator|.
name|UndoableFieldChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|AttributeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|HandlerBase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * @author mspiegel  *  * To change the template for this generated type comment go to  * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments  */
end_comment

begin_class
DECL|class|CiteSeerUndoHandler
specifier|public
class|class
name|CiteSeerUndoHandler
extends|extends
name|HandlerBase
block|{
DECL|field|citeseerNamedCompound
name|NamedCompound
name|citeseerNamedCompound
init|=
literal|null
decl_stmt|;
DECL|field|bibEntry
name|BibtexEntry
name|bibEntry
init|=
literal|null
decl_stmt|;
DECL|field|nextField
name|String
name|nextField
init|=
literal|null
decl_stmt|;
DECL|field|nextAssign
name|boolean
name|nextAssign
init|=
literal|false
decl_stmt|;
comment|/** 	 * @param be 	 */
DECL|method|CiteSeerUndoHandler (NamedCompound newCompound, BibtexEntry be)
specifier|public
name|CiteSeerUndoHandler
parameter_list|(
name|NamedCompound
name|newCompound
parameter_list|,
name|BibtexEntry
name|be
parameter_list|)
block|{
name|citeseerNamedCompound
operator|=
name|newCompound
expr_stmt|;
name|bibEntry
operator|=
name|be
expr_stmt|;
block|}
DECL|method|characters (char[] ch, int start, int length)
specifier|public
name|void
name|characters
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
block|{
if|if
condition|(
name|nextAssign
operator|==
literal|true
condition|)
block|{
name|String
name|target
init|=
operator|new
name|String
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"title"
argument_list|)
condition|)
block|{
name|UndoableFieldChange
name|fieldChange
init|=
operator|new
name|UndoableFieldChange
argument_list|(
name|bibEntry
argument_list|,
name|nextField
argument_list|,
name|bibEntry
operator|.
name|getField
argument_list|(
name|nextField
argument_list|)
argument_list|,
name|target
argument_list|)
decl_stmt|;
name|citeseerNamedCompound
operator|.
name|addEdit
argument_list|(
name|fieldChange
argument_list|)
expr_stmt|;
name|bibEntry
operator|.
name|setField
argument_list|(
name|nextField
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"year"
argument_list|)
condition|)
block|{
name|UndoableFieldChange
name|fieldChange
init|=
operator|new
name|UndoableFieldChange
argument_list|(
name|bibEntry
argument_list|,
name|nextField
argument_list|,
name|bibEntry
operator|.
name|getField
argument_list|(
name|nextField
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|target
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|citeseerNamedCompound
operator|.
name|addEdit
argument_list|(
name|fieldChange
argument_list|)
expr_stmt|;
name|bibEntry
operator|.
name|setField
argument_list|(
name|nextField
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|target
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|nextField
operator|.
name|equals
argument_list|(
literal|"url"
argument_list|)
condition|)
block|{
name|UndoableFieldChange
name|fieldChange
init|=
operator|new
name|UndoableFieldChange
argument_list|(
name|bibEntry
argument_list|,
name|nextField
argument_list|,
name|bibEntry
operator|.
name|getField
argument_list|(
name|nextField
argument_list|)
argument_list|,
name|target
argument_list|)
decl_stmt|;
name|citeseerNamedCompound
operator|.
name|addEdit
argument_list|(
name|fieldChange
argument_list|)
expr_stmt|;
name|bibEntry
operator|.
name|setField
argument_list|(
name|nextField
argument_list|,
name|target
argument_list|)
expr_stmt|;
block|}
name|nextAssign
operator|=
literal|false
expr_stmt|;
block|}
block|}
DECL|method|startElement (String name, AttributeList attrs)
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|name
parameter_list|,
name|AttributeList
name|attrs
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"oai_citeseer:author"
argument_list|)
condition|)
block|{
name|addAuthor
argument_list|(
name|attrs
operator|.
name|getValue
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"dc:title"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"title"
expr_stmt|;
name|nextAssign
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"dc:date"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"year"
expr_stmt|;
name|nextAssign
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|name
operator|.
name|equals
argument_list|(
literal|"dc:identifier"
argument_list|)
condition|)
block|{
name|nextField
operator|=
literal|"url"
expr_stmt|;
name|nextAssign
operator|=
literal|true
expr_stmt|;
block|}
block|}
comment|/** 	 * @param string 	 */
DECL|method|addAuthor (String newAuthor)
specifier|private
name|void
name|addAuthor
parameter_list|(
name|String
name|newAuthor
parameter_list|)
block|{
if|if
condition|(
name|bibEntry
operator|.
name|getField
argument_list|(
literal|"author"
argument_list|)
operator|==
literal|null
condition|)
block|{
name|UndoableFieldChange
name|fieldChange
init|=
operator|new
name|UndoableFieldChange
argument_list|(
name|bibEntry
argument_list|,
literal|"author"
argument_list|,
name|bibEntry
operator|.
name|getField
argument_list|(
literal|"author"
argument_list|)
argument_list|,
name|newAuthor
argument_list|)
decl_stmt|;
name|citeseerNamedCompound
operator|.
name|addEdit
argument_list|(
name|fieldChange
argument_list|)
expr_stmt|;
name|bibEntry
operator|.
name|setField
argument_list|(
literal|"author"
argument_list|,
name|newAuthor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|UndoableFieldChange
name|fieldChange
init|=
operator|new
name|UndoableFieldChange
argument_list|(
name|bibEntry
argument_list|,
literal|"author"
argument_list|,
name|bibEntry
operator|.
name|getField
argument_list|(
literal|"author"
argument_list|)
argument_list|,
name|bibEntry
operator|.
name|getField
argument_list|(
literal|"author"
argument_list|)
operator|+
literal|" and "
operator|+
name|newAuthor
argument_list|)
decl_stmt|;
name|citeseerNamedCompound
operator|.
name|addEdit
argument_list|(
name|fieldChange
argument_list|)
expr_stmt|;
name|bibEntry
operator|.
name|setField
argument_list|(
literal|"author"
argument_list|,
name|bibEntry
operator|.
name|getField
argument_list|(
literal|"author"
argument_list|)
operator|+
literal|" and "
operator|+
name|newAuthor
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

