begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.imports
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|DefaultHandler
import|;
end_import

begin_comment
comment|/*  * Created on Jun 13, 2004  *  * To change the template for this generated file go to  * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments  */
end_comment

begin_comment
comment|/**  * @author mspiegel  *  * To change the template for this generated type comment go to  * Window&gt;Preferences&gt;Java&gt;Code Generation&gt;Code and Comments  */
end_comment

begin_class
DECL|class|CiteSeerCitationHandler
specifier|public
class|class
name|CiteSeerCitationHandler
extends|extends
name|DefaultHandler
block|{
DECL|field|correctDirection
specifier|protected
name|boolean
name|correctDirection
decl_stmt|;
DECL|field|getCitation
specifier|protected
name|boolean
name|getCitation
decl_stmt|;
DECL|field|citationList
specifier|protected
name|Hashtable
name|citationList
decl_stmt|;
comment|/** 	 * @param identifierVector 	 */
DECL|method|CiteSeerCitationHandler (Hashtable citationHashTable)
specifier|public
name|CiteSeerCitationHandler
parameter_list|(
name|Hashtable
name|citationHashTable
parameter_list|)
block|{
name|citationList
operator|=
name|citationHashTable
expr_stmt|;
block|}
DECL|method|characters (char[] ch, int start, int length)
specifier|public
name|void
name|characters
parameter_list|(
name|char
index|[]
name|ch
parameter_list|,
name|int
name|start
parameter_list|,
name|int
name|length
parameter_list|)
block|{
if|if
condition|(
name|getCitation
operator|==
literal|true
condition|)
block|{
name|String
name|target
init|=
operator|new
name|String
argument_list|(
name|ch
argument_list|,
name|start
argument_list|,
name|length
argument_list|)
decl_stmt|;
if|if
condition|(
name|citationList
operator|.
name|get
argument_list|(
name|target
argument_list|)
operator|==
literal|null
condition|)
block|{
name|citationList
operator|.
name|put
argument_list|(
name|target
argument_list|,
operator|new
name|Boolean
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|getCitation
operator|=
literal|false
expr_stmt|;
block|}
block|}
DECL|method|startDocument ()
specifier|public
name|void
name|startDocument
parameter_list|()
throws|throws
name|SAXException
block|{
name|correctDirection
operator|=
literal|false
expr_stmt|;
name|getCitation
operator|=
literal|false
expr_stmt|;
block|}
DECL|method|startElement (String name, String localName, String qName, Attributes attrs)
specifier|public
name|void
name|startElement
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|attrs
parameter_list|)
throws|throws
name|SAXException
block|{
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"oai_citeseer:relation"
argument_list|)
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|attrs
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|String
name|attrName
init|=
name|attrs
operator|.
name|getQName
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|String
name|attrValue
init|=
name|attrs
operator|.
name|getValue
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|attrName
operator|.
name|equals
argument_list|(
literal|"type"
argument_list|)
operator|&&
name|attrValue
operator|.
name|equals
argument_list|(
literal|"Is Referenced By"
argument_list|)
condition|)
block|{
name|correctDirection
operator|=
literal|true
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|attrName
operator|.
name|equals
argument_list|(
literal|"type"
argument_list|)
operator|&&
name|attrValue
operator|.
name|equals
argument_list|(
literal|"References"
argument_list|)
condition|)
block|{
name|correctDirection
operator|=
literal|false
expr_stmt|;
block|}
block|}
block|}
elseif|else
if|if
condition|(
name|qName
operator|.
name|equals
argument_list|(
literal|"oai_citeseer:uri"
argument_list|)
operator|&&
name|correctDirection
condition|)
block|{
name|getCitation
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

