begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.imports
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|SAXParserFactory
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntryType
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|GUIGlobals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|ImportInspectionDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|helpers
operator|.
name|DefaultHandler
import|;
end_import

begin_comment
comment|/**  * Fetcher for CiteSeer http://citeseer.ist.psu.edu/  *   */
end_comment

begin_class
DECL|class|CiteSeerEntryFetcher
specifier|public
class|class
name|CiteSeerEntryFetcher
implements|implements
name|EntryFetcher
block|{
DECL|field|OAI_URL
specifier|final
specifier|static
name|String
name|OAI_URL
init|=
literal|"http://cs1.ist.psu.edu/cgi-bin/oai.cgi?verb=GetRecord&metadataPrefix=oai_citeseer&identifier=oai:CiteSeerPSU:"
decl_stmt|;
DECL|field|saxParser
specifier|protected
name|SAXParser
name|saxParser
decl_stmt|;
DECL|field|stop
specifier|protected
name|boolean
name|stop
decl_stmt|;
DECL|method|processQuery (String query, ImportInspectionDialog dialog, JabRefFrame frame)
specifier|public
name|void
name|processQuery
parameter_list|(
name|String
name|query
parameter_list|,
name|ImportInspectionDialog
name|dialog
parameter_list|,
name|JabRefFrame
name|frame
parameter_list|)
block|{
name|stop
operator|=
literal|false
expr_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|String
index|[]
name|ids
init|=
name|query
operator|.
name|trim
argument_list|()
operator|.
name|split
argument_list|(
literal|"[;,\\s]+"
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ids
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|stop
condition|)
break|break;
comment|// Try to import based on the id:
name|String
name|id
init|=
name|ids
index|[
name|i
index|]
decl_stmt|;
comment|// Clean IDs
name|id
operator|=
name|id
operator|.
name|replaceAll
argument_list|(
literal|"(http://citeseer.ist.psu.edu/|\\.html|oai:CiteSeerPSU:)"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
comment|// Can only fetch for numerical IDs
if|if
condition|(
operator|!
name|id
operator|.
name|matches
argument_list|(
literal|"^\\d+$"
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|dialog
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Citeseer only supports numerical ids, '%0' is invalid.\n"
operator|+
literal|"See the help for further information."
argument_list|,
name|id
argument_list|)
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Fetch Citeseer"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|INFORMATION_MESSAGE
argument_list|)
expr_stmt|;
continue|continue;
block|}
comment|// Create an empty entry
name|BibtexEntry
name|entry
init|=
operator|new
name|BibtexEntry
argument_list|(
name|Util
operator|.
name|createNeutralId
argument_list|()
argument_list|,
name|BibtexEntryType
operator|.
name|getType
argument_list|(
literal|"article"
argument_list|)
argument_list|)
decl_stmt|;
name|entry
operator|.
name|setField
argument_list|(
literal|"citeseerurl"
argument_list|,
name|id
argument_list|)
expr_stmt|;
try|try
block|{
name|URL
name|citeseerUrl
init|=
operator|new
name|URL
argument_list|(
name|OAI_URL
operator|+
name|id
argument_list|)
decl_stmt|;
name|HttpURLConnection
name|citeseerConnection
init|=
operator|(
name|HttpURLConnection
operator|)
name|citeseerUrl
operator|.
name|openConnection
argument_list|()
decl_stmt|;
name|InputStream
name|inputStream
init|=
name|citeseerConnection
operator|.
name|getInputStream
argument_list|()
decl_stmt|;
name|DefaultHandler
name|handlerBase
init|=
operator|new
name|CiteSeerEntryFetcherHandler
argument_list|(
name|entry
argument_list|)
decl_stmt|;
if|if
condition|(
name|saxParser
operator|==
literal|null
condition|)
name|saxParser
operator|=
name|SAXParserFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newSAXParser
argument_list|()
expr_stmt|;
name|saxParser
operator|.
name|parse
argument_list|(
name|inputStream
argument_list|,
name|handlerBase
argument_list|)
expr_stmt|;
comment|/* Correct line breaks and spacing */
for|for
control|(
name|String
name|name
range|:
name|entry
operator|.
name|getAllFields
argument_list|()
control|)
block|{
name|entry
operator|.
name|setField
argument_list|(
name|name
argument_list|,
name|OAI2Fetcher
operator|.
name|correctLineBreaks
argument_list|(
name|entry
operator|.
name|getField
argument_list|(
name|name
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dialog
operator|.
name|addEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|setProgress
argument_list|(
name|i
operator|+
literal|1
argument_list|,
name|ids
operator|.
name|length
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|dialog
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Error fetching from Citeseer:\n"
operator|+
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|)
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Fetch Citeseer"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
name|dialog
operator|.
name|entryListComplete
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getHelpPage ()
specifier|public
name|String
name|getHelpPage
parameter_list|()
block|{
return|return
name|GUIGlobals
operator|.
name|citeSeerHelp
return|;
block|}
DECL|method|getIcon ()
specifier|public
name|URL
name|getIcon
parameter_list|()
block|{
return|return
name|GUIGlobals
operator|.
name|getIconUrl
argument_list|(
literal|"citeseer"
argument_list|)
return|;
block|}
DECL|method|getKeyName ()
specifier|public
name|String
name|getKeyName
parameter_list|()
block|{
return|return
literal|"Fetch CiteSeer"
return|;
block|}
DECL|method|getOptionsPanel ()
specifier|public
name|JPanel
name|getOptionsPanel
parameter_list|()
block|{
comment|// No Options
return|return
literal|null
return|;
block|}
DECL|method|getTitle ()
specifier|public
name|String
name|getTitle
parameter_list|()
block|{
return|return
literal|"Fetch CiteSeer by ID"
return|;
block|}
DECL|method|cancelled ()
specifier|public
name|void
name|cancelled
parameter_list|()
block|{      }
DECL|method|done (int entriesImported)
specifier|public
name|void
name|done
parameter_list|(
name|int
name|entriesImported
parameter_list|)
block|{      }
DECL|method|stopFetching ()
specifier|public
name|void
name|stopFetching
parameter_list|()
block|{
name|stop
operator|=
literal|true
expr_stmt|;
block|}
block|}
end_class

end_unit

