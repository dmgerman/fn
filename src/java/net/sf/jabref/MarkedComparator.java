begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_comment
comment|/**  * Created by IntelliJ IDEA.  * User: alver  * Date: Sep 1, 2005  * Time: 11:35:02 PM  * To change this template use File | Settings | File Templates.  */
end_comment

begin_class
DECL|class|MarkedComparator
specifier|public
class|class
name|MarkedComparator
implements|implements
name|Comparator
argument_list|<
name|BibtexEntry
argument_list|>
block|{
DECL|field|next
name|Comparator
argument_list|<
name|BibtexEntry
argument_list|>
name|next
decl_stmt|;
DECL|method|MarkedComparator (Comparator<BibtexEntry> next)
specifier|public
name|MarkedComparator
parameter_list|(
name|Comparator
argument_list|<
name|BibtexEntry
argument_list|>
name|next
parameter_list|)
block|{
name|this
operator|.
name|next
operator|=
name|next
expr_stmt|;
block|}
DECL|method|compare (BibtexEntry e1, BibtexEntry e2)
specifier|public
name|int
name|compare
parameter_list|(
name|BibtexEntry
name|e1
parameter_list|,
name|BibtexEntry
name|e2
parameter_list|)
block|{
if|if
condition|(
name|e1
operator|==
name|e2
condition|)
return|return
literal|0
return|;
name|boolean
name|mrk1
init|=
name|Util
operator|.
name|isMarked
argument_list|(
name|e1
argument_list|)
decl_stmt|,
name|mrk2
init|=
name|Util
operator|.
name|isMarked
argument_list|(
name|e2
argument_list|)
decl_stmt|;
if|if
condition|(
name|mrk1
operator|==
name|mrk2
condition|)
return|return
operator|(
name|next
operator|!=
literal|null
condition|?
name|next
operator|.
name|compare
argument_list|(
name|e1
argument_list|,
name|e2
argument_list|)
else|:
name|idCompare
argument_list|(
name|e1
argument_list|,
name|e2
argument_list|)
operator|)
return|;
elseif|else
if|if
condition|(
name|mrk2
condition|)
return|return
literal|1
return|;
else|else
return|return
operator|-
literal|1
return|;
block|}
DECL|method|idCompare (BibtexEntry b1, BibtexEntry b2)
specifier|private
name|int
name|idCompare
parameter_list|(
name|BibtexEntry
name|b1
parameter_list|,
name|BibtexEntry
name|b2
parameter_list|)
block|{
return|return
operator|(
call|(
name|String
call|)
argument_list|(
name|b1
operator|.
name|getId
argument_list|()
argument_list|)
operator|)
operator|.
name|compareTo
argument_list|(
call|(
name|String
call|)
argument_list|(
name|b2
operator|.
name|getId
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

