begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.export.layout.format
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|export
operator|.
name|layout
operator|.
name|format
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|export
operator|.
name|layout
operator|.
name|LayoutFormatter
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_comment
comment|/**  * Will strip any prefixes from the DOI field, in order to output only the DOI number  *   * @author mark-schenk  *  */
end_comment

begin_class
DECL|class|DOIStrip
specifier|public
class|class
name|DOIStrip
implements|implements
name|LayoutFormatter
block|{
DECL|method|format (String fieldText)
specifier|public
name|String
name|format
parameter_list|(
name|String
name|fieldText
parameter_list|)
block|{
if|if
condition|(
name|fieldText
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|fieldText
operator|=
name|fieldText
operator|.
name|trim
argument_list|()
expr_stmt|;
if|if
condition|(
name|fieldText
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return
name|fieldText
return|;
block|}
comment|// If starts with '10.' it's fine
if|if
condition|(
name|fieldText
operator|.
name|startsWith
argument_list|(
literal|"10."
argument_list|)
condition|)
block|{
return|return
name|fieldText
return|;
block|}
comment|// Remove possible 'doi:'
if|if
condition|(
name|fieldText
operator|.
name|matches
argument_list|(
literal|"^doi:/*.*"
argument_list|)
condition|)
block|{
name|fieldText
operator|=
name|fieldText
operator|.
name|replaceFirst
argument_list|(
literal|"^doi:/*"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|fieldText
return|;
block|}
comment|// Remove possible 'http://dx.doi.org/' prefix
if|if
condition|(
name|fieldText
operator|.
name|startsWith
argument_list|(
name|Globals
operator|.
name|DOI_LOOKUP_PREFIX
argument_list|)
condition|)
block|{
name|fieldText
operator|=
name|fieldText
operator|.
name|replaceFirst
argument_list|(
name|Globals
operator|.
name|DOI_LOOKUP_PREFIX
argument_list|,
literal|""
argument_list|)
expr_stmt|;
return|return
name|fieldText
return|;
block|}
return|return
name|fieldText
return|;
block|}
block|}
end_class

end_unit

