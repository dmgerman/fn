begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/* Copyright (C) 2003 Morten O. Alver, Nizar N. Batada  All programs in this directory and subdirectories are published under the GNU General Public License as described below.  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA  Further information about the GNU GPL is available at: http://www.gnu.org/copyleft/gpl.ja.html  */
end_comment

begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_class
DECL|class|FieldTextField
specifier|public
class|class
name|FieldTextField
extends|extends
name|JTextField
implements|implements
name|FieldEditor
block|{
DECL|field|fieldName
specifier|protected
name|String
name|fieldName
decl_stmt|;
DECL|field|label
specifier|protected
name|JLabel
name|label
decl_stmt|;
DECL|method|FieldTextField (String fieldName_, String content)
specifier|public
name|FieldTextField
parameter_list|(
name|String
name|fieldName_
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|super
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|fieldName
operator|=
name|fieldName_
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
name|Util
operator|.
name|nCase
argument_list|(
name|fieldName
argument_list|)
argument_list|,
name|JLabel
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|label
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEtchedBorder
argument_list|()
argument_list|)
expr_stmt|;
name|setBackground
argument_list|(
name|GUIGlobals
operator|.
name|validFieldBackground
argument_list|)
expr_stmt|;
name|label
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEtchedBorder
argument_list|(
name|GUIGlobals
operator|.
name|lightGray
argument_list|,
name|Color
operator|.
name|gray
argument_list|)
argument_list|)
expr_stmt|;
name|label
operator|.
name|setOpaque
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|label
operator|.
name|setBackground
argument_list|(
name|GUIGlobals
operator|.
name|lightGray
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|content
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|content
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|)
condition|)
name|label
operator|.
name|setForeground
argument_list|(
name|GUIGlobals
operator|.
name|validFieldColor
argument_list|)
expr_stmt|;
comment|// At construction time, the field can never have an invalid value.
else|else
name|label
operator|.
name|setForeground
argument_list|(
name|GUIGlobals
operator|.
name|nullFieldColor
argument_list|)
expr_stmt|;
block|}
DECL|method|getFieldName ()
specifier|public
name|String
name|getFieldName
parameter_list|()
block|{
return|return
name|fieldName
return|;
block|}
DECL|method|getLabel ()
specifier|public
name|JLabel
name|getLabel
parameter_list|()
block|{
return|return
name|label
return|;
block|}
DECL|method|setLabelColor (Color c)
specifier|public
name|void
name|setLabelColor
parameter_list|(
name|Color
name|c
parameter_list|)
block|{
name|label
operator|.
name|setForeground
argument_list|(
name|c
argument_list|)
expr_stmt|;
block|}
DECL|method|getPane ()
specifier|public
name|JComponent
name|getPane
parameter_list|()
block|{
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

