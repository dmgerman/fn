begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * This class represents a list of comparators. The first Comparator takes precedence,  * and each time a Comparator returns 0, the next one is attempted. If all comparators  * return 0 the final result will be 0.  */
end_comment

begin_class
DECL|class|FieldComparatorStack
specifier|public
class|class
name|FieldComparatorStack
implements|implements
name|Comparator
block|{
DECL|field|comparators
name|List
name|comparators
decl_stmt|;
DECL|method|FieldComparatorStack (List comparators)
specifier|public
name|FieldComparatorStack
parameter_list|(
name|List
name|comparators
parameter_list|)
block|{
name|this
operator|.
name|comparators
operator|=
name|comparators
expr_stmt|;
block|}
DECL|method|compare (Object o1, Object o2)
specifier|public
name|int
name|compare
parameter_list|(
name|Object
name|o1
parameter_list|,
name|Object
name|o2
parameter_list|)
block|{
for|for
control|(
name|Iterator
name|i
init|=
name|comparators
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|int
name|res
init|=
operator|(
operator|(
name|Comparator
operator|)
name|i
operator|.
name|next
argument_list|()
operator|)
operator|.
name|compare
argument_list|(
name|o1
argument_list|,
name|o2
argument_list|)
decl_stmt|;
if|if
condition|(
name|res
operator|!=
literal|0
condition|)
return|return
name|res
return|;
block|}
return|return
literal|0
return|;
block|}
block|}
end_class

end_unit

