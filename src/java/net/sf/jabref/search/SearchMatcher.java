begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.search
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|search
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|SearchRuleSet
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Hashtable
import|;
end_import

begin_import
import|import
name|ca
operator|.
name|odell
operator|.
name|glazedlists
operator|.
name|matchers
operator|.
name|Matcher
import|;
end_import

begin_comment
comment|/**  * Matcher for filtering the table according to a SearchRuleSet and a search term.   */
end_comment

begin_class
DECL|class|SearchMatcher
specifier|public
class|class
name|SearchMatcher
implements|implements
name|Matcher
block|{
DECL|field|field
specifier|private
name|String
name|field
init|=
name|Globals
operator|.
name|SEARCH
decl_stmt|;
DECL|field|ruleSet
specifier|private
name|SearchRuleSet
name|ruleSet
decl_stmt|;
DECL|field|searchOptions
specifier|private
name|Hashtable
name|searchOptions
decl_stmt|;
DECL|method|SearchMatcher (SearchRuleSet ruleSet, Hashtable searchOptions)
specifier|public
name|SearchMatcher
parameter_list|(
name|SearchRuleSet
name|ruleSet
parameter_list|,
name|Hashtable
name|searchOptions
parameter_list|)
block|{
name|this
operator|.
name|ruleSet
operator|=
name|ruleSet
expr_stmt|;
name|this
operator|.
name|searchOptions
operator|=
name|searchOptions
expr_stmt|;
block|}
DECL|method|matches (Object object)
specifier|public
name|boolean
name|matches
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|BibtexEntry
name|entry
init|=
operator|(
name|BibtexEntry
operator|)
name|object
decl_stmt|;
name|int
name|result
init|=
name|ruleSet
operator|.
name|applyRule
argument_list|(
name|searchOptions
argument_list|,
name|entry
argument_list|)
decl_stmt|;
return|return
name|result
operator|>
literal|0
return|;
block|}
block|}
end_class

end_unit

