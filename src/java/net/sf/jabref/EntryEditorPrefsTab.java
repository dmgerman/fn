begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2011 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|autocompleter
operator|.
name|AbstractAutoCompleter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_class
DECL|class|EntryEditorPrefsTab
specifier|public
class|class
name|EntryEditorPrefsTab
extends|extends
name|JPanel
implements|implements
name|PrefsTab
block|{
DECL|field|autoOpenForm
DECL|field|showSource
specifier|private
name|JCheckBox
name|autoOpenForm
decl_stmt|,
name|showSource
decl_stmt|,
DECL|field|defSource
DECL|field|editSource
DECL|field|disableOnMultiple
DECL|field|autoComplete
name|defSource
decl_stmt|,
name|editSource
decl_stmt|,
name|disableOnMultiple
decl_stmt|,
name|autoComplete
decl_stmt|;
DECL|field|autoCompBoth
DECL|field|autoCompFF
DECL|field|autoCompLF
specifier|private
name|JRadioButton
name|autoCompBoth
decl_stmt|,
name|autoCompFF
decl_stmt|,
name|autoCompLF
decl_stmt|,
DECL|field|autoCompFirstNameMode_Full
DECL|field|autoCompFirstNameMode_Abbr
DECL|field|autoCompFirstNameMode_Both
name|autoCompFirstNameMode_Full
decl_stmt|,
name|autoCompFirstNameMode_Abbr
decl_stmt|,
name|autoCompFirstNameMode_Both
decl_stmt|;
DECL|field|oldAutoCompFF
DECL|field|oldAutoCompLF
name|boolean
name|oldAutoCompFF
decl_stmt|,
name|oldAutoCompLF
decl_stmt|,
DECL|field|oldAutoCompFModeAbbr
DECL|field|oldAutoCompFModeFull
name|oldAutoCompFModeAbbr
decl_stmt|,
name|oldAutoCompFModeFull
decl_stmt|;
DECL|field|shortestToComplete
specifier|private
name|JSpinner
name|shortestToComplete
decl_stmt|;
DECL|field|autoCompFields
specifier|private
name|JTextField
name|autoCompFields
decl_stmt|;
DECL|field|_prefs
name|JabRefPreferences
name|_prefs
decl_stmt|;
DECL|field|_frame
name|JabRefFrame
name|_frame
decl_stmt|;
DECL|method|setAutoCompleteElementsEnabled (boolean enabled)
specifier|private
name|void
name|setAutoCompleteElementsEnabled
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
name|autoCompFields
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|autoCompLF
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|autoCompFF
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|autoCompBoth
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|autoCompFirstNameMode_Abbr
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|autoCompFirstNameMode_Full
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|autoCompFirstNameMode_Both
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
name|shortestToComplete
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
block|}
DECL|method|EntryEditorPrefsTab (JabRefFrame frame, JabRefPreferences prefs)
specifier|public
name|EntryEditorPrefsTab
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|,
name|JabRefPreferences
name|prefs
parameter_list|)
block|{
name|_prefs
operator|=
name|prefs
expr_stmt|;
name|_frame
operator|=
name|frame
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|autoOpenForm
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Open editor when a new entry is created"
argument_list|)
argument_list|)
expr_stmt|;
name|defSource
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show BibTeX source by default"
argument_list|)
argument_list|)
expr_stmt|;
name|showSource
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show BibTeX source panel"
argument_list|)
argument_list|)
expr_stmt|;
name|editSource
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Enable source editing"
argument_list|)
argument_list|)
expr_stmt|;
name|disableOnMultiple
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Disable entry editor when multiple entries are selected"
argument_list|)
argument_list|)
expr_stmt|;
name|autoComplete
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Enable word/name autocompletion"
argument_list|)
argument_list|)
expr_stmt|;
name|shortestToComplete
operator|=
operator|new
name|JSpinner
argument_list|(
operator|new
name|SpinnerNumberModel
argument_list|(
name|prefs
operator|.
name|getInt
argument_list|(
name|JabRefPreferences
operator|.
name|SHORTEST_TO_COMPLETE
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|// allowed name formats
name|autoCompFF
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Autocomplete names in 'Firstname Lastname' format only"
argument_list|)
argument_list|)
expr_stmt|;
name|autoCompLF
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Autocomplete names in 'Lastname, Firstname' format only"
argument_list|)
argument_list|)
expr_stmt|;
name|autoCompBoth
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Autocomplete names in both formats"
argument_list|)
argument_list|)
expr_stmt|;
name|ButtonGroup
name|bg
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|autoCompLF
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|autoCompFF
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|autoCompBoth
argument_list|)
expr_stmt|;
comment|// treatment of first name
name|autoCompFirstNameMode_Full
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Use full firstname whenever possible"
argument_list|)
argument_list|)
expr_stmt|;
name|autoCompFirstNameMode_Abbr
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Use abbreviated firstname whenever possible"
argument_list|)
argument_list|)
expr_stmt|;
name|autoCompFirstNameMode_Both
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Use abbreviated and full firstname"
argument_list|)
argument_list|)
expr_stmt|;
name|ButtonGroup
name|bg_firstNameMode
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|bg_firstNameMode
operator|.
name|add
argument_list|(
name|autoCompFirstNameMode_Full
argument_list|)
expr_stmt|;
name|bg_firstNameMode
operator|.
name|add
argument_list|(
name|autoCompFirstNameMode_Abbr
argument_list|)
expr_stmt|;
name|bg_firstNameMode
operator|.
name|add
argument_list|(
name|autoCompFirstNameMode_Both
argument_list|)
expr_stmt|;
name|autoCompFields
operator|=
operator|new
name|JTextField
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|Insets
name|marg
init|=
operator|new
name|Insets
argument_list|(
literal|0
argument_list|,
literal|12
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|editSource
operator|.
name|setMargin
argument_list|(
name|marg
argument_list|)
expr_stmt|;
name|defSource
operator|.
name|setMargin
argument_list|(
name|marg
argument_list|)
expr_stmt|;
comment|// We need a listener on showSource to enable and disable the source panel-related choices:
name|showSource
operator|.
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|defSource
operator|.
name|setEnabled
argument_list|(
name|showSource
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|editSource
operator|.
name|setEnabled
argument_list|(
name|showSource
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// We need a listener on autoComplete to enable and disable the
comment|// autoCompFields text field:
name|autoComplete
operator|.
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|setAutoCompleteElementsEnabled
argument_list|(
name|autoComplete
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"8dlu, left:pref, 8dlu, fill:150dlu, 4dlu, fill:pref"
argument_list|,
comment|// 4dlu, left:pref, 4dlu",
comment|// rows  1 to 10
literal|"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, "
operator|+
comment|// rows 11 to 20
literal|"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, pref, pref, pref, "
operator|+
comment|// rows 21 to 26
literal|"6dlu, pref, pref, pref, pref"
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Editor options"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoOpenForm
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|disableOnMultiple
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|showSource
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|defSource
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Autocompletion options"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoComplete
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|13
argument_list|)
argument_list|)
expr_stmt|;
name|DefaultFormBuilder
name|builder3
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"left:pref, 4dlu, fill:150dlu"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Use autocompletion for the following fields"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|autoCompFields
argument_list|)
expr_stmt|;
name|JLabel
name|label2
init|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Autocomplete after following number of characters"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|label2
argument_list|)
expr_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|shortestToComplete
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|builder3
operator|.
name|getPanel
argument_list|()
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|15
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Name format used for autocompletion"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|17
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoCompFF
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoCompLF
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|19
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoCompBoth
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|20
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Treatment of first names"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|22
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoCompFirstNameMode_Abbr
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoCompFirstNameMode_Full
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoCompFirstNameMode_Both
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|pan
init|=
name|builder
operator|.
name|getPanel
argument_list|()
decl_stmt|;
name|pan
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|pan
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|autoOpenForm
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"autoOpenForm"
argument_list|)
argument_list|)
expr_stmt|;
name|defSource
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"defaultShowSource"
argument_list|)
argument_list|)
expr_stmt|;
name|showSource
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"showSource"
argument_list|)
argument_list|)
expr_stmt|;
name|editSource
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"enableSourceEditing"
argument_list|)
argument_list|)
expr_stmt|;
name|disableOnMultiple
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"disableOnMultipleSelection"
argument_list|)
argument_list|)
expr_stmt|;
name|autoComplete
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"autoComplete"
argument_list|)
argument_list|)
expr_stmt|;
name|autoCompFields
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"autoCompleteFields"
argument_list|)
argument_list|)
expr_stmt|;
name|shortestToComplete
operator|.
name|setValue
argument_list|(
name|_prefs
operator|.
name|getInt
argument_list|(
name|JabRefPreferences
operator|.
name|SHORTEST_TO_COMPLETE
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"autoCompFF"
argument_list|)
condition|)
name|autoCompFF
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"autoCompLF"
argument_list|)
condition|)
name|autoCompLF
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|autoCompBoth
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|oldAutoCompFF
operator|=
name|autoCompFF
operator|.
name|isSelected
argument_list|()
expr_stmt|;
name|oldAutoCompLF
operator|=
name|autoCompLF
operator|.
name|isSelected
argument_list|()
expr_stmt|;
if|if
condition|(
name|_prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE
argument_list|)
operator|.
name|equals
argument_list|(
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_ABBR
argument_list|)
condition|)
name|autoCompFirstNameMode_Abbr
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|_prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE
argument_list|)
operator|.
name|equals
argument_list|(
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_FULL
argument_list|)
condition|)
name|autoCompFirstNameMode_Full
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|autoCompFirstNameMode_Both
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// one field less than the option is enough. If one filed changes, another one also changes.
name|oldAutoCompFModeAbbr
operator|=
name|autoCompFirstNameMode_Abbr
operator|.
name|isSelected
argument_list|()
expr_stmt|;
name|oldAutoCompFModeFull
operator|=
name|autoCompFirstNameMode_Full
operator|.
name|isSelected
argument_list|()
expr_stmt|;
comment|// Two choices only make sense when the source panel is visible:
name|defSource
operator|.
name|setEnabled
argument_list|(
name|showSource
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|editSource
operator|.
name|setEnabled
argument_list|(
name|showSource
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
comment|// Autocomplete fields is only enabled when autocompletion is:
name|setAutoCompleteElementsEnabled
argument_list|(
name|autoComplete
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoOpenForm"
argument_list|,
name|autoOpenForm
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"defaultShowSource"
argument_list|,
name|defSource
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"enableSourceEditing"
argument_list|,
name|editSource
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"disableOnMultipleSelection"
argument_list|,
name|disableOnMultiple
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
comment|// We want to know if the following settings have been modified:
name|boolean
name|oldAutoComplete
init|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"autoComplete"
argument_list|)
decl_stmt|;
name|boolean
name|oldShowSource
init|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"showSource"
argument_list|)
decl_stmt|;
name|String
name|oldAutoCompFields
init|=
name|_prefs
operator|.
name|get
argument_list|(
literal|"autoCompleteFields"
argument_list|)
decl_stmt|;
name|_prefs
operator|.
name|putInt
argument_list|(
name|JabRefPreferences
operator|.
name|SHORTEST_TO_COMPLETE
argument_list|,
operator|(
name|Integer
operator|)
name|shortestToComplete
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoComplete"
argument_list|,
name|autoComplete
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"autoCompleteFields"
argument_list|,
name|autoCompFields
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"showSource"
argument_list|,
name|showSource
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|autoCompBoth
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoCompFF"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoCompLF"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|autoCompFF
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoCompFF"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoCompLF"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoCompFF"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoCompLF"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|autoCompFirstNameMode_Abbr
operator|.
name|isSelected
argument_list|()
condition|)
name|_prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE
argument_list|,
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_ABBR
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|autoCompFirstNameMode_Full
operator|.
name|isSelected
argument_list|()
condition|)
name|_prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE
argument_list|,
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE_ONLY_FULL
argument_list|)
expr_stmt|;
else|else
name|_prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE
argument_list|,
name|JabRefPreferences
operator|.
name|AUTOCOMPLETE_FIRSTNAME_MODE_BOTH
argument_list|)
expr_stmt|;
comment|// We need to remove all entry editors from cache if the source panel setting
comment|// or the autocompletion settings have been changed:
if|if
condition|(
operator|(
name|oldShowSource
operator|!=
name|showSource
operator|.
name|isSelected
argument_list|()
operator|)
operator|||
operator|(
name|oldAutoComplete
operator|!=
name|autoComplete
operator|.
name|isSelected
argument_list|()
operator|)
operator|||
operator|(
operator|!
name|oldAutoCompFields
operator|.
name|equals
argument_list|(
name|autoCompFields
operator|.
name|getText
argument_list|()
argument_list|)
operator|)
operator|||
operator|(
name|oldAutoCompFF
operator|!=
name|autoCompFF
operator|.
name|isSelected
argument_list|()
operator|)
operator|||
operator|(
name|oldAutoCompLF
operator|!=
name|autoCompLF
operator|.
name|isSelected
argument_list|()
operator|)
operator|||
operator|(
name|oldAutoCompFModeAbbr
operator|!=
name|autoCompFirstNameMode_Abbr
operator|.
name|isSelected
argument_list|()
operator|)
operator|||
operator|(
name|oldAutoCompFModeFull
operator|!=
name|autoCompFirstNameMode_Full
operator|.
name|isSelected
argument_list|()
operator|)
condition|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|_frame
operator|.
name|getTabbedPane
argument_list|()
operator|.
name|getTabCount
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|BasePanel
name|bp
init|=
operator|(
name|BasePanel
operator|)
name|_frame
operator|.
name|getTabbedPane
argument_list|()
operator|.
name|getComponentAt
argument_list|(
name|j
argument_list|)
decl_stmt|;
name|bp
operator|.
name|entryEditors
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
comment|// the autocompleter has to be updated to the new min length to complete
name|AbstractAutoCompleter
operator|.
name|SHORTEST_TO_COMPLETE
operator|=
operator|(
name|Integer
operator|)
name|shortestToComplete
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
DECL|method|readyToClose ()
specifier|public
name|boolean
name|readyToClose
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Globals
operator|.
name|lang
argument_list|(
literal|"Entry editor"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

