begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_class
DECL|class|GeneralTab
specifier|public
class|class
name|GeneralTab
extends|extends
name|JPanel
implements|implements
name|PrefsTab
block|{
DECL|field|backup
DECL|field|openLast
specifier|private
name|JCheckBox
name|backup
decl_stmt|,
name|openLast
decl_stmt|,
DECL|field|defSort
DECL|field|ctrlClick
name|defSort
decl_stmt|,
name|ctrlClick
decl_stmt|,
DECL|field|useOwner
DECL|field|keyDuplicateWarningDialog
DECL|field|keyEmptyWarningDialog
DECL|field|autoDoubleBraces
name|useOwner
decl_stmt|,
name|keyDuplicateWarningDialog
decl_stmt|,
name|keyEmptyWarningDialog
decl_stmt|,
name|autoDoubleBraces
decl_stmt|,
DECL|field|confirmDelete
DECL|field|allowEditing
DECL|field|useImportInspector
name|confirmDelete
decl_stmt|,
name|allowEditing
decl_stmt|,
comment|/*preserveFormatting, */
name|useImportInspector
decl_stmt|,
DECL|field|useImportInspectorForSingle
DECL|field|inspectionWarnDupli
DECL|field|useTimeStamp
name|useImportInspectorForSingle
decl_stmt|,
name|inspectionWarnDupli
decl_stmt|,
name|useTimeStamp
decl_stmt|;
specifier|private
name|JRadioButton
DECL|field|saveOriginalOrder
DECL|field|saveAuthorOrder
DECL|field|saveTableOrder
name|saveOriginalOrder
decl_stmt|,
name|saveAuthorOrder
decl_stmt|,
name|saveTableOrder
decl_stmt|,
DECL|field|resolveStringsStandard
DECL|field|resolveStringsAll
name|resolveStringsStandard
decl_stmt|,
name|resolveStringsAll
decl_stmt|;
DECL|field|defOwnerField
DECL|field|timeStampFormat
DECL|field|timeStampField
specifier|private
name|JTextField
name|defOwnerField
decl_stmt|,
name|timeStampFormat
decl_stmt|,
name|timeStampField
decl_stmt|,
DECL|field|bracesAroundCapitalsFields
DECL|field|nonWrappableFields
DECL|field|doNotResolveStringsFor
name|bracesAroundCapitalsFields
decl_stmt|,
name|nonWrappableFields
decl_stmt|,
name|doNotResolveStringsFor
decl_stmt|;
DECL|field|_prefs
name|JabRefPreferences
name|_prefs
decl_stmt|;
DECL|field|_frame
name|JabRefFrame
name|_frame
decl_stmt|;
DECL|field|language
specifier|private
name|JComboBox
name|language
init|=
operator|new
name|JComboBox
argument_list|(
name|GUIGlobals
operator|.
name|LANGUAGES
operator|.
name|keySet
argument_list|()
operator|.
name|toArray
argument_list|()
argument_list|)
decl_stmt|,
DECL|field|encodings
name|encodings
init|=
operator|new
name|JComboBox
argument_list|(
name|Globals
operator|.
name|ENCODINGS
argument_list|)
decl_stmt|;
DECL|field|ownerHelp
DECL|field|timeStampHelp
specifier|private
name|HelpAction
name|ownerHelp
decl_stmt|,
name|timeStampHelp
decl_stmt|;
DECL|method|GeneralTab (JabRefFrame frame, JabRefPreferences prefs)
specifier|public
name|GeneralTab
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|,
name|JabRefPreferences
name|prefs
parameter_list|)
block|{
name|_prefs
operator|=
name|prefs
expr_stmt|;
name|_frame
operator|=
name|frame
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|openLast
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Open last edited databases at startup"
argument_list|)
argument_list|)
expr_stmt|;
name|allowEditing
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Allow editing in table cells"
argument_list|)
argument_list|)
expr_stmt|;
name|backup
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Backup old file when saving"
argument_list|)
argument_list|)
expr_stmt|;
name|defSort
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Sort Automatically"
argument_list|)
argument_list|)
expr_stmt|;
name|ctrlClick
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Open right-click menu with Ctrl+left button"
argument_list|)
argument_list|)
expr_stmt|;
name|useOwner
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Mark new entries with owner name"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|useTimeStamp
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Mark new entries with addition date"
argument_list|)
operator|+
literal|". "
operator|+
name|Globals
operator|.
name|lang
argument_list|(
literal|"Date format"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|keyDuplicateWarningDialog
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show warning dialog when a duplicate BibTeX key is entered"
argument_list|)
argument_list|)
expr_stmt|;
name|keyEmptyWarningDialog
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show warning dialog when an empty BibTeX key is entered"
argument_list|)
argument_list|)
expr_stmt|;
comment|// JZTODO lyrics
name|confirmDelete
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show confirmation dialog when deleting entries"
argument_list|)
argument_list|)
expr_stmt|;
name|saveAuthorOrder
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Save ordered by author/editor/year"
argument_list|)
argument_list|)
expr_stmt|;
name|saveOriginalOrder
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Save entries in their original order"
argument_list|)
argument_list|)
expr_stmt|;
name|saveTableOrder
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Save in default table sort order"
argument_list|)
argument_list|)
expr_stmt|;
name|ButtonGroup
name|bg
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|saveAuthorOrder
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|saveOriginalOrder
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|saveTableOrder
argument_list|)
expr_stmt|;
name|resolveStringsAll
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Resolve strings for all fields except"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|resolveStringsStandard
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Resolve strings for standard BibTeX fields only"
argument_list|)
argument_list|)
expr_stmt|;
name|bg
operator|=
operator|new
name|ButtonGroup
argument_list|()
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|resolveStringsAll
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|resolveStringsStandard
argument_list|)
expr_stmt|;
name|doNotResolveStringsFor
operator|=
operator|new
name|JTextField
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|autoDoubleBraces
operator|=
operator|new
name|JCheckBox
argument_list|(
comment|//+ Globals.lang("Store fields with double braces, and remove extra braces when loading.<BR>"
comment|//+ "Double braces signal that BibTeX should preserve character case.") + "</HTML>");
name|Globals
operator|.
name|lang
argument_list|(
literal|"Remove double braces around BibTeX fields when loading."
argument_list|)
argument_list|)
expr_stmt|;
name|useImportInspector
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Display imported entries in an inspection window before they are added."
argument_list|)
argument_list|)
expr_stmt|;
name|useImportInspectorForSingle
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Use inspection window also when a single entry is imported."
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|general
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|defOwnerField
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|timeStampFormat
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|timeStampField
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|ownerHelp
operator|=
operator|new
name|HelpAction
argument_list|(
name|frame
operator|.
name|helpDiag
argument_list|,
name|GUIGlobals
operator|.
name|ownerHelp
argument_list|,
literal|"Help"
argument_list|,
name|GUIGlobals
operator|.
name|getIconUrl
argument_list|(
literal|"helpSmall"
argument_list|)
argument_list|)
expr_stmt|;
name|timeStampHelp
operator|=
operator|new
name|HelpAction
argument_list|(
name|frame
operator|.
name|helpDiag
argument_list|,
name|GUIGlobals
operator|.
name|timeStampHelp
argument_list|,
literal|"Help"
argument_list|,
name|GUIGlobals
operator|.
name|getIconUrl
argument_list|(
literal|"helpSmall"
argument_list|)
argument_list|)
expr_stmt|;
name|inspectionWarnDupli
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Warn about unresolved duplicates when closing inspection window"
argument_list|)
argument_list|)
expr_stmt|;
name|Insets
name|marg
init|=
operator|new
name|Insets
argument_list|(
literal|0
argument_list|,
literal|12
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|useImportInspectorForSingle
operator|.
name|setMargin
argument_list|(
name|marg
argument_list|)
expr_stmt|;
name|inspectionWarnDupli
operator|.
name|setMargin
argument_list|(
name|marg
argument_list|)
expr_stmt|;
name|bracesAroundCapitalsFields
operator|=
operator|new
name|JTextField
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|nonWrappableFields
operator|=
operator|new
name|JTextField
argument_list|(
literal|25
argument_list|)
expr_stmt|;
comment|// We need a listener on useImportInspector to enable and disable the
comment|// import inspector related choices;
name|useImportInspector
operator|.
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|useImportInspectorForSingle
operator|.
name|setEnabled
argument_list|(
name|useImportInspector
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|inspectionWarnDupli
operator|.
name|setEnabled
argument_list|(
name|useImportInspector
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"8dlu, left:pref, 8dlu, fill:pref, 4dlu, fill:pref"
argument_list|,
comment|// 4dlu, left:pref, 4dlu",
literal|"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, "
operator|+
literal|"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, "
operator|+
literal|"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, pref, 6dlu, "
operator|+
literal|"pref, 6dlu, pref, 6dlu, pref, 6dlu, pref"
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"File"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|openLast
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|backup
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoDoubleBraces
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|saveAuthorOrder
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|4
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|saveTableOrder
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|saveOriginalOrder
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|4
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Store the following fields with braces around capital letters"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder3
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"left:pref, 4dlu, fill:pref"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|bracesAroundCapitalsFields
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Do not wrap the following fields when saving"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|builder3
operator|.
name|append
argument_list|(
name|nonWrappableFields
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|builder3
operator|.
name|getPanel
argument_list|()
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|9
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|resolveStringsStandard
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|11
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|DefaultFormBuilder
name|builder4
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"left:pref, 4dlu, fill:pref"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|builder4
operator|.
name|append
argument_list|(
name|resolveStringsAll
argument_list|)
expr_stmt|;
name|builder4
operator|.
name|append
argument_list|(
name|doNotResolveStringsFor
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|builder4
operator|.
name|getPanel
argument_list|()
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|13
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
comment|//builder.add(resolveStringsAll, cc.xy(2, 13));
comment|//builder.add(doNotResolveStringsFor, cc.xyw(4, 13, 3));
name|builder
operator|.
name|addSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Miscellaneous"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|15
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|useImportInspector
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|17
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|useImportInspectorForSingle
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|19
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|inspectionWarnDupli
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|21
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|ctrlClick
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|23
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|confirmDelete
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|25
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|keyDuplicateWarningDialog
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|27
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|keyEmptyWarningDialog
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|29
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create a new panel with its own FormLayout for the last items:
name|FormLayout
name|layout2
init|=
operator|new
name|FormLayout
argument_list|(
literal|"left:pref, 8dlu, fill:60dlu, 4dlu, left:pref, 4dlu, fill:60dlu, 4dlu, fill:pref"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder2
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout2
argument_list|)
decl_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|useOwner
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|defOwnerField
argument_list|)
expr_stmt|;
name|JButton
name|hlp
init|=
operator|new
name|JButton
argument_list|(
name|ownerHelp
argument_list|)
decl_stmt|;
name|hlp
operator|.
name|setText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|hlp
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|24
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|hlp
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|useTimeStamp
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|timeStampFormat
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Field name"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|timeStampField
argument_list|)
expr_stmt|;
name|hlp
operator|=
operator|new
name|JButton
argument_list|(
name|timeStampHelp
argument_list|)
expr_stmt|;
name|hlp
operator|.
name|setText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|hlp
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|24
argument_list|,
literal|24
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|hlp
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|JLabel
name|lab
decl_stmt|;
name|lab
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Language"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|lab
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|language
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|lab
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Default encoding"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|lab
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|encodings
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|builder2
operator|.
name|getPanel
argument_list|()
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|31
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|pan
init|=
name|builder
operator|.
name|getPanel
argument_list|()
decl_stmt|;
name|pan
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|pan
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|openLast
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"openLastEdited"
argument_list|)
argument_list|)
expr_stmt|;
name|allowEditing
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"allowTableEditing"
argument_list|)
argument_list|)
expr_stmt|;
name|backup
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"backup"
argument_list|)
argument_list|)
expr_stmt|;
name|defSort
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"defaultAutoSort"
argument_list|)
argument_list|)
expr_stmt|;
name|ctrlClick
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"ctrlClick"
argument_list|)
argument_list|)
expr_stmt|;
name|useOwner
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"useOwner"
argument_list|)
argument_list|)
expr_stmt|;
name|useTimeStamp
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"useTimeStamp"
argument_list|)
argument_list|)
expr_stmt|;
name|keyDuplicateWarningDialog
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"dialogWarningForDuplicateKey"
argument_list|)
argument_list|)
expr_stmt|;
name|keyEmptyWarningDialog
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"dialogWarningForEmptyKey"
argument_list|)
argument_list|)
expr_stmt|;
name|confirmDelete
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"confirmDelete"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"saveInStandardOrder"
argument_list|)
condition|)
name|saveAuthorOrder
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"saveInOriginalOrder"
argument_list|)
condition|)
name|saveOriginalOrder
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|saveTableOrder
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|//preserveFormatting.setSelected(_prefs.getBoolean("preserveFieldFormatting"));
name|autoDoubleBraces
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"autoDoubleBraces"
argument_list|)
argument_list|)
expr_stmt|;
name|resolveStringsAll
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"resolveStringsAllFields"
argument_list|)
argument_list|)
expr_stmt|;
name|resolveStringsStandard
operator|.
name|setSelected
argument_list|(
operator|!
name|resolveStringsAll
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|doNotResolveStringsFor
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"doNotResolveStringsFor"
argument_list|)
argument_list|)
expr_stmt|;
name|defOwnerField
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"defaultOwner"
argument_list|)
argument_list|)
expr_stmt|;
name|timeStampFormat
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"timeStampFormat"
argument_list|)
argument_list|)
expr_stmt|;
name|timeStampField
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"timeStampField"
argument_list|)
argument_list|)
expr_stmt|;
name|useImportInspector
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"useImportInspectionDialog"
argument_list|)
argument_list|)
expr_stmt|;
name|useImportInspectorForSingle
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"useImportInspectionDialogForSingle"
argument_list|)
argument_list|)
expr_stmt|;
name|inspectionWarnDupli
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"warnAboutDuplicatesInInspection"
argument_list|)
argument_list|)
expr_stmt|;
name|useImportInspectorForSingle
operator|.
name|setEnabled
argument_list|(
name|useImportInspector
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|inspectionWarnDupli
operator|.
name|setEnabled
argument_list|(
name|useImportInspector
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|bracesAroundCapitalsFields
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"putBracesAroundCapitals"
argument_list|)
argument_list|)
expr_stmt|;
name|nonWrappableFields
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"nonWrappableFields"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|enc
init|=
name|_prefs
operator|.
name|get
argument_list|(
literal|"defaultEncoding"
argument_list|)
decl_stmt|;
name|outer
label|:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|Globals
operator|.
name|ENCODINGS
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|Globals
operator|.
name|ENCODINGS
index|[
name|i
index|]
operator|.
name|equalsIgnoreCase
argument_list|(
name|enc
argument_list|)
condition|)
block|{
name|encodings
operator|.
name|setSelectedIndex
argument_list|(
name|i
argument_list|)
expr_stmt|;
break|break
name|outer
break|;
block|}
block|}
name|String
name|oldLan
init|=
name|_prefs
operator|.
name|get
argument_list|(
literal|"language"
argument_list|)
decl_stmt|;
comment|// Language choice
name|int
name|ilk
init|=
literal|0
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|GUIGlobals
operator|.
name|LANGUAGES
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
if|if
condition|(
name|GUIGlobals
operator|.
name|LANGUAGES
operator|.
name|get
argument_list|(
name|i
operator|.
name|next
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|oldLan
argument_list|)
condition|)
block|{
name|language
operator|.
name|setSelectedIndex
argument_list|(
name|ilk
argument_list|)
expr_stmt|;
block|}
name|ilk
operator|++
expr_stmt|;
block|}
block|}
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"backup"
argument_list|,
name|backup
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"openLastEdited"
argument_list|,
name|openLast
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"useOwner"
argument_list|,
name|useOwner
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"useTimeStamp"
argument_list|,
name|useTimeStamp
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"dialogWarningForDuplicateKey"
argument_list|,
name|keyDuplicateWarningDialog
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"dialogWarningForEmptyKey"
argument_list|,
name|keyEmptyWarningDialog
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"confirmDelete"
argument_list|,
name|confirmDelete
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"saveInStandardOrder"
argument_list|,
name|saveAuthorOrder
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"saveInOriginalOrder"
argument_list|,
name|saveOriginalOrder
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"allowTableEditing"
argument_list|,
name|allowEditing
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"ctrlClick"
argument_list|,
name|ctrlClick
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
comment|//_prefs.putBoolean("preserveFieldFormatting", preserveFormatting.isSelected());
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"autoDoubleBraces"
argument_list|,
name|autoDoubleBraces
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"resolveStringsAllFields"
argument_list|,
name|resolveStringsAll
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"doNotResolveStringsFor"
argument_list|,
name|doNotResolveStringsFor
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|doNotResolveStringsFor
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"doNotResolveStringsFor"
argument_list|)
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"useImportInspectionDialog"
argument_list|,
name|useImportInspector
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"useImportInspectionDialogForSingle"
argument_list|,
name|useImportInspectorForSingle
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"warnAboutDuplicatesInInspection"
argument_list|,
name|inspectionWarnDupli
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
comment|//_prefs.putBoolean("defaultAutoSort", defSorrrt.isSelected());
name|String
name|owner
init|=
name|defOwnerField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"defaultOwner"
argument_list|,
name|owner
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|WRAPPED_USERNAME
operator|=
literal|"["
operator|+
name|owner
operator|+
literal|"]"
expr_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"timeStampFormat"
argument_list|,
name|timeStampFormat
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"timeStampField"
argument_list|,
name|timeStampField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"defaultEncoding"
argument_list|,
operator|(
name|String
operator|)
name|encodings
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
name|boolean
name|updateSpecialFields
init|=
literal|false
decl_stmt|;
if|if
condition|(
operator|!
name|bracesAroundCapitalsFields
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"putBracesAroundCapitals"
argument_list|)
argument_list|)
condition|)
block|{
name|_prefs
operator|.
name|put
argument_list|(
literal|"putBracesAroundCapitals"
argument_list|,
name|bracesAroundCapitalsFields
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|updateSpecialFields
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|nonWrappableFields
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"nonWrappableFields"
argument_list|)
argument_list|)
condition|)
block|{
name|_prefs
operator|.
name|put
argument_list|(
literal|"nonWrappableFields"
argument_list|,
name|nonWrappableFields
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|updateSpecialFields
operator|=
literal|true
expr_stmt|;
block|}
comment|// If either of the two last entries were changed, run the update for special field handling:
if|if
condition|(
name|updateSpecialFields
condition|)
name|_prefs
operator|.
name|updateSpecialFieldHandling
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|GUIGlobals
operator|.
name|LANGUAGES
operator|.
name|get
argument_list|(
name|language
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
operator|.
name|equals
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"language"
argument_list|)
argument_list|)
condition|)
block|{
name|_prefs
operator|.
name|put
argument_list|(
literal|"language"
argument_list|,
name|GUIGlobals
operator|.
name|LANGUAGES
operator|.
name|get
argument_list|(
name|language
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|Globals
operator|.
name|setLanguage
argument_list|(
name|GUIGlobals
operator|.
name|LANGUAGES
operator|.
name|get
argument_list|(
name|language
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"You have changed the language setting. "
operator|+
literal|"You must restart JabRef for this to come into effect."
argument_list|)
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Changed language settings"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|readyToClose ()
specifier|public
name|boolean
name|readyToClose
parameter_list|()
block|{
try|try
block|{
comment|// Test if date format is legal:
name|SimpleDateFormat
name|sdf
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|timeStampFormat
operator|.
name|getText
argument_list|()
argument_list|)
decl_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex2
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"The chosen date format for new entries is not valid"
argument_list|)
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Invalid date format"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Globals
operator|.
name|lang
argument_list|(
literal|"General"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

