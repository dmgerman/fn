begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Class for holding the information about customizable entry editor tabs.  */
end_comment

begin_class
DECL|class|EntryEditorTabList
specifier|public
specifier|final
class|class
name|EntryEditorTabList
block|{
DECL|field|list
specifier|private
name|List
name|list
init|=
literal|null
decl_stmt|;
DECL|field|names
specifier|private
name|List
name|names
init|=
literal|null
decl_stmt|;
DECL|method|EntryEditorTabList ()
specifier|public
name|EntryEditorTabList
parameter_list|()
block|{
name|init
argument_list|()
expr_stmt|;
block|}
DECL|method|init ()
specifier|private
name|void
name|init
parameter_list|()
block|{
name|list
operator|=
operator|new
name|ArrayList
argument_list|()
expr_stmt|;
name|names
operator|=
operator|new
name|ArrayList
argument_list|()
expr_stmt|;
name|int
name|i
init|=
literal|0
decl_stmt|;
name|String
name|name
decl_stmt|;
name|String
index|[]
name|fields
decl_stmt|;
while|while
condition|(
name|Globals
operator|.
name|prefs
operator|.
name|hasKey
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|CUSTOM_TAB_NAME
operator|+
name|i
argument_list|)
condition|)
block|{
name|name
operator|=
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|CUSTOM_TAB_NAME
operator|+
name|i
argument_list|)
expr_stmt|;
name|fields
operator|=
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|CUSTOM_TAB_FIELDS
operator|+
name|i
argument_list|)
operator|.
name|split
argument_list|(
literal|";"
argument_list|)
expr_stmt|;
name|List
name|entry
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|fields
argument_list|)
decl_stmt|;
name|names
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|list
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|i
operator|++
expr_stmt|;
block|}
block|}
DECL|method|getTabCount ()
specifier|public
name|int
name|getTabCount
parameter_list|()
block|{
return|return
name|list
operator|.
name|size
argument_list|()
return|;
block|}
DECL|method|getTabName (int tab)
specifier|public
name|String
name|getTabName
parameter_list|(
name|int
name|tab
parameter_list|)
block|{
return|return
operator|(
name|String
operator|)
name|names
operator|.
name|get
argument_list|(
name|tab
argument_list|)
return|;
block|}
DECL|method|getTabFields (int tab)
specifier|public
name|List
name|getTabFields
parameter_list|(
name|int
name|tab
parameter_list|)
block|{
return|return
operator|(
name|List
operator|)
name|list
operator|.
name|get
argument_list|(
name|tab
argument_list|)
return|;
block|}
block|}
end_class

end_unit

