begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Created on Oct 25, 2004  *  * TODO To change the template for this generated file go to  * Window - Preferences - Java - Code Style - Code Templates  */
end_comment

begin_package
DECL|package|net.sf.jabref.mods
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|mods
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|wsi
operator|.
name|ra
operator|.
name|tool
operator|.
name|WSITools
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author Michael Wrighton  *  * TODO To change the template for this generated type comment go to  * Window - Preferences - Java - Code Style - Code Templates  */
end_comment

begin_class
DECL|class|PersonName
specifier|public
class|class
name|PersonName
block|{
DECL|field|givenName
specifier|protected
name|String
name|givenName
init|=
literal|null
decl_stmt|;
DECL|field|surname
specifier|protected
name|String
name|surname
init|=
literal|null
decl_stmt|;
DECL|field|middleName
specifier|protected
name|String
name|middleName
init|=
literal|null
decl_stmt|;
DECL|method|PersonName (String name)
specifier|public
name|PersonName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|parseName
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
DECL|method|parseName (String author)
specifier|protected
name|void
name|parseName
parameter_list|(
name|String
name|author
parameter_list|)
block|{
comment|// TODO: replace special characters
name|Vector
name|v
init|=
operator|new
name|Vector
argument_list|()
decl_stmt|;
name|String
name|authorMod
init|=
name|ImportFormatReader
operator|.
name|fixAuthor_firstNameFirst
argument_list|(
name|author
argument_list|)
decl_stmt|;
name|WSITools
operator|.
name|tokenize
argument_list|(
name|v
argument_list|,
name|authorMod
argument_list|,
literal|" \n\r"
argument_list|)
expr_stmt|;
if|if
condition|(
name|v
operator|.
name|size
argument_list|()
operator|==
literal|1
condition|)
name|surname
operator|=
operator|(
name|String
operator|)
name|v
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|v
operator|.
name|size
argument_list|()
operator|==
literal|2
condition|)
block|{
name|givenName
operator|=
operator|(
name|String
operator|)
name|v
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|surname
operator|=
operator|(
name|String
operator|)
name|v
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|givenName
operator|=
operator|(
name|String
operator|)
name|v
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|middleName
operator|=
operator|(
name|String
operator|)
name|v
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|surname
operator|=
operator|(
name|String
operator|)
name|v
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getGivenNames ()
specifier|public
name|String
name|getGivenNames
parameter_list|()
block|{
name|String
name|result
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|givenName
operator|!=
literal|null
condition|)
name|result
operator|+=
name|givenName
expr_stmt|;
if|if
condition|(
name|middleName
operator|!=
literal|null
condition|)
name|result
operator|+=
literal|" "
operator|+
name|middleName
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|getSurname ()
specifier|public
name|String
name|getSurname
parameter_list|()
block|{
return|return
name|surname
return|;
block|}
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|surname
return|;
block|}
block|}
end_class

end_unit

