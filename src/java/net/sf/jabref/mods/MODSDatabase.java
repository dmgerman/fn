begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Created on Oct 23, 2004  *  * TODO To change the template for this generated file go to  * Window - Preferences - Java - Code Style - Code Templates  */
end_comment

begin_package
DECL|package|net.sf.jabref.mods
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|mods
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @author Michael Wrighton  *  * TODO To change the template for this generated type comment go to  * Window - Preferences - Java - Code Style - Code Templates  */
end_comment

begin_class
DECL|class|MODSDatabase
specifier|public
class|class
name|MODSDatabase
block|{
DECL|field|entries
specifier|protected
name|Set
name|entries
decl_stmt|;
DECL|method|MODSDatabase ()
specifier|public
name|MODSDatabase
parameter_list|()
block|{
comment|// maybe make this sorted later...
name|entries
operator|=
operator|new
name|HashSet
argument_list|()
expr_stmt|;
block|}
DECL|method|MODSDatabase (BibtexDatabase bibtex)
specifier|public
name|MODSDatabase
parameter_list|(
name|BibtexDatabase
name|bibtex
parameter_list|)
block|{
name|this
argument_list|()
expr_stmt|;
name|Collection
name|c
init|=
name|bibtex
operator|.
name|getEntries
argument_list|()
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|c
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|BibtexEntry
name|entry
init|=
operator|(
name|BibtexEntry
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|MODSEntry
name|newMods
init|=
operator|new
name|MODSEntry
argument_list|(
name|entry
argument_list|)
decl_stmt|;
name|entries
operator|.
name|add
argument_list|(
name|newMods
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getDOMrepresentation ()
specifier|public
name|Document
name|getDOMrepresentation
parameter_list|()
block|{
name|Document
name|result
init|=
literal|null
decl_stmt|;
try|try
block|{
name|DocumentBuilder
name|dbuild
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|result
operator|=
name|dbuild
operator|.
name|newDocument
argument_list|()
expr_stmt|;
name|Element
name|modsCollection
init|=
name|result
operator|.
name|createElement
argument_list|(
literal|"modsCollection"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|iter
init|=
name|entries
operator|.
name|iterator
argument_list|()
init|;
name|iter
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|MODSEntry
name|entry
init|=
operator|(
name|MODSEntry
operator|)
name|iter
operator|.
name|next
argument_list|()
decl_stmt|;
name|Node
name|node
init|=
name|entry
operator|.
name|getDOMrepresentation
argument_list|(
name|result
argument_list|)
decl_stmt|;
name|modsCollection
operator|.
name|appendChild
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
name|result
operator|.
name|appendChild
argument_list|(
name|modsCollection
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
literal|"Exception caught..."
operator|+
name|e
argument_list|)
expr_stmt|;
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

