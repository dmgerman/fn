begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Created on 09-Dec-2003  */
end_comment

begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagConstraints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GridBagLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Container
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JToolBar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|labelPattern
operator|.
name|LabelPattern
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|labelPattern
operator|.
name|LabelPatternUtil
import|;
end_import

begin_comment
comment|/**  * This is the panel for the key pattern definition tab in 'Preferences'. So far  * it is only possible to edit default entry types.  *   * Labels and buttons does not yet draw from a resource file.  *     * @author Ulrik Stervbo (ulriks AT ruc.dk)  */
end_comment

begin_class
DECL|class|TabLabelPattern
specifier|public
class|class
name|TabLabelPattern
extends|extends
name|JPanel
implements|implements
name|PrefsTab
block|{
DECL|field|def
specifier|private
name|String
name|def
init|=
name|Globals
operator|.
name|lang
argument_list|(
literal|"Default"
argument_list|)
decl_stmt|;
DECL|field|gbl
specifier|private
name|GridBagLayout
name|gbl
init|=
operator|new
name|GridBagLayout
argument_list|()
decl_stmt|;
DECL|field|con
specifier|private
name|GridBagConstraints
name|con
init|=
operator|new
name|GridBagConstraints
argument_list|()
decl_stmt|;
DECL|field|textFields
specifier|private
name|HashMap
name|textFields
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
DECL|field|_prefs
specifier|private
name|JabRefPreferences
name|_prefs
decl_stmt|;
DECL|field|_keypatterns
specifier|private
name|LabelPattern
name|_keypatterns
decl_stmt|;
DECL|field|lblEntryType
DECL|field|lblKeyPattern
specifier|private
name|JLabel
name|lblEntryType
decl_stmt|,
name|lblKeyPattern
decl_stmt|;
DECL|field|lblArticle
DECL|field|lblBook
DECL|field|lblBooklet
DECL|field|lblConference
specifier|private
name|JLabel
name|lblArticle
decl_stmt|,
name|lblBook
decl_stmt|,
name|lblBooklet
decl_stmt|,
name|lblConference
decl_stmt|;
DECL|field|lblInbook
DECL|field|lblIncollection
DECL|field|lblInproceedings
specifier|private
name|JLabel
name|lblInbook
decl_stmt|,
name|lblIncollection
decl_stmt|,
name|lblInproceedings
decl_stmt|;
DECL|field|lblManual
DECL|field|lblMastersthesis
DECL|field|lblMisc
DECL|field|lblPhdthesis
specifier|private
name|JLabel
name|lblManual
decl_stmt|,
name|lblMastersthesis
decl_stmt|,
name|lblMisc
decl_stmt|,
name|lblPhdthesis
decl_stmt|;
DECL|field|lblProceedings
DECL|field|lblTechreport
DECL|field|lblUnpublished
specifier|private
name|JLabel
name|lblProceedings
decl_stmt|,
name|lblTechreport
decl_stmt|,
name|lblUnpublished
decl_stmt|;
DECL|field|txtArticle
DECL|field|txtBook
DECL|field|txtBooklet
DECL|field|txtConference
specifier|private
name|JTextField
name|txtArticle
decl_stmt|,
name|txtBook
decl_stmt|,
name|txtBooklet
decl_stmt|,
name|txtConference
decl_stmt|;
DECL|field|txtInbook
DECL|field|txtIncollection
DECL|field|txtInproceedings
specifier|private
name|JTextField
name|txtInbook
decl_stmt|,
name|txtIncollection
decl_stmt|,
name|txtInproceedings
decl_stmt|;
DECL|field|txtManual
DECL|field|txtMastersthesis
DECL|field|txtMisc
DECL|field|txtPhdthesis
specifier|private
name|JTextField
name|txtManual
decl_stmt|,
name|txtMastersthesis
decl_stmt|,
name|txtMisc
decl_stmt|,
name|txtPhdthesis
decl_stmt|;
DECL|field|txtProceedings
DECL|field|txtTechreport
DECL|field|txtUnpublished
specifier|private
name|JTextField
name|txtProceedings
decl_stmt|,
name|txtTechreport
decl_stmt|,
name|txtUnpublished
decl_stmt|;
DECL|field|btnArticleDefault
DECL|field|btnBookDefault
DECL|field|btnBookletDefault
specifier|private
name|JButton
name|btnArticleDefault
decl_stmt|,
name|btnBookDefault
decl_stmt|,
name|btnBookletDefault
decl_stmt|;
DECL|field|btnConferenceDefault
DECL|field|btnInbookDefault
specifier|private
name|JButton
name|btnConferenceDefault
decl_stmt|,
name|btnInbookDefault
decl_stmt|;
DECL|field|btnIncollectionDefault
DECL|field|btnInproceedingsDefault
specifier|private
name|JButton
name|btnIncollectionDefault
decl_stmt|,
name|btnInproceedingsDefault
decl_stmt|;
DECL|field|btnManualDefault
DECL|field|btnMastersthesisDefault
DECL|field|btnMiscDefault
specifier|private
name|JButton
name|btnManualDefault
decl_stmt|,
name|btnMastersthesisDefault
decl_stmt|,
name|btnMiscDefault
decl_stmt|;
DECL|field|btnPhdthesisDefault
DECL|field|btnProceedingsDefault
specifier|private
name|JButton
name|btnPhdthesisDefault
decl_stmt|,
name|btnProceedingsDefault
decl_stmt|;
DECL|field|btnTechreportDefault
DECL|field|btnUnpublishedDefault
specifier|private
name|JButton
name|btnTechreportDefault
decl_stmt|,
name|btnUnpublishedDefault
decl_stmt|;
DECL|field|btnDefaultAll
specifier|private
name|JButton
name|btnDefaultAll
decl_stmt|;
DECL|field|help
specifier|private
name|HelpAction
name|help
decl_stmt|;
comment|/** 	 * The constructor 	 */
DECL|method|TabLabelPattern (JabRefPreferences prefs, HelpDialog helpDiag)
specifier|public
name|TabLabelPattern
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|,
name|HelpDialog
name|helpDiag
parameter_list|)
block|{
name|_prefs
operator|=
name|prefs
expr_stmt|;
name|_keypatterns
operator|=
name|_prefs
operator|.
name|getKeyPattern
argument_list|()
expr_stmt|;
name|help
operator|=
operator|new
name|HelpAction
argument_list|(
name|helpDiag
argument_list|,
name|GUIGlobals
operator|.
name|labelPatternHelp
argument_list|,
literal|"Help on key patterns"
argument_list|)
expr_stmt|;
name|buildGUI
argument_list|()
expr_stmt|;
comment|//fillTextfields();
block|}
comment|/** 	 * Store changes to table preferences. This method is called when 	 * the user clicks Ok. 	 * 	 */
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
comment|// first we erase everything!
name|LabelPattern
name|defKeyPattern
init|=
name|_keypatterns
operator|.
name|getParent
argument_list|()
decl_stmt|;
name|_keypatterns
operator|=
operator|new
name|LabelPattern
argument_list|(
name|defKeyPattern
argument_list|)
expr_stmt|;
comment|// then we rebuild...
name|Iterator
name|i
init|=
name|textFields
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|String
name|defa
init|=
operator|(
name|String
operator|)
name|LabelPatternUtil
operator|.
name|DEFAULT_LABELPATTERN
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|s
init|=
operator|(
name|String
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|,
name|text
init|=
operator|(
operator|(
name|JTextField
operator|)
name|textFields
operator|.
name|get
argument_list|(
name|s
argument_list|)
operator|)
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|defa
operator|.
name|equals
argument_list|(
name|text
argument_list|)
condition|)
name|_keypatterns
operator|.
name|addLabelPattern
argument_list|(
name|s
argument_list|,
name|text
argument_list|)
expr_stmt|;
block|}
name|_prefs
operator|.
name|putKeyPattern
argument_list|(
name|_keypatterns
argument_list|)
expr_stmt|;
comment|/* 		_keypatterns.addLabelPattern("article", 			txtArticle.getText()); 		_keypatterns.addLabelPattern("book", 					txtBook.getText()); 		_keypatterns.addLabelPattern("booklet", 			txtBooklet.getText()); 		_keypatterns.addLabelPattern("conference", 		txtConference.getText()); 		_keypatterns.addLabelPattern("inbook", 				txtInbook.getText()); 		_keypatterns.addLabelPattern("incollection", 	txtIncollection.getText()); 		_keypatterns.addLabelPattern("inproceedings",	txtInproceedings.getText()); 		_keypatterns.addLabelPattern("manual", 				txtManual.getText()); 		_keypatterns.addLabelPattern("mastersthesis",	txtMastersthesis.getText()); 		_keypatterns.addLabelPattern("misc",					txtMisc.getText()); 		_keypatterns.addLabelPattern("phdthesis", 		txtPhdthesis.getText()); 		_keypatterns.addLabelPattern("proceedings", 	txtProceedings.getText()); 		_keypatterns.addLabelPattern("techreport", 		txtTechreport.getText()); 		_keypatterns.addLabelPattern("unpublished", 	txtUnpublished.getText()); 		*/
block|}
DECL|method|addEntryType (Container c, String name, int y)
specifier|private
name|JTextField
name|addEntryType
parameter_list|(
name|Container
name|c
parameter_list|,
name|String
name|name
parameter_list|,
name|int
name|y
parameter_list|)
block|{
name|JLabel
name|lab
init|=
operator|new
name|JLabel
argument_list|(
name|Util
operator|.
name|nCase
argument_list|(
name|name
argument_list|)
argument_list|)
decl_stmt|;
name|name
operator|=
name|name
operator|.
name|toLowerCase
argument_list|()
expr_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|gridy
operator|=
name|y
expr_stmt|;
name|con
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|con
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|con
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|lab
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|c
operator|.
name|add
argument_list|(
name|lab
argument_list|)
expr_stmt|;
name|JTextField
name|tf
init|=
operator|new
name|JTextField
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
name|name
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
decl_stmt|;
name|tf
operator|.
name|setColumns
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
name|con
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|CENTER
expr_stmt|;
name|con
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|tf
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|c
operator|.
name|add
argument_list|(
name|tf
argument_list|)
expr_stmt|;
name|JButton
name|but
init|=
operator|new
name|JButton
argument_list|(
name|def
argument_list|)
decl_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|2
expr_stmt|;
name|con
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|con
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|CENTER
expr_stmt|;
name|con
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|but
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|but
operator|.
name|setActionCommand
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|but
operator|.
name|addActionListener
argument_list|(
operator|new
name|buttonHandler
argument_list|()
argument_list|)
expr_stmt|;
name|c
operator|.
name|add
argument_list|(
name|but
argument_list|)
expr_stmt|;
return|return
name|tf
return|;
block|}
comment|/** 	 * Method to build GUI 	 * 	 */
DECL|method|buildGUI ()
specifier|private
name|void
name|buildGUI
parameter_list|()
block|{
name|JPanel
name|pan
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|JScrollPane
name|sp
init|=
operator|new
name|JScrollPane
argument_list|(
name|pan
argument_list|)
decl_stmt|;
name|pan
operator|.
name|setLayout
argument_list|(
name|gbl
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
name|gbl
argument_list|)
expr_stmt|;
comment|// The header - can be removed
name|lblEntryType
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Entry type"
argument_list|)
argument_list|)
expr_stmt|;
name|Font
name|f
init|=
operator|new
name|Font
argument_list|(
literal|"plain"
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
literal|12
argument_list|)
decl_stmt|;
name|lblEntryType
operator|.
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|gridheight
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|VERTICAL
expr_stmt|;
name|con
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|con
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|lblEntryType
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|pan
operator|.
name|add
argument_list|(
name|lblEntryType
argument_list|)
expr_stmt|;
name|lblKeyPattern
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Key pattern"
argument_list|)
argument_list|)
expr_stmt|;
name|lblKeyPattern
operator|.
name|setFont
argument_list|(
name|f
argument_list|)
expr_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|gridy
operator|=
literal|0
expr_stmt|;
comment|//con.gridwidth = 2;
name|con
operator|.
name|gridheight
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|con
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|WEST
expr_stmt|;
name|con
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|lblKeyPattern
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|pan
operator|.
name|add
argument_list|(
name|lblKeyPattern
argument_list|)
expr_stmt|;
name|int
name|y
init|=
literal|1
decl_stmt|;
name|Iterator
name|i
init|=
name|BibtexEntryType
operator|.
name|ALL_TYPES
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|s
init|=
operator|(
name|String
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|textFields
operator|.
name|put
argument_list|(
name|s
argument_list|,
name|addEntryType
argument_list|(
name|pan
argument_list|,
name|s
argument_list|,
name|y
argument_list|)
argument_list|)
expr_stmt|;
name|y
operator|++
expr_stmt|;
block|}
name|con
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|BOTH
expr_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|gridy
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|gridwidth
operator|=
literal|3
expr_stmt|;
name|con
operator|.
name|weightx
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|weighty
operator|=
literal|1
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|sp
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|sp
argument_list|)
expr_stmt|;
comment|// A help button
name|con
operator|.
name|gridwidth
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|1
expr_stmt|;
name|con
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
name|con
operator|.
name|fill
operator|=
name|GridBagConstraints
operator|.
name|HORIZONTAL
expr_stmt|;
comment|//con.fill = GridBagConstraints.BOTH;
name|con
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|SOUTHEAST
expr_stmt|;
name|con
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|JButton
name|hlb
init|=
operator|new
name|JButton
argument_list|(
operator|new
name|ImageIcon
argument_list|(
name|GUIGlobals
operator|.
name|helpSmallIconFile
argument_list|)
argument_list|)
decl_stmt|;
name|hlb
operator|.
name|setToolTipText
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Help on key patterns"
argument_list|)
argument_list|)
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|hlb
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|hlb
argument_list|)
expr_stmt|;
name|hlb
operator|.
name|addActionListener
argument_list|(
name|help
argument_list|)
expr_stmt|;
comment|// And finally a button to reset everything
name|btnDefaultAll
operator|=
operator|new
name|JButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Reset all"
argument_list|)
argument_list|)
expr_stmt|;
name|con
operator|.
name|gridx
operator|=
literal|2
expr_stmt|;
name|con
operator|.
name|gridy
operator|=
literal|2
expr_stmt|;
comment|//con.fill = GridBagConstraints.BOTH;
name|con
operator|.
name|weightx
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|weighty
operator|=
literal|0
expr_stmt|;
name|con
operator|.
name|anchor
operator|=
name|GridBagConstraints
operator|.
name|SOUTHEAST
expr_stmt|;
name|con
operator|.
name|insets
operator|=
operator|new
name|Insets
argument_list|(
literal|20
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|gbl
operator|.
name|setConstraints
argument_list|(
name|btnDefaultAll
argument_list|,
name|con
argument_list|)
expr_stmt|;
name|btnDefaultAll
operator|.
name|addActionListener
argument_list|(
operator|new
name|buttonHandler
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|btnDefaultAll
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * Method for filling the text fields with user defined key patterns or default. 	 * The method used (<code>getValue(key)</code>) to get the ArrayList  	 * corrosponding to an entry type throws a<code>NullPointerException</code> 	 * and<code>?</code> if an entry cannot be found. It really shouln't be 	 * nessesary to catch those exceptions here...  	 */
DECL|method|fillTextfields ()
specifier|private
name|void
name|fillTextfields
parameter_list|()
block|{
name|txtArticle
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"article"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtBook
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"book"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtBooklet
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"booklet"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtConference
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"conference"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtInbook
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"inbook"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtIncollection
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"incollection"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtInproceedings
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"inproceedings"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtManual
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"manual"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtMastersthesis
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"mastersthesis"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtMisc
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"misc"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtPhdthesis
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"phdthesis"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtProceedings
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"proceedings"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtTechreport
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"techreport"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|txtUnpublished
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getValue
argument_list|(
literal|"unpublished"
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * An inner class to handle button actions 	 * @author Ulrik Stervbo (ulriks AT ruc.dk) 	 */
DECL|class|buttonHandler
class|class
name|buttonHandler
implements|implements
name|ActionListener
block|{
DECL|method|actionPerformed (ActionEvent evt)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
if|if
condition|(
name|evt
operator|.
name|getSource
argument_list|()
operator|==
name|btnDefaultAll
condition|)
block|{
comment|// All to default
name|Iterator
name|i
init|=
name|textFields
operator|.
name|keySet
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|i
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|String
name|s
init|=
operator|(
name|String
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
comment|//_keypatterns.removeLabelPattern(s);
name|JTextField
name|tf
init|=
operator|(
name|JTextField
operator|)
name|textFields
operator|.
name|get
argument_list|(
name|s
argument_list|)
decl_stmt|;
name|tf
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getParent
argument_list|()
operator|.
name|getValue
argument_list|(
name|s
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return;
block|}
comment|//_keypatterns.removeLabelPattern(evt.getActionCommand());
name|JTextField
name|tf
init|=
operator|(
name|JTextField
operator|)
name|textFields
operator|.
name|get
argument_list|(
name|evt
operator|.
name|getActionCommand
argument_list|()
argument_list|)
decl_stmt|;
name|tf
operator|.
name|setText
argument_list|(
name|_keypatterns
operator|.
name|getParent
argument_list|()
operator|.
name|getValue
argument_list|(
name|evt
operator|.
name|getActionCommand
argument_list|()
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

