begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2012 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.specialfields
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|specialfields
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|FocusListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|GUIGlobals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|HelpAction
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|HelpDialog
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|PrefsTab
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_class
DECL|class|SpecialFieldsPrefsTab
specifier|public
class|class
name|SpecialFieldsPrefsTab
extends|extends
name|JPanel
implements|implements
name|PrefsTab
block|{
DECL|field|specialFieldsEnabled
DECL|field|rankingColumn
DECL|field|qualityColumn
DECL|field|priorityColumn
DECL|field|relevanceColumn
DECL|field|syncKeywords
DECL|field|writeSpecialFields
specifier|private
name|JCheckBox
name|specialFieldsEnabled
decl_stmt|,
name|rankingColumn
decl_stmt|,
name|qualityColumn
decl_stmt|,
name|priorityColumn
decl_stmt|,
name|relevanceColumn
decl_stmt|,
name|syncKeywords
decl_stmt|,
name|writeSpecialFields
decl_stmt|;
DECL|field|prefs
specifier|private
specifier|final
name|JabRefPreferences
name|prefs
decl_stmt|;
DECL|field|oldSpecialFieldsEnabled
DECL|field|oldRankingColumn
DECL|field|oldQualityColumn
DECL|field|oldPriorityColumn
DECL|field|oldRelevanceColumn
DECL|field|oldSyncKeyWords
DECL|field|oldWriteSpecialFields
specifier|private
name|boolean
name|oldSpecialFieldsEnabled
decl_stmt|,
name|oldRankingColumn
decl_stmt|,
name|oldQualityColumn
decl_stmt|,
name|oldPriorityColumn
decl_stmt|,
name|oldRelevanceColumn
decl_stmt|,
name|oldSyncKeyWords
decl_stmt|,
name|oldWriteSpecialFields
decl_stmt|;
DECL|field|hlb
specifier|private
specifier|final
name|JButton
name|hlb
decl_stmt|;
DECL|method|SpecialFieldsPrefsTab (JabRefPreferences prefs, HelpDialog helpDiag)
specifier|public
name|SpecialFieldsPrefsTab
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|,
name|HelpDialog
name|helpDiag
parameter_list|)
block|{
name|this
operator|.
name|prefs
operator|=
name|prefs
expr_stmt|;
name|HelpAction
name|help
init|=
operator|new
name|HelpAction
argument_list|(
name|helpDiag
argument_list|,
name|GUIGlobals
operator|.
name|specialFieldsHelp
argument_list|,
literal|"Help on key patterns"
argument_list|)
decl_stmt|;
name|hlb
operator|=
operator|new
name|JButton
argument_list|(
name|GUIGlobals
operator|.
name|getImage
argument_list|(
literal|"helpSmall"
argument_list|)
argument_list|)
expr_stmt|;
name|hlb
operator|.
name|setToolTipText
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Help on special fields"
argument_list|)
argument_list|)
expr_stmt|;
name|hlb
operator|.
name|addActionListener
argument_list|(
name|help
argument_list|)
expr_stmt|;
name|specialFieldsEnabled
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Enable special fields"
argument_list|)
argument_list|)
expr_stmt|;
comment|//		.concat(". ").concat(Globals.lang("You must restart JabRef for this to come into effect.")));
name|specialFieldsEnabled
operator|.
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|boolean
name|isEnabled
init|=
name|specialFieldsEnabled
operator|.
name|isSelected
argument_list|()
decl_stmt|;
name|rankingColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|qualityColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|priorityColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|relevanceColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|syncKeywords
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|writeSpecialFields
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|rankingColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show ranking"
argument_list|)
argument_list|)
expr_stmt|;
name|qualityColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show quality"
argument_list|)
argument_list|)
expr_stmt|;
name|priorityColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show priority"
argument_list|)
argument_list|)
expr_stmt|;
name|relevanceColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show relevance"
argument_list|)
argument_list|)
expr_stmt|;
name|syncKeywords
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Synchronize with keywords"
argument_list|)
argument_list|)
expr_stmt|;
name|writeSpecialFields
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Write values of special fields as separate fields to BibTeX"
argument_list|)
argument_list|)
expr_stmt|;
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"12dlu pref"
argument_list|,
literal|"pref pref pref pref pref pref pref pref"
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|specialFieldsEnabled
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|rankingColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|relevanceColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|qualityColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|priorityColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|syncKeywords
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|writeSpecialFields
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|hlb
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|8
argument_list|)
argument_list|)
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|JPanel
name|panel
init|=
name|builder
operator|.
name|getPanel
argument_list|()
decl_stmt|;
name|panel
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|panel
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|oldRankingColumn
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RANKING
argument_list|)
expr_stmt|;
name|rankingColumn
operator|.
name|setSelected
argument_list|(
name|oldRankingColumn
argument_list|)
expr_stmt|;
name|oldQualityColumn
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_QUALITY
argument_list|)
expr_stmt|;
name|qualityColumn
operator|.
name|setSelected
argument_list|(
name|oldQualityColumn
argument_list|)
expr_stmt|;
name|oldPriorityColumn
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_PRIORITY
argument_list|)
expr_stmt|;
name|priorityColumn
operator|.
name|setSelected
argument_list|(
name|oldPriorityColumn
argument_list|)
expr_stmt|;
name|oldRelevanceColumn
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RELEVANCE
argument_list|)
expr_stmt|;
name|relevanceColumn
operator|.
name|setSelected
argument_list|(
name|oldRelevanceColumn
argument_list|)
expr_stmt|;
name|oldSyncKeyWords
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS
argument_list|)
expr_stmt|;
name|syncKeywords
operator|.
name|setSelected
argument_list|(
name|oldSyncKeyWords
argument_list|)
expr_stmt|;
name|oldWriteSpecialFields
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SERIALIZESPECIALFIELDS
argument_list|)
expr_stmt|;
name|writeSpecialFields
operator|.
name|setSelected
argument_list|(
name|oldWriteSpecialFields
argument_list|)
expr_stmt|;
comment|// has to be called as last to correctly enable/disable the other settings
name|oldSpecialFieldsEnabled
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SPECIALFIELDSENABLED
argument_list|)
expr_stmt|;
name|specialFieldsEnabled
operator|.
name|setSelected
argument_list|(
name|oldSpecialFieldsEnabled
argument_list|)
expr_stmt|;
block|}
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|boolean
name|newSpecialFieldsEnabled
init|=
name|specialFieldsEnabled
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newRankingColumn
init|=
name|rankingColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newQualityColumn
init|=
name|qualityColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newPriorityColumn
init|=
name|priorityColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newRelevanceColumn
init|=
name|relevanceColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newSyncKeyWords
init|=
name|syncKeywords
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newWriteSpecialFields
init|=
name|writeSpecialFields
operator|.
name|isSelected
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|oldSpecialFieldsEnabled
operator|!=
name|newSpecialFieldsEnabled
operator|)
operator|||
operator|(
name|oldRankingColumn
operator|!=
name|newRankingColumn
operator|)
operator|||
operator|(
name|oldQualityColumn
operator|!=
name|newQualityColumn
operator|)
operator|||
operator|(
name|oldPriorityColumn
operator|!=
name|newPriorityColumn
operator|)
operator|||
operator|(
name|oldRelevanceColumn
operator|!=
name|newRelevanceColumn
operator|)
operator|||
operator|(
name|oldSyncKeyWords
operator|!=
name|newSyncKeyWords
operator|)
operator|||
operator|(
name|oldWriteSpecialFields
operator|!=
name|newWriteSpecialFields
operator|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"You have changed settings for special fields."
argument_list|)
operator|.
name|concat
argument_list|(
literal|" "
argument_list|)
operator|.
name|concat
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"You must restart JabRef for this to come into effect."
argument_list|)
argument_list|)
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Changed special field settings"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SPECIALFIELDSENABLED
argument_list|,
name|newSpecialFieldsEnabled
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RANKING
argument_list|,
name|newRankingColumn
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_PRIORITY
argument_list|,
name|newQualityColumn
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_QUALITY
argument_list|,
name|newPriorityColumn
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RELEVANCE
argument_list|,
name|newRelevanceColumn
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS
argument_list|,
name|newSyncKeyWords
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SERIALIZESPECIALFIELDS
argument_list|,
name|newWriteSpecialFields
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|readyToClose ()
specifier|public
name|boolean
name|readyToClose
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Globals
operator|.
name|lang
argument_list|(
literal|"Special Fields"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

