begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *<p>Title:</p>  *<p>Description:</p>  *<p>Copyright: Copyright (c) 2003</p>  *<p>Company:</p>  * @author not attributable  * @version 1.0  */
end_comment

begin_class
DECL|class|SplashScreen
specifier|public
class|class
name|SplashScreen
extends|extends
name|JWindow
block|{
DECL|method|SplashScreen ()
specifier|public
name|SplashScreen
parameter_list|()
block|{
name|ImageIcon
name|image
init|=
literal|null
decl_stmt|;
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|image
argument_list|)
decl_stmt|;
try|try
block|{
name|image
operator|=
operator|new
name|ImageIcon
argument_list|(
name|GUIGlobals
operator|.
name|splashScreenImage
argument_list|)
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
name|image
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|label
operator|=
operator|new
name|JLabel
argument_list|(
literal|"unable to load splash image"
argument_list|)
expr_stmt|;
block|}
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
name|Dimension
name|dim
init|=
name|Toolkit
operator|.
name|getDefaultToolkit
argument_list|()
operator|.
name|getScreenSize
argument_list|()
decl_stmt|;
name|int
name|x
init|=
call|(
name|int
call|)
argument_list|(
name|dim
operator|.
name|getWidth
argument_list|()
operator|-
name|getWidth
argument_list|()
argument_list|)
operator|/
literal|2
decl_stmt|;
name|int
name|y
init|=
call|(
name|int
call|)
argument_list|(
name|dim
operator|.
name|getHeight
argument_list|()
operator|-
name|getHeight
argument_list|()
argument_list|)
operator|/
literal|2
decl_stmt|;
name|setLocation
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

