begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2012 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|specialfields
operator|.
name|SpecialFieldsUtils
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_class
DECL|class|TablePrefsTab
class|class
name|TablePrefsTab
extends|extends
name|JPanel
implements|implements
name|PrefsTab
block|{
DECL|field|_prefs
name|JabRefPreferences
name|_prefs
decl_stmt|;
DECL|field|autoResizeMode
DECL|field|priDesc
DECL|field|secDesc
DECL|field|terDesc
DECL|field|floatMarked
DECL|field|pdfColumn
DECL|field|urlColumn
specifier|private
name|JCheckBox
name|autoResizeMode
decl_stmt|,
name|priDesc
decl_stmt|,
name|secDesc
decl_stmt|,
name|terDesc
decl_stmt|,
name|floatMarked
decl_stmt|,
name|pdfColumn
decl_stmt|,
name|urlColumn
decl_stmt|,
DECL|field|fileColumn
DECL|field|arxivColumn
name|fileColumn
decl_stmt|,
name|arxivColumn
decl_stmt|;
DECL|field|namesAsIs
DECL|field|namesFf
DECL|field|namesFl
DECL|field|namesNatbib
DECL|field|abbrNames
DECL|field|noAbbrNames
specifier|private
name|JRadioButton
name|namesAsIs
decl_stmt|,
name|namesFf
decl_stmt|,
name|namesFl
decl_stmt|,
name|namesNatbib
decl_stmt|,
name|abbrNames
decl_stmt|,
name|noAbbrNames
decl_stmt|,
DECL|field|lastNamesOnly
name|lastNamesOnly
decl_stmt|;
DECL|field|priSort
DECL|field|secSort
DECL|field|terSort
specifier|private
name|JComboBox
name|priSort
decl_stmt|,
name|secSort
decl_stmt|,
name|terSort
decl_stmt|;
comment|/*** begin: special fields ***/
DECL|field|priField
DECL|field|secField
DECL|field|terField
DECL|field|numericFields
specifier|private
name|JTextField
name|priField
decl_stmt|,
name|secField
decl_stmt|,
name|terField
decl_stmt|,
name|numericFields
decl_stmt|;
DECL|field|specialFieldsEnabled
DECL|field|rankingColumn
DECL|field|compactRankingColumn
DECL|field|qualityColumn
DECL|field|priorityColumn
DECL|field|relevanceColumn
specifier|private
name|JCheckBox
name|specialFieldsEnabled
decl_stmt|,
name|rankingColumn
decl_stmt|,
name|compactRankingColumn
decl_stmt|,
name|qualityColumn
decl_stmt|,
name|priorityColumn
decl_stmt|,
name|relevanceColumn
decl_stmt|;
DECL|field|syncKeywords
DECL|field|writeSpecialFields
specifier|private
name|JRadioButton
name|syncKeywords
decl_stmt|,
name|writeSpecialFields
decl_stmt|;
DECL|field|oldSpecialFieldsEnabled
DECL|field|oldRankingColumn
DECL|field|oldCompcatRankingColumn
DECL|field|oldQualityColumn
DECL|field|oldPriorityColumn
DECL|field|oldRelevanceColumn
DECL|field|oldSyncKeyWords
DECL|field|oldWriteSpecialFields
specifier|private
name|boolean
name|oldSpecialFieldsEnabled
decl_stmt|,
name|oldRankingColumn
decl_stmt|,
name|oldCompcatRankingColumn
decl_stmt|,
name|oldQualityColumn
decl_stmt|,
name|oldPriorityColumn
decl_stmt|,
name|oldRelevanceColumn
decl_stmt|,
name|oldSyncKeyWords
decl_stmt|,
name|oldWriteSpecialFields
decl_stmt|;
DECL|field|hlb
specifier|private
specifier|final
name|JButton
name|hlb
decl_stmt|;
comment|/*** end: special fields ***/
comment|/** 	 * Customization of external program paths. 	 *  	 * @param prefs 	 *            a<code>JabRefPreferences</code> value 	 */
DECL|method|TablePrefsTab (JabRefPreferences prefs, JabRefFrame frame)
specifier|public
name|TablePrefsTab
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|,
name|JabRefFrame
name|frame
parameter_list|)
block|{
name|_prefs
operator|=
name|prefs
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
comment|/** 		 * Added Bibtexkey to combobox. 		 *  		 * [ 1540646 ] default sort order: bibtexkey 		 *  		 * http://sourceforge.net/tracker/index.php?func=detail&aid=1540646&group_id=92314&atid=600306 		 */
name|Vector
argument_list|<
name|String
argument_list|>
name|v
init|=
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|BibtexFields
operator|.
name|getAllFieldNames
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|v
operator|.
name|add
argument_list|(
name|BibtexFields
operator|.
name|KEY_FIELD
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|v
argument_list|)
expr_stmt|;
name|Object
index|[]
name|allPlusKey
init|=
name|v
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|priSort
operator|=
operator|new
name|JComboBox
argument_list|(
name|allPlusKey
argument_list|)
expr_stmt|;
name|secSort
operator|=
operator|new
name|JComboBox
argument_list|(
name|allPlusKey
argument_list|)
expr_stmt|;
name|terSort
operator|=
operator|new
name|JComboBox
argument_list|(
name|allPlusKey
argument_list|)
expr_stmt|;
name|autoResizeMode
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Fit table horizontally on screen"
argument_list|)
argument_list|)
expr_stmt|;
name|namesAsIs
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show names unchanged"
argument_list|)
argument_list|)
expr_stmt|;
name|namesFf
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show 'Firstname Lastname'"
argument_list|)
argument_list|)
expr_stmt|;
name|namesFl
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show 'Lastname, Firstname'"
argument_list|)
argument_list|)
expr_stmt|;
name|namesNatbib
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Natbib style"
argument_list|)
argument_list|)
expr_stmt|;
name|noAbbrNames
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Do not abbreviate names"
argument_list|)
argument_list|)
expr_stmt|;
name|abbrNames
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Abbreviate names"
argument_list|)
argument_list|)
expr_stmt|;
name|lastNamesOnly
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show last names only"
argument_list|)
argument_list|)
expr_stmt|;
name|fileColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show file column"
argument_list|)
argument_list|)
expr_stmt|;
name|pdfColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show PDF/PS column"
argument_list|)
argument_list|)
expr_stmt|;
name|urlColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show URL/DOI column"
argument_list|)
argument_list|)
expr_stmt|;
name|arxivColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show ArXiv column"
argument_list|)
argument_list|)
expr_stmt|;
name|floatMarked
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Float marked entries"
argument_list|)
argument_list|)
expr_stmt|;
name|priField
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|secField
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|terField
operator|=
operator|new
name|JTextField
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|numericFields
operator|=
operator|new
name|JTextField
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|priSort
operator|.
name|insertItemAt
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"<select>"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|secSort
operator|.
name|insertItemAt
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"<select>"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|terSort
operator|.
name|insertItemAt
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"<select>"
argument_list|)
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|priSort
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|priSort
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
condition|)
block|{
name|priField
operator|.
name|setText
argument_list|(
name|priSort
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|priSort
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|secSort
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|secSort
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
condition|)
block|{
name|secField
operator|.
name|setText
argument_list|(
name|secSort
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|secSort
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|terSort
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|terSort
operator|.
name|getSelectedIndex
argument_list|()
operator|>
literal|0
condition|)
block|{
name|terField
operator|.
name|setText
argument_list|(
name|terSort
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|terSort
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|ButtonGroup
name|bg
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|namesAsIs
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|namesNatbib
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|namesFf
argument_list|)
expr_stmt|;
name|bg
operator|.
name|add
argument_list|(
name|namesFl
argument_list|)
expr_stmt|;
name|ButtonGroup
name|bg2
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|bg2
operator|.
name|add
argument_list|(
name|lastNamesOnly
argument_list|)
expr_stmt|;
name|bg2
operator|.
name|add
argument_list|(
name|abbrNames
argument_list|)
expr_stmt|;
name|bg2
operator|.
name|add
argument_list|(
name|noAbbrNames
argument_list|)
expr_stmt|;
name|priDesc
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Descending"
argument_list|)
argument_list|)
expr_stmt|;
name|secDesc
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Descending"
argument_list|)
argument_list|)
expr_stmt|;
name|terDesc
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Descending"
argument_list|)
argument_list|)
expr_stmt|;
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"1dlu, 8dlu, left:pref, 4dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, fill:pref"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|JLabel
name|lab
decl_stmt|;
name|JPanel
name|pan
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
comment|/*** begin: special table columns and special fields ***/
name|HelpAction
name|help
init|=
operator|new
name|HelpAction
argument_list|(
name|frame
operator|.
name|helpDiag
argument_list|,
name|GUIGlobals
operator|.
name|specialFieldsHelp
argument_list|,
literal|"Help on key patterns"
argument_list|)
decl_stmt|;
name|hlb
operator|=
operator|new
name|JButton
argument_list|(
name|GUIGlobals
operator|.
name|getImage
argument_list|(
literal|"helpSmall"
argument_list|)
argument_list|)
expr_stmt|;
name|hlb
operator|.
name|setToolTipText
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Help on special fields"
argument_list|)
argument_list|)
expr_stmt|;
name|hlb
operator|.
name|addActionListener
argument_list|(
name|help
argument_list|)
expr_stmt|;
name|specialFieldsEnabled
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Enable special fields"
argument_list|)
argument_list|)
expr_stmt|;
comment|//		.concat(". ").concat(Globals.lang("You must restart JabRef for this to come into effect.")));
name|specialFieldsEnabled
operator|.
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|boolean
name|isEnabled
init|=
name|specialFieldsEnabled
operator|.
name|isSelected
argument_list|()
decl_stmt|;
name|rankingColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|compactRankingColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
condition|?
name|rankingColumn
operator|.
name|isSelected
argument_list|()
else|:
literal|false
argument_list|)
expr_stmt|;
name|qualityColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|priorityColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|relevanceColumn
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|syncKeywords
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
name|writeSpecialFields
operator|.
name|setEnabled
argument_list|(
name|isEnabled
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|rankingColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show ranking"
argument_list|)
argument_list|)
expr_stmt|;
name|rankingColumn
operator|.
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|event
parameter_list|)
block|{
name|compactRankingColumn
operator|.
name|setEnabled
argument_list|(
name|rankingColumn
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|compactRankingColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Compact ranking"
argument_list|)
argument_list|)
expr_stmt|;
name|qualityColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show quality"
argument_list|)
argument_list|)
expr_stmt|;
name|priorityColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show priority"
argument_list|)
argument_list|)
expr_stmt|;
name|relevanceColumn
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show relevance"
argument_list|)
argument_list|)
expr_stmt|;
comment|// "sync keywords" and "write special" fields may be configured mutually exclusive only
comment|// The implementation supports all combinations (TRUE+TRUE and FALSE+FALSE, even if the latter does not make sense)
comment|// To avoid confusion, we opted to make the setting mutually exclusive
name|syncKeywords
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Synchronize with keywords"
argument_list|)
argument_list|)
expr_stmt|;
name|writeSpecialFields
operator|=
operator|new
name|JRadioButton
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Write values of special fields as separate fields to BibTeX"
argument_list|)
argument_list|)
expr_stmt|;
name|ButtonGroup
name|group
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|group
operator|.
name|add
argument_list|(
name|syncKeywords
argument_list|)
expr_stmt|;
name|group
operator|.
name|add
argument_list|(
name|writeSpecialFields
argument_list|)
expr_stmt|;
name|builder
operator|.
name|appendSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Special table columns"
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|pan
argument_list|)
expr_stmt|;
name|DefaultFormBuilder
name|specialTableColumnsBuilder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"8dlu, 8dlu, 8cm, 8dlu, left:pref"
argument_list|,
literal|"pref, pref, pref, pref, pref, pref, pref, pref, pref"
argument_list|)
argument_list|)
decl_stmt|;
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|specialFieldsEnabled
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|rankingColumn
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|compactRankingColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|relevanceColumn
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|4
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|qualityColumn
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|priorityColumn
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|6
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|syncKeywords
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|7
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|writeSpecialFields
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|8
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|hlb
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|9
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|fileColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|5
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|pdfColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|5
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|urlColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|5
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|specialTableColumnsBuilder
operator|.
name|add
argument_list|(
name|arxivColumn
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|5
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|specialTableColumnsBuilder
operator|.
name|getPanel
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
comment|/*** end: special table columns and special fields ***/
name|builder
operator|.
name|appendSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Format of author and editor names"
argument_list|)
argument_list|)
expr_stmt|;
name|DefaultFormBuilder
name|nameBuilder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"left:pref, 8dlu, left:pref"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|nameBuilder
operator|.
name|append
argument_list|(
name|namesAsIs
argument_list|)
expr_stmt|;
name|nameBuilder
operator|.
name|append
argument_list|(
name|noAbbrNames
argument_list|)
expr_stmt|;
name|nameBuilder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|nameBuilder
operator|.
name|append
argument_list|(
name|namesFf
argument_list|)
expr_stmt|;
name|nameBuilder
operator|.
name|append
argument_list|(
name|abbrNames
argument_list|)
expr_stmt|;
name|nameBuilder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|nameBuilder
operator|.
name|append
argument_list|(
name|namesFl
argument_list|)
expr_stmt|;
name|nameBuilder
operator|.
name|append
argument_list|(
name|lastNamesOnly
argument_list|)
expr_stmt|;
name|nameBuilder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|nameBuilder
operator|.
name|append
argument_list|(
name|namesNatbib
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|pan
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|nameBuilder
operator|.
name|getPanel
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
comment|// builder.append(pan); builder.append(noAbbrNames); builder.nextLine();
comment|// builder.append(pan); builder.append(abbrNames); builder.nextLine();
comment|// builder.append(pan); builder.append(lastNamesOnly);
comment|// builder.nextLine();
name|builder
operator|.
name|appendSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Default sort criteria"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create a new panel with its own FormLayout for these items:
name|FormLayout
name|layout2
init|=
operator|new
name|FormLayout
argument_list|(
literal|"left:pref, 8dlu, fill:pref, 4dlu, fill:60dlu, 4dlu, left:pref"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder2
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout2
argument_list|)
decl_stmt|;
name|lab
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Primary sort criterion"
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|lab
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|priSort
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|priField
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|priDesc
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|lab
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Secondary sort criterion"
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|lab
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|secSort
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|secField
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|secDesc
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|lab
operator|=
operator|new
name|JLabel
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Tertiary sort criterion"
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|lab
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|terSort
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|terField
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|terDesc
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|pan
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|builder2
operator|.
name|getPanel
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|pan
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|floatMarked
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|pan
argument_list|)
expr_stmt|;
name|builder2
operator|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"left:pref, 8dlu, fill:pref"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Sort the following fields as numeric fields"
argument_list|)
operator|+
literal|":"
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|numericFields
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|builder2
operator|.
name|getPanel
argument_list|()
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder
operator|.
name|appendSeparator
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"General"
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|pan
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|autoResizeMode
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|pan
operator|=
name|builder
operator|.
name|getPanel
argument_list|()
expr_stmt|;
name|pan
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|pan
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|namesNatbib
operator|.
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|changeEvent
parameter_list|)
block|{
name|abbrNames
operator|.
name|setEnabled
argument_list|(
operator|!
name|namesNatbib
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|lastNamesOnly
operator|.
name|setEnabled
argument_list|(
operator|!
name|namesNatbib
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|noAbbrNames
operator|.
name|setEnabled
argument_list|(
operator|!
name|namesNatbib
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|autoResizeMode
operator|.
name|setSelected
argument_list|(
operator|(
name|_prefs
operator|.
name|getInt
argument_list|(
literal|"autoResizeMode"
argument_list|)
operator|==
name|JTable
operator|.
name|AUTO_RESIZE_ALL_COLUMNS
operator|)
argument_list|)
expr_stmt|;
name|fileColumn
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"fileColumn"
argument_list|)
argument_list|)
expr_stmt|;
name|pdfColumn
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"pdfColumn"
argument_list|)
argument_list|)
expr_stmt|;
name|urlColumn
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"urlColumn"
argument_list|)
argument_list|)
expr_stmt|;
name|fileColumn
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"fileColumn"
argument_list|)
argument_list|)
expr_stmt|;
name|arxivColumn
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"arxivColumn"
argument_list|)
argument_list|)
expr_stmt|;
name|priField
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"priSort"
argument_list|)
argument_list|)
expr_stmt|;
name|secField
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"secSort"
argument_list|)
argument_list|)
expr_stmt|;
name|terField
operator|.
name|setText
argument_list|(
name|_prefs
operator|.
name|get
argument_list|(
literal|"terSort"
argument_list|)
argument_list|)
expr_stmt|;
name|priSort
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|secSort
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|terSort
operator|.
name|setSelectedIndex
argument_list|(
literal|0
argument_list|)
expr_stmt|;
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"namesAsIs"
argument_list|)
condition|)
name|namesAsIs
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"namesFf"
argument_list|)
condition|)
name|namesFf
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"namesNatbib"
argument_list|)
condition|)
name|namesNatbib
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|namesFl
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"abbrAuthorNames"
argument_list|)
condition|)
name|abbrNames
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
elseif|else
if|if
condition|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"namesLastOnly"
argument_list|)
condition|)
name|lastNamesOnly
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
else|else
name|noAbbrNames
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|priDesc
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"priDescending"
argument_list|)
argument_list|)
expr_stmt|;
name|secDesc
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"secDescending"
argument_list|)
argument_list|)
expr_stmt|;
name|terDesc
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"terDescending"
argument_list|)
argument_list|)
expr_stmt|;
name|floatMarked
operator|.
name|setSelected
argument_list|(
name|_prefs
operator|.
name|getBoolean
argument_list|(
literal|"floatMarkedEntries"
argument_list|)
argument_list|)
expr_stmt|;
name|abbrNames
operator|.
name|setEnabled
argument_list|(
operator|!
name|namesNatbib
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|lastNamesOnly
operator|.
name|setEnabled
argument_list|(
operator|!
name|namesNatbib
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|noAbbrNames
operator|.
name|setEnabled
argument_list|(
operator|!
name|namesNatbib
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|numF
init|=
name|_prefs
operator|.
name|get
argument_list|(
literal|"numericFields"
argument_list|)
decl_stmt|;
if|if
condition|(
name|numF
operator|==
literal|null
condition|)
name|numericFields
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
else|else
name|numericFields
operator|.
name|setText
argument_list|(
name|numF
argument_list|)
expr_stmt|;
comment|/*** begin: special fields ***/
name|oldRankingColumn
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RANKING
argument_list|)
expr_stmt|;
name|rankingColumn
operator|.
name|setSelected
argument_list|(
name|oldRankingColumn
argument_list|)
expr_stmt|;
name|oldCompcatRankingColumn
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_RANKING_COMPACT
argument_list|)
expr_stmt|;
name|compactRankingColumn
operator|.
name|setSelected
argument_list|(
name|oldCompcatRankingColumn
argument_list|)
expr_stmt|;
name|oldQualityColumn
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_QUALITY
argument_list|)
expr_stmt|;
name|qualityColumn
operator|.
name|setSelected
argument_list|(
name|oldQualityColumn
argument_list|)
expr_stmt|;
name|oldPriorityColumn
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_PRIORITY
argument_list|)
expr_stmt|;
name|priorityColumn
operator|.
name|setSelected
argument_list|(
name|oldPriorityColumn
argument_list|)
expr_stmt|;
name|oldRelevanceColumn
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RELEVANCE
argument_list|)
expr_stmt|;
name|relevanceColumn
operator|.
name|setSelected
argument_list|(
name|oldRelevanceColumn
argument_list|)
expr_stmt|;
name|oldSyncKeyWords
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS
argument_list|)
expr_stmt|;
name|syncKeywords
operator|.
name|setSelected
argument_list|(
name|oldSyncKeyWords
argument_list|)
expr_stmt|;
name|oldWriteSpecialFields
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SERIALIZESPECIALFIELDS
argument_list|)
expr_stmt|;
name|writeSpecialFields
operator|.
name|setSelected
argument_list|(
name|oldWriteSpecialFields
argument_list|)
expr_stmt|;
comment|// has to be called as last to correctly enable/disable the other settings
name|oldSpecialFieldsEnabled
operator|=
name|_prefs
operator|.
name|getBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SPECIALFIELDSENABLED
argument_list|)
expr_stmt|;
name|specialFieldsEnabled
operator|.
name|setSelected
argument_list|(
name|oldSpecialFieldsEnabled
argument_list|)
expr_stmt|;
comment|/*** end: special fields ***/
block|}
comment|/** 	 * Store changes to table preferences. This method is called when the user 	 * clicks Ok. 	 *  	 */
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"namesAsIs"
argument_list|,
name|namesAsIs
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"namesFf"
argument_list|,
name|namesFf
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"namesNatbib"
argument_list|,
name|namesNatbib
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"namesLastOnly"
argument_list|,
name|lastNamesOnly
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"abbrAuthorNames"
argument_list|,
name|abbrNames
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"fileColumn"
argument_list|,
name|fileColumn
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"pdfColumn"
argument_list|,
name|pdfColumn
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"urlColumn"
argument_list|,
name|urlColumn
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"arxivColumn"
argument_list|,
name|arxivColumn
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putInt
argument_list|(
literal|"autoResizeMode"
argument_list|,
name|autoResizeMode
operator|.
name|isSelected
argument_list|()
condition|?
name|JTable
operator|.
name|AUTO_RESIZE_ALL_COLUMNS
else|:
name|JTable
operator|.
name|AUTO_RESIZE_OFF
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"priDescending"
argument_list|,
name|priDesc
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"secDescending"
argument_list|,
name|secDesc
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"terDescending"
argument_list|,
name|terDesc
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
comment|// _prefs.put("secSort",
comment|// GUIGlobals.ALL_FIELDS[secSort.getSelectedIndex()]);
comment|// _prefs.put("terSort",
comment|// GUIGlobals.ALL_FIELDS[terSort.getSelectedIndex()]);
name|_prefs
operator|.
name|put
argument_list|(
literal|"priSort"
argument_list|,
name|priField
operator|.
name|getText
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"secSort"
argument_list|,
name|secField
operator|.
name|getText
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|put
argument_list|(
literal|"terSort"
argument_list|,
name|terField
operator|.
name|getText
argument_list|()
operator|.
name|toLowerCase
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
literal|"floatMarkedEntries"
argument_list|,
name|floatMarked
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
comment|// updatefont
name|String
name|oldVal
init|=
name|_prefs
operator|.
name|get
argument_list|(
literal|"numericFields"
argument_list|)
decl_stmt|;
name|String
name|newVal
init|=
name|numericFields
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
name|newVal
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
name|newVal
operator|=
literal|null
expr_stmt|;
if|if
condition|(
operator|(
operator|(
name|newVal
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|oldVal
operator|==
literal|null
operator|)
operator|)
operator|||
operator|(
operator|(
name|newVal
operator|==
literal|null
operator|)
operator|&&
operator|(
name|oldVal
operator|!=
literal|null
operator|)
operator|)
operator|||
operator|(
operator|(
name|newVal
operator|!=
literal|null
operator|)
operator|&&
operator|!
name|newVal
operator|.
name|equals
argument_list|(
name|oldVal
argument_list|)
operator|)
condition|)
block|{
name|_prefs
operator|.
name|put
argument_list|(
literal|"numericFields"
argument_list|,
name|newVal
argument_list|)
expr_stmt|;
name|BibtexFields
operator|.
name|setNumericFieldsFromPrefs
argument_list|()
expr_stmt|;
block|}
comment|/*** begin: special fields ***/
name|boolean
name|newSpecialFieldsEnabled
init|=
name|specialFieldsEnabled
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newRankingColumn
init|=
name|rankingColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newCompactRankingColumn
init|=
name|compactRankingColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newQualityColumn
init|=
name|qualityColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newPriorityColumn
init|=
name|priorityColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newRelevanceColumn
init|=
name|relevanceColumn
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newSyncKeyWords
init|=
name|syncKeywords
operator|.
name|isSelected
argument_list|()
decl_stmt|,
name|newWriteSpecialFields
init|=
name|writeSpecialFields
operator|.
name|isSelected
argument_list|()
decl_stmt|;
name|boolean
name|restartRequired
init|=
literal|false
decl_stmt|;
name|restartRequired
operator|=
operator|(
name|oldSpecialFieldsEnabled
operator|!=
name|newSpecialFieldsEnabled
operator|)
operator|||
operator|(
name|oldRankingColumn
operator|!=
name|newRankingColumn
operator|)
operator|||
operator|(
name|oldCompcatRankingColumn
operator|!=
name|newCompactRankingColumn
operator|)
operator|||
operator|(
name|oldQualityColumn
operator|!=
name|newQualityColumn
operator|)
operator|||
operator|(
name|oldPriorityColumn
operator|!=
name|newPriorityColumn
operator|)
operator|||
operator|(
name|oldRelevanceColumn
operator|!=
name|newRelevanceColumn
operator|)
expr_stmt|;
if|if
condition|(
name|restartRequired
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"You have changed settings for special fields."
argument_list|)
operator|.
name|concat
argument_list|(
literal|" "
argument_list|)
operator|.
name|concat
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"You must restart JabRef for this to come into effect."
argument_list|)
argument_list|)
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Changed special field settings"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
block|}
comment|// restart required implies that the settings have been changed
comment|// the seetings need to be stored
if|if
condition|(
name|restartRequired
operator|||
operator|(
name|oldSyncKeyWords
operator|!=
name|newSyncKeyWords
operator|)
operator|||
operator|(
name|oldWriteSpecialFields
operator|!=
name|newWriteSpecialFields
operator|)
condition|)
block|{
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SPECIALFIELDSENABLED
argument_list|,
name|newSpecialFieldsEnabled
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RANKING
argument_list|,
name|newRankingColumn
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_RANKING_COMPACT
argument_list|,
name|newCompactRankingColumn
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_PRIORITY
argument_list|,
name|newPriorityColumn
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_QUALITY
argument_list|,
name|newQualityColumn
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SHOWCOLUMN_RELEVANCE
argument_list|,
name|newRelevanceColumn
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_AUTOSYNCSPECIALFIELDSTOKEYWORDS
argument_list|,
name|newSyncKeyWords
argument_list|)
expr_stmt|;
name|_prefs
operator|.
name|putBoolean
argument_list|(
name|SpecialFieldsUtils
operator|.
name|PREF_SERIALIZESPECIALFIELDS
argument_list|,
name|newWriteSpecialFields
argument_list|)
expr_stmt|;
block|}
comment|/*** end: special fields ***/
block|}
DECL|method|readyToClose ()
specifier|public
name|boolean
name|readyToClose
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Globals
operator|.
name|lang
argument_list|(
literal|"Entry table"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

