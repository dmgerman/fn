begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|spl
package|package
name|spl
package|;
end_package

begin_import
import|import
name|org
operator|.
name|sciplore
operator|.
name|xml
operator|.
name|XmlAuthor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|sciplore
operator|.
name|xml
operator|.
name|XmlDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|sciplore
operator|.
name|xml
operator|.
name|XmlDocuments
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_comment
comment|/**  * Created by IntelliJ IDEA.  * User: Christoph Arbeit  * Date: 09.09.2010  * Time: 10:56:50  * To change this template use File | Settings | File Templates.  */
end_comment

begin_class
DECL|class|DocumentsWrapper
specifier|public
class|class
name|DocumentsWrapper
block|{
DECL|field|xmlDocuments
name|XmlDocuments
name|xmlDocuments
decl_stmt|;
DECL|method|DocumentsWrapper (XmlDocuments documents)
specifier|public
name|DocumentsWrapper
parameter_list|(
name|XmlDocuments
name|documents
parameter_list|)
block|{
name|this
operator|.
name|xmlDocuments
operator|=
name|documents
expr_stmt|;
block|}
DECL|method|getXmlDocuments ()
specifier|public
name|XmlDocuments
name|getXmlDocuments
parameter_list|()
block|{
return|return
name|xmlDocuments
return|;
block|}
DECL|method|setXmlDocuments (XmlDocuments xmlDocuments)
specifier|public
name|void
name|setXmlDocuments
parameter_list|(
name|XmlDocuments
name|xmlDocuments
parameter_list|)
block|{
name|this
operator|.
name|xmlDocuments
operator|=
name|xmlDocuments
expr_stmt|;
block|}
DECL|method|getDocuments ()
specifier|public
name|List
argument_list|<
name|Vector
argument_list|>
name|getDocuments
parameter_list|()
block|{
name|List
argument_list|<
name|Vector
argument_list|>
name|documents
init|=
operator|new
name|ArrayList
argument_list|<
name|Vector
argument_list|>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|XmlDocument
argument_list|>
name|xmlDocuments
init|=
name|this
operator|.
name|xmlDocuments
operator|.
name|getDocuments
argument_list|()
decl_stmt|;
for|for
control|(
name|XmlDocument
name|xmlDocument
range|:
name|xmlDocuments
control|)
block|{
name|Vector
argument_list|<
name|String
argument_list|>
name|vector
init|=
operator|new
name|Vector
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
if|if
condition|(
name|xmlDocument
operator|.
name|getTitle
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|vector
operator|.
name|add
argument_list|(
name|xmlDocument
operator|.
name|getTitle
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|vector
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|xmlDocument
operator|.
name|getAuthors
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|XmlAuthor
argument_list|>
name|authors
init|=
name|xmlDocument
operator|.
name|getAuthors
argument_list|()
operator|.
name|getAuthors
argument_list|()
decl_stmt|;
name|String
name|value
init|=
literal|""
decl_stmt|;
name|int
name|i
init|=
literal|1
decl_stmt|;
for|for
control|(
name|XmlAuthor
name|author
range|:
name|authors
control|)
block|{
if|if
condition|(
name|i
operator|<
name|authors
operator|.
name|size
argument_list|()
condition|)
block|{
name|value
operator|=
name|value
operator|+
name|author
operator|.
name|getNameComplete
argument_list|()
expr_stmt|;
name|value
operator|=
name|value
operator|+
literal|", "
expr_stmt|;
block|}
else|else
block|{
name|value
operator|=
name|value
operator|+
name|author
operator|.
name|getNameComplete
argument_list|()
expr_stmt|;
block|}
name|i
operator|++
expr_stmt|;
block|}
name|vector
operator|.
name|add
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|vector
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|xmlDocument
operator|.
name|getPublishdate
argument_list|()
operator|!=
literal|null
operator|&&
name|xmlDocument
operator|.
name|getPublishdate
argument_list|()
operator|.
name|getYear
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|xmlDocument
operator|.
name|getPublishdate
argument_list|()
operator|.
name|getYear
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"null"
argument_list|)
condition|)
block|{
name|vector
operator|.
name|add
argument_list|(
name|xmlDocument
operator|.
name|getPublishdate
argument_list|()
operator|.
name|getYear
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|vector
operator|.
name|add
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|documents
operator|.
name|add
argument_list|(
name|vector
argument_list|)
expr_stmt|;
block|}
return|return
name|documents
return|;
block|}
block|}
end_class

end_unit

