begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|tests.net.sf.jabref.labelPattern
package|package
name|tests
operator|.
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|labelPattern
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|imports
operator|.
name|BibtexParser
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|labelPattern
operator|.
name|LabelPatternUtil
import|;
end_import

begin_class
DECL|class|LabelPatternUtilTest
specifier|public
class|class
name|LabelPatternUtilTest
extends|extends
name|TestCase
block|{
comment|/**      * Test for https://sourceforge.net/forum/message.php?msg_id=4498555      */
DECL|method|testMakeLabel ()
specifier|public
name|void
name|testMakeLabel
parameter_list|()
block|{
name|BibtexEntry
name|entry
init|=
name|BibtexParser
operator|.
name|singleFromString
argument_list|(
literal|"@ARTICLE{kohn, author={Andreas K{\\\"o}ning}, year={2000}}"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Kon"
argument_list|,
name|LabelPatternUtil
operator|.
name|makeLabel
argument_list|(
name|entry
argument_list|,
literal|"auth3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|testFirstAuthor ()
specifier|public
name|void
name|testFirstAuthor
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"Newton"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstAuthor
argument_list|(
literal|"I. Newton and J. Maxwell and A. Einstein and N. Bohr and Harry Unknown"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Newton"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstAuthor
argument_list|(
literal|"I. Newton"
argument_list|)
argument_list|)
expr_stmt|;
comment|// https://sourceforge.net/forum/message.php?msg_id=4498555
name|assertEquals
argument_list|(
literal|"K{\\\"o}ning"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstAuthor
argument_list|(
literal|"K{\\\"o}ning"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|LabelPatternUtil
operator|.
name|firstAuthor
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|LabelPatternUtil
operator|.
name|firstAuthor
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{          }
block|}
DECL|method|testAuthIniN ()
specifier|public
name|void
name|testAuthIniN
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"NMEB"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton and J. Maxwell and A. Einstein and N. Bohr and Harry Unknown"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NMEB"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton and J. Maxwell and A. Einstein and N. Bohr"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NeME"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton and J. Maxwell and A. Einstein"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NeMa"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton and J. Maxwell"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Newt"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton"
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"N"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton"
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton"
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Newton"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton"
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Newton"
argument_list|,
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|"I. Newton"
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|LabelPatternUtil
operator|.
name|authIniN
argument_list|(
literal|null
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{          }
block|}
DECL|method|testFirstPage ()
specifier|public
name|void
name|testFirstPage
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"7"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|"7--27"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"27"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|"--27"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"42"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|"42--111"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"7"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|"7,41,73--97"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"7"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|"41,7,73--97"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"43"
argument_list|,
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|"43+"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|LabelPatternUtil
operator|.
name|firstPage
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{          }
block|}
DECL|method|testLastPage ()
specifier|public
name|void
name|testLastPage
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"27"
argument_list|,
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|"7--27"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"27"
argument_list|,
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|"--27"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"111"
argument_list|,
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|"42--111"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"97"
argument_list|,
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|"7,41,73--97"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"97"
argument_list|,
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|"7,41,97--73"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"43"
argument_list|,
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|"43+"
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|LabelPatternUtil
operator|.
name|lastPage
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|fail
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NullPointerException
name|e
parameter_list|)
block|{          }
block|}
block|}
end_class

end_unit

