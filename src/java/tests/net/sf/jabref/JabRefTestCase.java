begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|tests.net.sf.jabref
package|package
name|tests
operator|.
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_class
DECL|class|JabRefTestCase
specifier|public
class|class
name|JabRefTestCase
extends|extends
name|TestCase
block|{
DECL|method|assertEquals (BibtexEntry e, BibtexEntry x)
specifier|public
name|void
name|assertEquals
parameter_list|(
name|BibtexEntry
name|e
parameter_list|,
name|BibtexEntry
name|x
parameter_list|)
block|{
name|assertEquals
argument_list|(
name|e
operator|.
name|getCiteKey
argument_list|()
argument_list|,
name|x
operator|.
name|getCiteKey
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|e
operator|.
name|getType
argument_list|()
argument_list|,
name|x
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|o
init|=
name|e
operator|.
name|getAllFields
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|o
operator|.
name|length
argument_list|,
name|x
operator|.
name|getAllFields
argument_list|()
operator|.
name|length
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|o
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|assertEquals
argument_list|(
name|e
operator|.
name|getField
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|x
operator|.
name|getField
argument_list|(
name|o
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|testVoid ()
specifier|public
name|void
name|testVoid
parameter_list|()
block|{
comment|// to remove warning
block|}
block|}
end_class

end_unit

