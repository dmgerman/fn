begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|gnu
operator|.
name|dtools
operator|.
name|ritopt
operator|.
name|BooleanOption
import|;
end_import

begin_import
import|import
name|gnu
operator|.
name|dtools
operator|.
name|ritopt
operator|.
name|Options
import|;
end_import

begin_import
import|import
name|gnu
operator|.
name|dtools
operator|.
name|ritopt
operator|.
name|StringOption
import|;
end_import

begin_class
DECL|class|JabRefCLI
specifier|public
class|class
name|JabRefCLI
block|{
DECL|field|exportMatchesSyntax
specifier|public
specifier|final
specifier|static
name|String
name|exportMatchesSyntax
init|=
literal|"["
operator|.
name|concat
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"field"
argument_list|)
argument_list|)
operator|.
name|concat
argument_list|(
literal|"]"
argument_list|)
operator|.
name|concat
argument_list|(
literal|"searchTerm"
argument_list|)
operator|.
name|concat
argument_list|(
literal|","
argument_list|)
operator|.
name|concat
argument_list|(
literal|"outputFile"
argument_list|)
operator|.
name|concat
argument_list|(
literal|": "
argument_list|)
operator|.
name|concat
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"file"
argument_list|)
argument_list|)
operator|.
name|concat
argument_list|(
literal|"[,"
argument_list|)
operator|.
name|concat
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"exportFormat"
argument_list|)
argument_list|)
operator|.
name|concat
argument_list|(
literal|"]"
argument_list|)
decl_stmt|;
DECL|field|importFile
DECL|field|exportFile
DECL|field|exportPrefs
DECL|field|importPrefs
DECL|field|auxImExport
DECL|field|importToOpenBase
specifier|public
specifier|final
name|StringOption
name|importFile
decl_stmt|,
name|exportFile
decl_stmt|,
name|exportPrefs
decl_stmt|,
name|importPrefs
decl_stmt|,
name|auxImExport
decl_stmt|,
name|importToOpenBase
decl_stmt|,
DECL|field|fetcherEngine
DECL|field|exportMatches
DECL|field|defPrefs
name|fetcherEngine
decl_stmt|,
name|exportMatches
decl_stmt|,
name|defPrefs
decl_stmt|;
DECL|field|helpO
DECL|field|disableGui
DECL|field|blank
DECL|field|loadSess
DECL|field|showVersion
DECL|field|disableSplash
specifier|public
specifier|final
name|BooleanOption
name|helpO
decl_stmt|,
name|disableGui
decl_stmt|,
name|blank
decl_stmt|,
name|loadSess
decl_stmt|,
name|showVersion
decl_stmt|,
name|disableSplash
decl_stmt|;
DECL|field|options
specifier|public
specifier|final
name|Options
name|options
decl_stmt|;
DECL|field|leftOver
specifier|private
name|String
index|[]
name|leftOver
decl_stmt|;
DECL|method|isHelp ()
specifier|public
name|boolean
name|isHelp
parameter_list|()
block|{
return|return
name|helpO
operator|.
name|isInvoked
argument_list|()
return|;
block|}
DECL|method|isShowVersion ()
specifier|public
name|boolean
name|isShowVersion
parameter_list|()
block|{
return|return
name|showVersion
operator|.
name|isInvoked
argument_list|()
return|;
block|}
DECL|method|isDisableSplash ()
specifier|public
name|boolean
name|isDisableSplash
parameter_list|()
block|{
return|return
name|disableSplash
operator|.
name|isInvoked
argument_list|()
return|;
block|}
DECL|method|isBlank ()
specifier|public
name|boolean
name|isBlank
parameter_list|()
block|{
return|return
name|blank
operator|.
name|isInvoked
argument_list|()
return|;
block|}
DECL|method|isLoadSession ()
specifier|public
name|boolean
name|isLoadSession
parameter_list|()
block|{
return|return
name|loadSess
operator|.
name|isInvoked
argument_list|()
return|;
block|}
DECL|method|isDisableGui ()
specifier|public
name|boolean
name|isDisableGui
parameter_list|()
block|{
return|return
name|disableGui
operator|.
name|isInvoked
argument_list|()
return|;
block|}
DECL|method|getHelp ()
specifier|public
name|String
name|getHelp
parameter_list|()
block|{
return|return
name|options
operator|.
name|getHelp
argument_list|()
return|;
block|}
DECL|method|JabRefCLI (String[] args)
specifier|public
name|JabRefCLI
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|importFile
operator|=
operator|new
name|StringOption
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|exportFile
operator|=
operator|new
name|StringOption
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|helpO
operator|=
operator|new
name|BooleanOption
argument_list|()
expr_stmt|;
name|disableGui
operator|=
operator|new
name|BooleanOption
argument_list|()
expr_stmt|;
name|disableSplash
operator|=
operator|new
name|BooleanOption
argument_list|()
expr_stmt|;
name|blank
operator|=
operator|new
name|BooleanOption
argument_list|()
expr_stmt|;
name|loadSess
operator|=
operator|new
name|BooleanOption
argument_list|()
expr_stmt|;
name|showVersion
operator|=
operator|new
name|BooleanOption
argument_list|()
expr_stmt|;
name|exportPrefs
operator|=
operator|new
name|StringOption
argument_list|(
literal|"jabref_prefs.xml"
argument_list|)
expr_stmt|;
name|importPrefs
operator|=
operator|new
name|StringOption
argument_list|(
literal|"jabref_prefs.xml"
argument_list|)
expr_stmt|;
name|defPrefs
operator|=
operator|new
name|StringOption
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|auxImExport
operator|=
operator|new
name|StringOption
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|importToOpenBase
operator|=
operator|new
name|StringOption
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|fetcherEngine
operator|=
operator|new
name|StringOption
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|exportMatches
operator|=
operator|new
name|StringOption
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|options
operator|=
operator|new
name|Options
argument_list|(
literal|"JabRef "
argument_list|)
expr_stmt|;
name|options
operator|.
name|setVersion
argument_list|(
name|GUIGlobals
operator|.
name|version
argument_list|)
expr_stmt|;
name|importFile
operator|.
name|setDescription
argument_list|(
literal|"imopoepuoeu"
argument_list|)
expr_stmt|;
comment|//Globals.lang);
name|options
operator|.
name|register
argument_list|(
literal|"version"
argument_list|,
literal|'v'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Display version"
argument_list|)
argument_list|,
name|showVersion
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"nogui"
argument_list|,
literal|'n'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"No GUI. Only process command line options."
argument_list|)
argument_list|,
name|disableGui
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"nosplash"
argument_list|,
literal|'s'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Do not show splash window at startup"
argument_list|)
argument_list|,
name|disableSplash
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"import"
argument_list|,
literal|'i'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Import file"
argument_list|)
operator|+
literal|": "
operator|+
name|Globals
operator|.
name|lang
argument_list|(
literal|"filename"
argument_list|)
operator|+
literal|"[,import format]"
argument_list|,
name|importFile
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"output"
argument_list|,
literal|'o'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Output or export file"
argument_list|)
operator|+
literal|": "
operator|+
name|Globals
operator|.
name|lang
argument_list|(
literal|"filename"
argument_list|)
operator|+
literal|"[,export format]"
argument_list|,
name|exportFile
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"help"
argument_list|,
literal|'h'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Display help on command line options"
argument_list|)
argument_list|,
name|helpO
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"loads"
argument_list|,
literal|'l'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Load session"
argument_list|)
argument_list|,
name|loadSess
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"prexp"
argument_list|,
literal|'x'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Export preferences to file"
argument_list|)
argument_list|,
name|exportPrefs
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"primp"
argument_list|,
literal|'p'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Import preferences from file"
argument_list|)
argument_list|,
name|importPrefs
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"prdef"
argument_list|,
literal|'d'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Reset preferences (key1,key2,... or 'all')"
argument_list|)
argument_list|,
name|defPrefs
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"aux"
argument_list|,
literal|'a'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Subdatabase from aux"
argument_list|)
operator|+
literal|": "
operator|+
name|Globals
operator|.
name|lang
argument_list|(
literal|"file"
argument_list|)
operator|+
literal|"[.aux]"
operator|+
literal|","
operator|+
name|Globals
operator|.
name|lang
argument_list|(
literal|"new"
argument_list|)
operator|+
literal|"[.bib]"
argument_list|,
name|auxImExport
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"blank"
argument_list|,
literal|'b'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Do not open any files at startup"
argument_list|)
argument_list|,
name|blank
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"importToOpen"
argument_list|,
literal|'\0'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Import to open tab"
argument_list|)
argument_list|,
name|importToOpenBase
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"fetch"
argument_list|,
literal|'f'
argument_list|,
name|Globals
operator|.
name|lang
argument_list|(
literal|"Run Fetcher, e.g. \"--fetch=Medline:cancer\""
argument_list|)
argument_list|,
name|fetcherEngine
argument_list|)
expr_stmt|;
name|options
operator|.
name|register
argument_list|(
literal|"exportMatches"
argument_list|,
literal|'m'
argument_list|,
name|exportMatchesSyntax
argument_list|,
name|exportMatches
argument_list|)
expr_stmt|;
name|options
operator|.
name|setUseMenu
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|parse
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
DECL|method|parse (String[] args)
specifier|private
name|void
name|parse
parameter_list|(
name|String
index|[]
name|args
parameter_list|)
block|{
name|leftOver
operator|=
name|options
operator|.
name|process
argument_list|(
name|args
argument_list|)
expr_stmt|;
block|}
DECL|method|getLeftOver ()
specifier|public
name|String
index|[]
name|getLeftOver
parameter_list|()
block|{
return|return
name|leftOver
return|;
block|}
block|}
end_class

end_unit

