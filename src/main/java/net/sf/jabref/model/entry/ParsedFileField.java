begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.model.entry
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|ParsedFileField
specifier|public
class|class
name|ParsedFileField
block|{
DECL|field|NULL_OBJECT
specifier|private
specifier|static
specifier|final
name|ParsedFileField
name|NULL_OBJECT
init|=
operator|new
name|ParsedFileField
argument_list|(
literal|""
argument_list|,
literal|""
argument_list|,
literal|""
argument_list|)
decl_stmt|;
DECL|field|description
specifier|private
specifier|final
name|String
name|description
decl_stmt|;
DECL|field|link
specifier|private
specifier|final
name|String
name|link
decl_stmt|;
DECL|field|fileType
specifier|private
specifier|final
name|String
name|fileType
decl_stmt|;
DECL|method|ParsedFileField (String description, String link, String fileType)
specifier|public
name|ParsedFileField
parameter_list|(
name|String
name|description
parameter_list|,
name|String
name|link
parameter_list|,
name|String
name|fileType
parameter_list|)
block|{
name|this
operator|.
name|description
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|description
argument_list|)
expr_stmt|;
name|this
operator|.
name|link
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|link
argument_list|)
expr_stmt|;
name|this
operator|.
name|fileType
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|fileType
argument_list|)
expr_stmt|;
block|}
DECL|method|getFileType ()
specifier|public
name|String
name|getFileType
parameter_list|()
block|{
return|return
name|fileType
return|;
block|}
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|description
return|;
block|}
DECL|method|getLink ()
specifier|public
name|String
name|getLink
parameter_list|()
block|{
return|return
name|link
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|instanceof
name|ParsedFileField
condition|)
block|{
name|ParsedFileField
name|that
init|=
operator|(
name|ParsedFileField
operator|)
name|o
decl_stmt|;
if|if
condition|(
operator|!
name|this
operator|.
name|description
operator|.
name|equals
argument_list|(
name|that
operator|.
name|description
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|this
operator|.
name|link
operator|.
name|equals
argument_list|(
name|that
operator|.
name|link
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|this
operator|.
name|fileType
operator|.
name|equals
argument_list|(
name|that
operator|.
name|fileType
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|description
argument_list|,
name|link
argument_list|,
name|fileType
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"ParsedFileField{"
operator|+
literal|"description='"
operator|+
name|description
operator|+
literal|'\''
operator|+
literal|", link='"
operator|+
name|link
operator|+
literal|'\''
operator|+
literal|", fileType='"
operator|+
name|fileType
operator|+
literal|'\''
operator|+
literal|'}'
return|;
block|}
DECL|method|isEmpty ()
specifier|public
name|boolean
name|isEmpty
parameter_list|()
block|{
return|return
name|NULL_OBJECT
operator|.
name|equals
argument_list|(
name|this
argument_list|)
return|;
block|}
block|}
end_class

end_unit

