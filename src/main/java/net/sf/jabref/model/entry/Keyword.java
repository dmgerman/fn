begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.model.entry
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|ChainNode
import|;
end_import

begin_comment
comment|/**  * Represents a keyword in a chain of keywords.  * For example, "JabRef" in "Bibliographic manager> Awesome ones> JabRef"  */
end_comment

begin_class
DECL|class|Keyword
specifier|public
class|class
name|Keyword
extends|extends
name|ChainNode
argument_list|<
name|Keyword
argument_list|>
implements|implements
name|Comparable
argument_list|<
name|Keyword
argument_list|>
block|{
DECL|field|keyword
specifier|private
specifier|final
name|String
name|keyword
decl_stmt|;
DECL|method|Keyword (String keyword)
specifier|public
name|Keyword
parameter_list|(
name|String
name|keyword
parameter_list|)
block|{
name|super
argument_list|(
name|Keyword
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|keyword
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|keyword
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|keyword
argument_list|,
operator|(
operator|(
name|Keyword
operator|)
name|o
operator|)
operator|.
name|keyword
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|keyword
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|keyword
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (Keyword o)
specifier|public
name|int
name|compareTo
parameter_list|(
name|Keyword
name|o
parameter_list|)
block|{
return|return
name|keyword
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|keyword
argument_list|)
return|;
block|}
block|}
end_class

end_unit

