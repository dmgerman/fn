begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.model.groups
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|groups
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|PatternSyntaxException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_comment
comment|/**  * Matches entries if the content of a given field is matched by a regular expression.  */
end_comment

begin_class
DECL|class|RegexKeywordGroup
specifier|public
class|class
name|RegexKeywordGroup
extends|extends
name|KeywordGroup
block|{
DECL|field|pattern
specifier|private
name|Pattern
name|pattern
decl_stmt|;
DECL|method|compilePattern (String searchExpression, boolean caseSensitive)
specifier|private
specifier|static
name|Pattern
name|compilePattern
parameter_list|(
name|String
name|searchExpression
parameter_list|,
name|boolean
name|caseSensitive
parameter_list|)
throws|throws
name|IllegalArgumentException
block|{
try|try
block|{
return|return
name|caseSensitive
condition|?
name|Pattern
operator|.
name|compile
argument_list|(
literal|"\\b"
operator|+
name|searchExpression
operator|+
literal|"\\b"
argument_list|)
else|:
name|Pattern
operator|.
name|compile
argument_list|(
literal|"\\b"
operator|+
name|searchExpression
operator|+
literal|"\\b"
argument_list|,
name|Pattern
operator|.
name|CASE_INSENSITIVE
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|PatternSyntaxException
name|exception
parameter_list|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Syntax error in regular-expression pattern: "
operator|+
name|searchExpression
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
DECL|method|contains (BibEntry entry)
specifier|public
name|boolean
name|contains
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|Optional
argument_list|<
name|String
argument_list|>
name|content
init|=
name|entry
operator|.
name|getField
argument_list|(
name|searchField
argument_list|)
decl_stmt|;
return|return
name|content
operator|.
name|map
argument_list|(
name|value
lambda|->
name|pattern
operator|.
name|matcher
argument_list|(
name|value
argument_list|)
operator|.
name|find
argument_list|()
argument_list|)
operator|.
name|orElse
argument_list|(
literal|false
argument_list|)
return|;
block|}
block|}
end_class

end_unit

