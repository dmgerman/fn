begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2016 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.model.database
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
DECL|class|EntrySorter
specifier|public
class|class
name|EntrySorter
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|EntrySorter
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// guarded by itself
DECL|field|entries
specifier|private
specifier|final
name|List
argument_list|<
name|BibEntry
argument_list|>
name|entries
decl_stmt|;
DECL|field|comp
specifier|private
specifier|final
name|Comparator
argument_list|<
name|BibEntry
argument_list|>
name|comp
decl_stmt|;
DECL|method|EntrySorter (List<BibEntry> entries, Comparator<BibEntry> comparator)
specifier|public
name|EntrySorter
parameter_list|(
name|List
argument_list|<
name|BibEntry
argument_list|>
name|entries
parameter_list|,
name|Comparator
argument_list|<
name|BibEntry
argument_list|>
name|comparator
parameter_list|)
block|{
name|this
operator|.
name|entries
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|entries
argument_list|)
expr_stmt|;
name|this
operator|.
name|comp
operator|=
name|comparator
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|this
operator|.
name|entries
argument_list|,
name|comparator
argument_list|)
expr_stmt|;
block|}
DECL|method|getEntryAt (int pos)
specifier|public
name|BibEntry
name|getEntryAt
parameter_list|(
name|int
name|pos
parameter_list|)
block|{
return|return
name|entries
operator|.
name|get
argument_list|(
name|pos
argument_list|)
return|;
block|}
DECL|method|getEntryCount ()
specifier|public
name|int
name|getEntryCount
parameter_list|()
block|{
return|return
name|entries
operator|.
name|size
argument_list|()
return|;
block|}
block|}
end_class

end_unit

