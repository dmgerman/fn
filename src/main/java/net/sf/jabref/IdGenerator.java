begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|NumberFormat
import|;
end_import

begin_comment
comment|/**  * IDs are at least 8 digit long. The lowest ID is 00000000, the next would be 00000001.  *<p/>  * The generator is thread safe!  */
end_comment

begin_class
DECL|class|IdGenerator
specifier|public
class|class
name|IdGenerator
block|{
DECL|field|idFormat
specifier|private
specifier|static
specifier|final
name|NumberFormat
name|idFormat
decl_stmt|;
static|static
block|{
name|idFormat
operator|=
name|NumberFormat
operator|.
name|getInstance
argument_list|()
expr_stmt|;
name|IdGenerator
operator|.
name|idFormat
operator|.
name|setMinimumIntegerDigits
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|IdGenerator
operator|.
name|idFormat
operator|.
name|setGroupingUsed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|field|idCounter
specifier|private
specifier|static
name|int
name|idCounter
init|=
literal|0
decl_stmt|;
DECL|method|next ()
specifier|public
specifier|static
specifier|synchronized
name|String
name|next
parameter_list|()
block|{
name|String
name|result
init|=
name|idFormat
operator|.
name|format
argument_list|(
name|idCounter
argument_list|)
decl_stmt|;
name|idCounter
operator|++
expr_stmt|;
return|return
name|result
return|;
block|}
DECL|method|getMinimumIntegerDigits ()
specifier|public
specifier|static
name|int
name|getMinimumIntegerDigits
parameter_list|()
block|{
return|return
name|idFormat
operator|.
name|getMinimumIntegerDigits
argument_list|()
return|;
block|}
block|}
end_class

end_unit

