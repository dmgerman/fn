begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.external
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|external
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|HttpURLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URLConnection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|fetcher
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|URLDownload
import|;
end_import

begin_comment
comment|/**  * Utility class for trying to resolve URLs to full-text PDF for articles.  */
end_comment

begin_class
DECL|class|FindFullText
specifier|public
class|class
name|FindFullText
block|{
DECL|field|finders
specifier|private
specifier|final
name|List
argument_list|<
name|FullTextFinder
argument_list|>
name|finders
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|FindFullText ()
specifier|public
name|FindFullText
parameter_list|()
block|{
comment|// Ordering is important, authorities first!
comment|// Publisher
name|finders
operator|.
name|add
argument_list|(
operator|new
name|ScienceDirect
argument_list|()
argument_list|)
expr_stmt|;
name|finders
operator|.
name|add
argument_list|(
operator|new
name|SpringerLink
argument_list|()
argument_list|)
expr_stmt|;
name|finders
operator|.
name|add
argument_list|(
operator|new
name|ACS
argument_list|()
argument_list|)
expr_stmt|;
name|finders
operator|.
name|add
argument_list|(
operator|new
name|ArXiv
argument_list|()
argument_list|)
expr_stmt|;
comment|// Meta search
name|finders
operator|.
name|add
argument_list|(
operator|new
name|GoogleScholar
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|findFullText (BibEntry entry)
specifier|public
name|Optional
argument_list|<
name|URL
argument_list|>
name|findFullText
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
for|for
control|(
name|FullTextFinder
name|finder
range|:
name|finders
control|)
block|{
try|try
block|{
name|Optional
argument_list|<
name|URL
argument_list|>
name|result
init|=
name|finder
operator|.
name|findFullText
argument_list|(
name|entry
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|.
name|isPresent
argument_list|()
condition|)
block|{
comment|// TODO: recheck this!
comment|// Check the MIME type of this URL to see if it is a PDF. If not,
comment|// it could be because the user doesn't have access:
comment|// FIXME: redirection break this!
comment|// Property-based software engineering measurement
comment|// http://drum.lib.umd.edu/bitstream/1903/19/2/CS-TR-3368.pdf
comment|// FIXME:
comment|// INFO: Fulltext PDF found @ Google: https://www.uni-bamberg.de/fileadmin/uni/fakultaeten/wiai_lehrstuehle/praktische_informatik/Dateien/Publikationen/sose14-towards-application-portability-in-paas.pdf
comment|// javax.net.ssl.SSLProtocolException: handshake alert:  unrecognized_name
comment|// http://stackoverflow.com/questions/7615645/ssl-handshake-alert-unrecognized-name-error-since-upgrade-to-java-1-7-0
name|String
name|mimeType
init|=
operator|new
name|URLDownload
argument_list|(
name|result
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|determineMimeType
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|mimeType
operator|!=
literal|null
operator|)
operator|&&
literal|"application/pdf"
operator|.
name|equals
argument_list|(
name|mimeType
operator|.
name|toLowerCase
argument_list|()
argument_list|)
condition|)
block|{
return|return
name|Optional
operator|.
name|of
argument_list|(
name|result
operator|.
name|get
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
comment|// TODO log
block|}
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
comment|// TODO log
continue|continue;
block|}
block|}
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
block|}
end_class

end_unit

