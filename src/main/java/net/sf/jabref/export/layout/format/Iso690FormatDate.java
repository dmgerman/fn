begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * iso690FormatDate.java  *  * Creado el 10 de septiembre de 2009, 16:07  *  * Copyright 2009, Laura HernÃ¡ndez GÃ³mez  *  * This file is part of Plugin ISO 690.  *  *  Plugin ISO 690 is free software: you can redistribute it and/or modify  *  it under the terms of the GNU General Public License as published by  *  the Free Software Foundation, either version 3 of the License, or  *  (at your option) any later version.  *  *  Plugin ISO 690 is distributed in the hope that it will be useful,  *  but WITHOUT ANY WARRANTY; without even the implied warranty of  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  *  GNU General Public License for more details.  *  *  You should have received a copy of the GNU General Public License  *  along with Plugin ISO 690.  If not, see<http://www.gnu.org/licenses/>.  */
end_comment

begin_package
DECL|package|net.sf.jabref.export.layout.format
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|export
operator|.
name|layout
operator|.
name|format
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|export
operator|.
name|layout
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  *  * @author Usuario  */
end_comment

begin_class
DECL|class|Iso690FormatDate
specifier|public
class|class
name|Iso690FormatDate
implements|implements
name|LayoutFormatter
block|{
comment|/** Creates a new instance of iso690NamesAuthors */
DECL|method|Iso690FormatDate ()
specifier|public
name|Iso690FormatDate
parameter_list|()
block|{     }
annotation|@
name|Override
DECL|method|format (String s)
specifier|public
name|String
name|format
parameter_list|(
name|String
name|s
parameter_list|)
block|{
if|if
condition|(
operator|(
name|s
operator|==
literal|null
operator|)
operator|||
name|s
operator|.
name|trim
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
return|return
literal|""
return|;
block|}
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|String
index|[]
name|date
init|=
name|s
operator|.
name|split
argument_list|(
literal|"de"
argument_list|)
decl_stmt|;
comment|//parte el string en los distintos campos de la fecha
if|if
condition|(
name|date
operator|.
name|length
operator|==
literal|1
condition|)
block|{
comment|//sÃ³lo pone el aÃ±o
name|sb
operator|.
name|append
argument_list|(
name|date
index|[
literal|0
index|]
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|date
operator|.
name|length
operator|==
literal|2
condition|)
block|{
comment|//primer campo mes, segundo campo aÃ±o
comment|//cambiamos al formato aÃ±o - mes
name|sb
operator|.
name|append
argument_list|(
name|date
index|[
literal|1
index|]
operator|.
name|trim
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"-"
argument_list|)
operator|.
name|append
argument_list|(
name|date
index|[
literal|0
index|]
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|date
operator|.
name|length
operator|==
literal|3
condition|)
block|{
comment|//primer campo dÃ­a, segundo campo mes y tercer campo aÃ±o
comment|// cambiamos al formato aÃ±o-mes-dÃ­a
name|sb
operator|.
name|append
argument_list|(
name|date
index|[
literal|2
index|]
operator|.
name|trim
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"-"
argument_list|)
operator|.
name|append
argument_list|(
name|date
index|[
literal|1
index|]
operator|.
name|trim
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|"-"
argument_list|)
operator|.
name|append
argument_list|(
name|date
index|[
literal|0
index|]
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
comment|//retorna el string creado con la fecha.
block|}
block|}
end_class

end_unit

