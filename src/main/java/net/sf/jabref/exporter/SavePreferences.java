begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.exporter
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|exporter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|SavePreferences
specifier|public
class|class
name|SavePreferences
block|{
DECL|enum|DatabaseSaveType
specifier|public
enum|enum
name|DatabaseSaveType
block|{
DECL|enumConstant|ALL
name|ALL
block|,
DECL|enumConstant|PLAIN_BIBTEX
name|PLAIN_BIBTEX
block|}
DECL|field|makeBackup
name|boolean
name|makeBackup
decl_stmt|;
DECL|field|encoding
name|Charset
name|encoding
decl_stmt|;
DECL|field|saveType
name|DatabaseSaveType
name|saveType
decl_stmt|;
DECL|field|isSaveOperation
specifier|private
specifier|final
name|boolean
name|isSaveOperation
decl_stmt|;
DECL|field|pri
specifier|public
name|String
name|pri
decl_stmt|;
DECL|field|sec
specifier|public
name|String
name|sec
decl_stmt|;
DECL|field|ter
specifier|public
name|String
name|ter
decl_stmt|;
DECL|field|priD
specifier|public
name|boolean
name|priD
decl_stmt|;
DECL|field|secD
specifier|public
name|boolean
name|secD
decl_stmt|;
DECL|field|terD
specifier|public
name|boolean
name|terD
decl_stmt|;
DECL|method|SavePreferences (JabRefPreferences prefs)
specifier|public
name|SavePreferences
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|)
block|{
name|this
argument_list|(
name|prefs
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|SavePreferences (JabRefPreferences prefs, boolean isSaveOperation)
specifier|public
name|SavePreferences
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|,
name|boolean
name|isSaveOperation
parameter_list|)
block|{
name|this
operator|.
name|makeBackup
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|BACKUP
argument_list|)
expr_stmt|;
name|this
operator|.
name|encoding
operator|=
name|prefs
operator|.
name|getDefaultEncoding
argument_list|()
expr_stmt|;
name|this
operator|.
name|isSaveOperation
operator|=
name|isSaveOperation
expr_stmt|;
name|this
operator|.
name|saveType
operator|=
name|DatabaseSaveType
operator|.
name|ALL
expr_stmt|;
if|if
condition|(
operator|!
name|isSaveOperation
operator|&&
name|Globals
operator|.
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|EXPORT_IN_SPECIFIED_ORDER
argument_list|)
condition|)
block|{
name|pri
operator|=
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|EXPORT_PRIMARY_SORT_FIELD
argument_list|)
expr_stmt|;
name|sec
operator|=
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|EXPORT_SECONDARY_SORT_FIELD
argument_list|)
expr_stmt|;
name|ter
operator|=
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|EXPORT_TERTIARY_SORT_FIELD
argument_list|)
expr_stmt|;
name|priD
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|EXPORT_PRIMARY_SORT_DESCENDING
argument_list|)
expr_stmt|;
name|secD
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|EXPORT_SECONDARY_SORT_DESCENDING
argument_list|)
expr_stmt|;
name|terD
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|EXPORT_TERTIARY_SORT_DESCENDING
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// The setting is to save according to the current table order.
name|pri
operator|=
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|TABLE_PRIMARY_SORT_FIELD
argument_list|)
expr_stmt|;
name|sec
operator|=
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|TABLE_SECONDARY_SORT_FIELD
argument_list|)
expr_stmt|;
name|ter
operator|=
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|TABLE_TERTIARY_SORT_FIELD
argument_list|)
expr_stmt|;
name|priD
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|TABLE_PRIMARY_SORT_DESCENDING
argument_list|)
expr_stmt|;
name|secD
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|TABLE_SECONDARY_SORT_DESCENDING
argument_list|)
expr_stmt|;
name|terD
operator|=
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|TABLE_TERTIARY_SORT_DESCENDING
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getMakeBackup ()
specifier|public
name|boolean
name|getMakeBackup
parameter_list|()
block|{
return|return
name|makeBackup
return|;
block|}
DECL|method|setMakeBackup (Boolean makeBackup)
specifier|public
name|void
name|setMakeBackup
parameter_list|(
name|Boolean
name|makeBackup
parameter_list|)
block|{
name|this
operator|.
name|makeBackup
operator|=
name|makeBackup
expr_stmt|;
block|}
DECL|method|getEncoding ()
specifier|public
name|Charset
name|getEncoding
parameter_list|()
block|{
return|return
name|encoding
return|;
block|}
DECL|method|setEncoding (Charset encoding)
specifier|public
name|void
name|setEncoding
parameter_list|(
name|Charset
name|encoding
parameter_list|)
block|{
name|this
operator|.
name|encoding
operator|=
name|encoding
expr_stmt|;
block|}
DECL|method|isSaveOperation ()
specifier|public
name|boolean
name|isSaveOperation
parameter_list|()
block|{
return|return
name|isSaveOperation
return|;
block|}
DECL|method|getSaveType ()
specifier|public
name|DatabaseSaveType
name|getSaveType
parameter_list|()
block|{
return|return
name|saveType
return|;
block|}
DECL|method|setSaveType (DatabaseSaveType saveType)
specifier|public
name|void
name|setSaveType
parameter_list|(
name|DatabaseSaveType
name|saveType
parameter_list|)
block|{
name|this
operator|.
name|saveType
operator|=
name|saveType
expr_stmt|;
block|}
block|}
end_class

end_unit

