begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.search.rules
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|search
operator|.
name|rules
package|;
end_package

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|base
operator|.
name|Preconditions
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|search
operator|.
name|SearchRule
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Inverts result score.  *  * Example:  * 0 --> 1  * 1 --> 0  * ELSE --> 0  */
end_comment

begin_class
DECL|class|InvertSearchRule
specifier|public
class|class
name|InvertSearchRule
implements|implements
name|SearchRule
block|{
DECL|field|otherRule
specifier|private
specifier|final
name|SearchRule
name|otherRule
decl_stmt|;
DECL|method|InvertSearchRule (SearchRule otherRule)
specifier|public
name|InvertSearchRule
parameter_list|(
name|SearchRule
name|otherRule
parameter_list|)
block|{
name|this
operator|.
name|otherRule
operator|=
name|Preconditions
operator|.
name|checkNotNull
argument_list|(
name|otherRule
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|applyRule (Map<String, String> searchStrings, BibtexEntry bibtexEntry)
specifier|public
name|int
name|applyRule
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|searchStrings
parameter_list|,
name|BibtexEntry
name|bibtexEntry
parameter_list|)
block|{
return|return
name|otherRule
operator|.
name|applyRule
argument_list|(
name|searchStrings
argument_list|,
name|bibtexEntry
argument_list|)
operator|==
literal|0
condition|?
literal|1
else|:
literal|0
return|;
block|}
annotation|@
name|Override
DECL|method|validateSearchStrings (Map<String, String> searchStrings)
specifier|public
name|boolean
name|validateSearchStrings
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|searchStrings
parameter_list|)
block|{
return|return
name|this
operator|.
name|otherRule
operator|.
name|validateSearchStrings
argument_list|(
name|searchStrings
argument_list|)
return|;
block|}
block|}
end_class

end_unit

