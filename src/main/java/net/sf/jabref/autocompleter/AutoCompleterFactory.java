begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2011 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.autocompleter
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|autocompleter
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefPreferences
import|;
end_import

begin_comment
comment|/**  * Returns an autocompleter to a given fieldname.  *   * @author kahlert, cordes  */
end_comment

begin_class
DECL|class|AutoCompleterFactory
specifier|public
class|class
name|AutoCompleterFactory
block|{
DECL|field|SHORTEST_TO_COMPLETE
specifier|public
specifier|static
name|int
name|SHORTEST_TO_COMPLETE
init|=
name|Globals
operator|.
name|prefs
operator|.
name|getInt
argument_list|(
name|JabRefPreferences
operator|.
name|SHORTEST_TO_COMPLETE
argument_list|)
decl_stmt|;
DECL|method|getFor (String fieldName)
specifier|public
specifier|static
name|AutoCompleter
name|getFor
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
if|if
condition|(
literal|"author"
operator|.
name|equals
argument_list|(
name|fieldName
argument_list|)
operator|||
literal|"editor"
operator|.
name|equals
argument_list|(
name|fieldName
argument_list|)
condition|)
block|{
return|return
operator|new
name|NameFieldAutoCompleter
argument_list|(
name|fieldName
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
literal|"crossref"
operator|.
name|equals
argument_list|(
name|fieldName
argument_list|)
condition|)
block|{
return|return
operator|new
name|CrossrefAutoCompleter
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
literal|"journal"
operator|.
name|equals
argument_list|(
name|fieldName
argument_list|)
operator|||
literal|"publisher"
operator|.
name|equals
argument_list|(
name|fieldName
argument_list|)
condition|)
block|{
return|return
operator|new
name|EntireFieldAutoCompleter
argument_list|(
name|fieldName
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|DefaultAutoCompleter
argument_list|(
name|fieldName
argument_list|)
return|;
block|}
block|}
DECL|method|getFor (String fieldName, String secondFieldName)
specifier|public
specifier|static
name|AutoCompleter
name|getFor
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|String
name|secondFieldName
parameter_list|)
block|{
return|return
operator|new
name|NameFieldAutoCompleter
argument_list|(
operator|new
name|String
index|[]
block|{
name|fieldName
block|,
name|secondFieldName
block|}
argument_list|,
literal|true
argument_list|)
return|;
block|}
block|}
end_class

end_unit

