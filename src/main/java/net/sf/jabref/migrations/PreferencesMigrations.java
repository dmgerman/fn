begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.migrations
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|migrations
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|PreferencesMigrations
specifier|public
class|class
name|PreferencesMigrations
block|{
comment|/**      * This method is called at startup, and makes necessary adaptations to      * preferences for users from an earlier version of Jabref.      */
DECL|method|performCompatibilityUpdate ()
specifier|public
specifier|static
name|void
name|performCompatibilityUpdate
parameter_list|()
block|{
comment|// Make sure "abstract" is not in General fields, because
comment|// Jabref 1.55 moves the abstract to its own tab.
name|String
name|genFields
init|=
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|GENERAL_FIELDS
argument_list|)
decl_stmt|;
comment|// pr(genFields+"\t"+genFields.indexOf("abstract"));
if|if
condition|(
name|genFields
operator|.
name|contains
argument_list|(
literal|"abstract"
argument_list|)
condition|)
block|{
comment|// pr(genFields+"\t"+genFields.indexOf("abstract"));
name|String
name|newGen
decl_stmt|;
if|if
condition|(
name|genFields
operator|.
name|equals
argument_list|(
literal|"abstract"
argument_list|)
condition|)
block|{
name|newGen
operator|=
literal|""
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|genFields
operator|.
name|contains
argument_list|(
literal|";abstract;"
argument_list|)
condition|)
block|{
name|newGen
operator|=
name|genFields
operator|.
name|replaceAll
argument_list|(
literal|";abstract;"
argument_list|,
literal|";"
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|genFields
operator|.
name|indexOf
argument_list|(
literal|"abstract;"
argument_list|)
operator|==
literal|0
condition|)
block|{
name|newGen
operator|=
name|genFields
operator|.
name|replaceAll
argument_list|(
literal|"abstract;"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|genFields
operator|.
name|indexOf
argument_list|(
literal|";abstract"
argument_list|)
operator|==
name|genFields
operator|.
name|length
argument_list|()
operator|-
literal|9
condition|)
block|{
name|newGen
operator|=
name|genFields
operator|.
name|replaceAll
argument_list|(
literal|";abstract"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|newGen
operator|=
name|genFields
expr_stmt|;
block|}
comment|// pr(newGen);
name|Globals
operator|.
name|prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|GENERAL_FIELDS
argument_list|,
name|newGen
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Added from Jabref 2.11 beta 4 onwards to fix wrong encoding names      */
DECL|method|upgradeFaultyEncodingStrings ()
specifier|public
specifier|static
name|void
name|upgradeFaultyEncodingStrings
parameter_list|()
block|{
name|JabRefPreferences
name|prefs
init|=
name|Globals
operator|.
name|prefs
decl_stmt|;
name|String
name|defaultEncoding
init|=
name|prefs
operator|.
name|get
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|)
decl_stmt|;
if|if
condition|(
name|defaultEncoding
operator|==
literal|null
condition|)
block|{
return|return;
block|}
switch|switch
condition|(
name|defaultEncoding
condition|)
block|{
case|case
literal|"UTF8"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"UTF-8"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"Cp1250"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"CP1250"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"Cp1251"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"CP1251"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"Cp1252"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"CP1252"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"Cp1253"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"CP1253"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"Cp1254"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"CP1254"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"Cp1257"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"CP1257"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_1"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-1"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_2"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-2"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_3"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-3"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_4"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-4"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_5"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-5"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_6"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-6"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_7"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-7"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_8"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-8"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_9"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-9"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_13"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-13"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"ISO8859_15"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"ISO8859-15"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"KOI8_R"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"KOI8-R"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"Big5_HKSCS"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"Big5-HKSCS"
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"EUC_JP"
case|:
name|prefs
operator|.
name|put
argument_list|(
name|prefs
operator|.
name|DEFAULT_ENCODING
argument_list|,
literal|"EUC-JP"
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
block|}
end_class

end_unit

