begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.wizard.auximport
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|wizard
operator|.
name|auximport
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_class
DECL|class|AuxCommandLine
specifier|public
class|class
name|AuxCommandLine
block|{
DECL|field|auxFile
specifier|private
specifier|final
name|String
name|auxFile
decl_stmt|;
DECL|field|database
specifier|private
specifier|final
name|BibDatabase
name|database
decl_stmt|;
DECL|method|AuxCommandLine (String auxFile, BibDatabase database)
specifier|public
name|AuxCommandLine
parameter_list|(
name|String
name|auxFile
parameter_list|,
name|BibDatabase
name|database
parameter_list|)
block|{
name|this
operator|.
name|auxFile
operator|=
name|StringUtil
operator|.
name|getCorrectFileName
argument_list|(
name|auxFile
argument_list|,
literal|"aux"
argument_list|)
expr_stmt|;
name|this
operator|.
name|database
operator|=
name|database
expr_stmt|;
block|}
DECL|method|perform ()
specifier|public
name|BibDatabase
name|perform
parameter_list|()
block|{
name|BibDatabase
name|subDatabase
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|auxFile
operator|.
name|isEmpty
argument_list|()
operator|&&
operator|(
name|database
operator|!=
literal|null
operator|)
condition|)
block|{
name|AuxFileParser
name|auxParser
init|=
operator|new
name|AuxFileParser
argument_list|(
name|auxFile
argument_list|,
name|database
argument_list|)
decl_stmt|;
name|subDatabase
operator|=
name|auxParser
operator|.
name|getGeneratedBibDatabase
argument_list|()
expr_stmt|;
comment|// print statistics
name|System
operator|.
name|out
operator|.
name|println
argument_list|(
name|auxParser
operator|.
name|getInformation
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|subDatabase
return|;
block|}
block|}
end_class

end_unit

