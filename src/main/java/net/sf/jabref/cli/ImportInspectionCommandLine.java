begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.cli
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|cli
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|EntryFetcher
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ImportInspector
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|OutputPrinter
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_class
DECL|class|ImportInspectionCommandLine
specifier|public
class|class
name|ImportInspectionCommandLine
implements|implements
name|ImportInspector
block|{
DECL|field|entries
specifier|private
specifier|final
name|List
argument_list|<
name|BibEntry
argument_list|>
name|entries
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|status
specifier|private
specifier|final
name|OutputPrinter
name|status
init|=
operator|new
name|SystemOutputPrinter
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|addEntry (BibEntry entry)
specifier|public
name|void
name|addEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|entries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setProgress (int current, int max)
specifier|public
name|void
name|setProgress
parameter_list|(
name|int
name|current
parameter_list|,
name|int
name|max
parameter_list|)
block|{
name|status
operator|.
name|setStatus
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Progress: %0 of %1"
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|current
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|max
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|query (String query, EntryFetcher fetcher)
specifier|public
name|Collection
argument_list|<
name|BibEntry
argument_list|>
name|query
parameter_list|(
name|String
name|query
parameter_list|,
name|EntryFetcher
name|fetcher
parameter_list|)
block|{
name|entries
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|fetcher
operator|.
name|processQuery
argument_list|(
name|query
argument_list|,
name|ImportInspectionCommandLine
operator|.
name|this
argument_list|,
name|status
argument_list|)
condition|)
block|{
return|return
name|entries
return|;
block|}
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
block|}
end_class

end_unit

