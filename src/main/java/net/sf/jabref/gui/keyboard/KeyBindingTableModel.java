begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.keyboard
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|AbstractTableModel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
annotation|@
name|SuppressWarnings
argument_list|(
literal|"serial"
argument_list|)
DECL|class|KeyBindingTableModel
specifier|public
class|class
name|KeyBindingTableModel
extends|extends
name|AbstractTableModel
block|{
DECL|field|keyBindingRepository
specifier|private
specifier|final
name|KeyBindingRepository
name|keyBindingRepository
decl_stmt|;
DECL|method|KeyBindingTableModel (KeyBindingRepository keyBindingRepository)
specifier|public
name|KeyBindingTableModel
parameter_list|(
name|KeyBindingRepository
name|keyBindingRepository
parameter_list|)
block|{
name|this
operator|.
name|keyBindingRepository
operator|=
name|keyBindingRepository
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isCellEditable (int row, int col)
specifier|public
name|boolean
name|isCellEditable
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|getColumnName (int col)
specifier|public
name|String
name|getColumnName
parameter_list|(
name|int
name|col
parameter_list|)
block|{
return|return
name|col
operator|==
literal|0
condition|?
name|Localization
operator|.
name|lang
argument_list|(
literal|"Action"
argument_list|)
else|:
name|Localization
operator|.
name|lang
argument_list|(
literal|"Shortcut"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getColumnCount ()
specifier|public
name|int
name|getColumnCount
parameter_list|()
block|{
return|return
literal|2
return|;
block|}
annotation|@
name|Override
DECL|method|getRowCount ()
specifier|public
name|int
name|getRowCount
parameter_list|()
block|{
return|return
name|keyBindingRepository
operator|.
name|size
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getValueAt (int rowIndex, int columnIndex)
specifier|public
name|Object
name|getValueAt
parameter_list|(
name|int
name|rowIndex
parameter_list|,
name|int
name|columnIndex
parameter_list|)
block|{
name|Map
operator|.
name|Entry
argument_list|<
name|KeyBinding
argument_list|,
name|String
argument_list|>
name|row
init|=
name|getRowData
argument_list|(
name|rowIndex
argument_list|)
decl_stmt|;
if|if
condition|(
name|columnIndex
operator|==
literal|0
condition|)
block|{
return|return
name|row
operator|.
name|getKey
argument_list|()
operator|.
name|getLocalization
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|row
operator|.
name|getValue
argument_list|()
return|;
block|}
block|}
DECL|method|getOriginalName (int rowIndex)
specifier|public
name|String
name|getOriginalName
parameter_list|(
name|int
name|rowIndex
parameter_list|)
block|{
return|return
name|getRowData
argument_list|(
name|rowIndex
argument_list|)
operator|.
name|getKey
argument_list|()
operator|.
name|getKey
argument_list|()
return|;
block|}
DECL|method|getRowData (int rowIndex)
specifier|private
name|Map
operator|.
name|Entry
argument_list|<
name|KeyBinding
argument_list|,
name|String
argument_list|>
name|getRowData
parameter_list|(
name|int
name|rowIndex
parameter_list|)
block|{
name|List
argument_list|<
name|Map
operator|.
name|Entry
argument_list|<
name|KeyBinding
argument_list|,
name|String
argument_list|>
argument_list|>
name|entries
init|=
operator|new
name|LinkedList
argument_list|<>
argument_list|(
name|keyBindingRepository
operator|.
name|getKeyBindings
argument_list|()
operator|.
name|entrySet
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|entries
operator|.
name|get
argument_list|(
name|rowIndex
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|setValueAt (Object o, int row, int col)
specifier|public
name|void
name|setValueAt
parameter_list|(
name|Object
name|o
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|)
block|{
if|if
condition|(
name|col
operator|==
literal|1
condition|)
block|{
name|keyBindingRepository
operator|.
name|put
argument_list|(
name|getRowData
argument_list|(
name|row
argument_list|)
operator|.
name|getKey
argument_list|()
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|o
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

