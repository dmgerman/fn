begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.worker
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|worker
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JEditorPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingWorker
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|PreviewPanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|citationstyle
operator|.
name|CitationStyle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * Generates a citation and updates the linked preview panel  */
end_comment

begin_class
DECL|class|CitationStyleWorker
specifier|public
class|class
name|CitationStyleWorker
extends|extends
name|SwingWorker
argument_list|<
name|String
argument_list|,
name|Void
argument_list|>
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|CitationStyleWorker
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|previewPanel
specifier|private
specifier|final
name|PreviewPanel
name|previewPanel
decl_stmt|;
DECL|method|CitationStyleWorker (PreviewPanel previewPanel, JEditorPane previewPane)
specifier|public
name|CitationStyleWorker
parameter_list|(
name|PreviewPanel
name|previewPanel
parameter_list|,
name|JEditorPane
name|previewPane
parameter_list|)
block|{
name|this
operator|.
name|previewPanel
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|previewPanel
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|previewPane
argument_list|)
expr_stmt|;
name|Optional
argument_list|<
name|BasePanel
argument_list|>
name|basePanel
init|=
name|previewPanel
operator|.
name|getBasePanel
argument_list|()
decl_stmt|;
if|if
condition|(
name|basePanel
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|CitationStyle
name|citationStyle
init|=
name|basePanel
operator|.
name|get
argument_list|()
operator|.
name|getCitationStyleCache
argument_list|()
operator|.
name|getCitationStyle
argument_list|()
decl_stmt|;
name|previewPane
operator|.
name|setText
argument_list|(
literal|"<i>"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"Processing %0"
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Citation Style"
argument_list|)
argument_list|)
operator|+
literal|": "
operator|+
name|citationStyle
operator|.
name|getTitle
argument_list|()
operator|+
literal|" ..."
operator|+
literal|"</i>"
argument_list|)
expr_stmt|;
block|}
name|previewPane
operator|.
name|revalidate
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doInBackground ()
specifier|protected
name|String
name|doInBackground
parameter_list|()
throws|throws
name|Exception
block|{
name|Optional
argument_list|<
name|BasePanel
argument_list|>
name|basePanel
init|=
name|previewPanel
operator|.
name|getBasePanel
argument_list|()
decl_stmt|;
name|BibEntry
name|entry
init|=
name|previewPanel
operator|.
name|getEntry
argument_list|()
decl_stmt|;
name|String
name|fieldText
init|=
literal|""
decl_stmt|;
if|if
condition|(
operator|(
name|entry
operator|!=
literal|null
operator|)
operator|&&
name|basePanel
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|fieldText
operator|=
name|basePanel
operator|.
name|get
argument_list|()
operator|.
name|getCitationStyleCache
argument_list|()
operator|.
name|getCitationFor
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
return|return
name|fieldText
return|;
block|}
annotation|@
name|Override
DECL|method|done ()
specifier|public
name|void
name|done
parameter_list|()
block|{
if|if
condition|(
name|this
operator|.
name|isCancelled
argument_list|()
condition|)
block|{
return|return;
block|}
name|String
name|text
decl_stmt|;
name|Boolean
name|success
init|=
literal|true
decl_stmt|;
try|try
block|{
name|text
operator|=
name|this
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
decl||
name|ExecutionException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error while generating citation style"
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|text
operator|=
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error while generating citation style"
argument_list|)
expr_stmt|;
name|success
operator|=
literal|false
expr_stmt|;
block|}
name|previewPanel
operator|.
name|setPreviewLabel
argument_list|(
name|text
argument_list|)
expr_stmt|;
if|if
condition|(
name|success
condition|)
block|{
name|previewPanel
operator|.
name|markHighlights
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

