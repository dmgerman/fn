begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.worker
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|worker
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|UndoableFieldChange
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|DOI
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|FieldChange
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
DECL|class|LookupDOIsWorker
specifier|public
class|class
name|LookupDOIsWorker
extends|extends
name|AbstractWorker
block|{
DECL|field|frame
specifier|private
specifier|final
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|message
specifier|private
name|String
name|message
decl_stmt|;
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|LookupDOIsWorker
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|LookupDOIsWorker (JabRefFrame frame)
specifier|public
name|LookupDOIsWorker
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|frame
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|BasePanel
name|basePanel
init|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|frame
operator|.
name|getCurrentBasePanel
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|BibEntry
argument_list|>
name|bibEntries
init|=
name|basePanel
operator|.
name|getSelectedEntries
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|bibEntries
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
name|totalCount
init|=
name|Integer
operator|.
name|toString
argument_list|(
name|bibEntries
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
name|NamedCompound
name|namedCompound
init|=
operator|new
name|NamedCompound
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Look up DOIs"
argument_list|)
argument_list|)
decl_stmt|;
name|int
name|count
init|=
literal|0
decl_stmt|;
name|int
name|foundCount
init|=
literal|0
decl_stmt|;
for|for
control|(
name|BibEntry
name|bibEntry
range|:
name|bibEntries
control|)
block|{
name|count
operator|++
expr_stmt|;
name|frame
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Looking up DOIs... - entry %0 out of %1 - found %2"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|count
argument_list|)
argument_list|,
name|totalCount
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|foundCount
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|bibEntry
operator|.
name|hasField
argument_list|(
name|FieldName
operator|.
name|DOI
argument_list|)
condition|)
block|{
name|Optional
argument_list|<
name|DOI
argument_list|>
name|doi
init|=
name|DOI
operator|.
name|fromBibEntry
argument_list|(
name|bibEntry
argument_list|)
decl_stmt|;
if|if
condition|(
name|doi
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|Optional
argument_list|<
name|FieldChange
argument_list|>
name|fieldChange
init|=
name|bibEntry
operator|.
name|setField
argument_list|(
name|FieldName
operator|.
name|DOI
argument_list|,
name|doi
operator|.
name|get
argument_list|()
operator|.
name|getDOI
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|fieldChange
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|namedCompound
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoableFieldChange
argument_list|(
name|fieldChange
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|foundCount
operator|++
expr_stmt|;
name|frame
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Looking up DOIs... - entry %0 out of %1 - found %2"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|count
argument_list|)
argument_list|,
name|totalCount
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|foundCount
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
name|namedCompound
operator|.
name|end
argument_list|()
expr_stmt|;
if|if
condition|(
name|foundCount
operator|>
literal|0
condition|)
block|{
name|basePanel
operator|.
name|getUndoManager
argument_list|()
operator|.
name|addEdit
argument_list|(
name|namedCompound
argument_list|)
expr_stmt|;
name|basePanel
operator|.
name|markBaseChanged
argument_list|()
expr_stmt|;
block|}
name|message
operator|=
name|Localization
operator|.
name|lang
argument_list|(
literal|"Determined_DOIs_for_%0_entries"
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|foundCount
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|update ()
specifier|public
name|void
name|update
parameter_list|()
block|{
name|frame
operator|.
name|output
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

