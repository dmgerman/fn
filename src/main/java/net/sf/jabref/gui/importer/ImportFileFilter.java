begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.importer
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Stream
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|filechooser
operator|.
name|FileFilter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|filechooser
operator|.
name|FileNameExtensionFilter
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|ImportFormat
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|FileExtensions
import|;
end_import

begin_class
DECL|class|ImportFileFilter
class|class
name|ImportFileFilter
extends|extends
name|FileFilter
implements|implements
name|Comparable
argument_list|<
name|ImportFileFilter
argument_list|>
block|{
DECL|field|description
specifier|private
specifier|final
name|String
name|description
decl_stmt|;
DECL|field|fileFilter
specifier|private
specifier|final
name|FileNameExtensionFilter
name|fileFilter
decl_stmt|;
DECL|method|ImportFileFilter (ImportFormat format)
specifier|public
name|ImportFileFilter
parameter_list|(
name|ImportFormat
name|format
parameter_list|)
block|{
name|FileExtensions
name|extensions
init|=
name|format
operator|.
name|getExtensions
argument_list|()
decl_stmt|;
name|this
operator|.
name|description
operator|=
name|extensions
operator|.
name|getDescription
argument_list|()
expr_stmt|;
name|fileFilter
operator|=
operator|new
name|FileNameExtensionFilter
argument_list|(
name|extensions
operator|.
name|getDescription
argument_list|()
argument_list|,
name|extensions
operator|.
name|getExtensions
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|ImportFileFilter (String description, Collection<ImportFormat> formats)
specifier|public
name|ImportFileFilter
parameter_list|(
name|String
name|description
parameter_list|,
name|Collection
argument_list|<
name|ImportFormat
argument_list|>
name|formats
parameter_list|)
block|{
name|this
operator|.
name|description
operator|=
name|description
expr_stmt|;
name|List
argument_list|<
name|FileExtensions
argument_list|>
name|extensions
init|=
name|formats
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|p
lambda|->
name|p
operator|.
name|getExtensions
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|flatExtensions
init|=
name|extensions
operator|.
name|stream
argument_list|()
operator|.
name|flatMap
argument_list|(
name|extList
lambda|->
name|Stream
operator|.
name|of
argument_list|(
name|extList
operator|.
name|getExtensions
argument_list|()
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|fileFilter
operator|=
operator|new
name|FileNameExtensionFilter
argument_list|(
name|description
argument_list|,
name|flatExtensions
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|flatExtensions
operator|.
name|size
argument_list|()
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|accept (File file)
specifier|public
name|boolean
name|accept
parameter_list|(
name|File
name|file
parameter_list|)
block|{
return|return
operator|(
name|file
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|file
operator|.
name|isDirectory
argument_list|()
operator|||
name|fileFilter
operator|.
name|accept
argument_list|(
name|file
argument_list|)
operator|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|description
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (ImportFileFilter o)
specifier|public
name|int
name|compareTo
parameter_list|(
name|ImportFileFilter
name|o
parameter_list|)
block|{
return|return
name|description
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|description
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|instanceof
name|ImportFileFilter
condition|)
block|{
return|return
name|description
operator|.
name|equals
argument_list|(
operator|(
operator|(
name|ImportFileFilter
operator|)
name|o
operator|)
operator|.
name|description
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|description
operator|.
name|hashCode
argument_list|()
return|;
block|}
block|}
end_class

end_unit

