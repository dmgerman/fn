begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2013 JabRef contributors.     This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see<http://www.gnu.org/licenses/>. */
end_comment

begin_package
DECL|package|net.sf.jabref.gui.preftabs
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preftabs
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPasswordField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|FormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|ProxyPreferences
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|ProxyRegisterer
import|;
end_import

begin_class
DECL|class|NetworkTab
specifier|public
class|class
name|NetworkTab
extends|extends
name|JPanel
implements|implements
name|PrefsTab
block|{
DECL|field|useProxyCheckBox
specifier|private
specifier|final
name|JCheckBox
name|useProxyCheckBox
decl_stmt|;
DECL|field|hostnameTextField
specifier|private
specifier|final
name|JTextField
name|hostnameTextField
decl_stmt|;
DECL|field|portTextField
specifier|private
specifier|final
name|JTextField
name|portTextField
decl_stmt|;
DECL|field|useAuthenticationCheckBox
specifier|private
specifier|final
name|JCheckBox
name|useAuthenticationCheckBox
decl_stmt|;
DECL|field|usernameTextField
specifier|private
specifier|final
name|JTextField
name|usernameTextField
decl_stmt|;
DECL|field|passwordTextField
specifier|private
specifier|final
name|JPasswordField
name|passwordTextField
decl_stmt|;
DECL|field|passwordWarningLabel
specifier|private
specifier|final
name|JLabel
name|passwordWarningLabel
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|JabRefPreferences
name|preferences
decl_stmt|;
DECL|field|oldProxyPreferences
specifier|private
name|ProxyPreferences
name|oldProxyPreferences
decl_stmt|;
DECL|method|NetworkTab (JabRefPreferences preferences)
specifier|public
name|NetworkTab
parameter_list|(
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|useProxyCheckBox
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Use custom proxy configuration"
argument_list|)
argument_list|)
expr_stmt|;
name|hostnameTextField
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|hostnameTextField
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|portTextField
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|portTextField
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|=
operator|new
name|JCheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Proxy requires authentication"
argument_list|)
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|usernameTextField
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|usernameTextField
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|passwordTextField
operator|=
operator|new
name|JPasswordField
argument_list|()
expr_stmt|;
name|passwordTextField
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|passwordWarningLabel
operator|=
operator|new
name|JLabel
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Attention: Password is stored in plain text!"
argument_list|)
argument_list|)
expr_stmt|;
name|passwordWarningLabel
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|passwordWarningLabel
operator|.
name|setForeground
argument_list|(
name|Color
operator|.
name|RED
argument_list|)
expr_stmt|;
name|Insets
name|margin
init|=
operator|new
name|Insets
argument_list|(
literal|0
argument_list|,
literal|12
argument_list|,
literal|3
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|useProxyCheckBox
operator|.
name|setMargin
argument_list|(
name|margin
argument_list|)
expr_stmt|;
name|portTextField
operator|.
name|setMargin
argument_list|(
name|margin
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setMargin
argument_list|(
name|margin
argument_list|)
expr_stmt|;
comment|// Listener on useProxyCheckBox to enable and disable the proxy related settings;
name|useProxyCheckBox
operator|.
name|addChangeListener
argument_list|(
name|event
lambda|->
block|{
name|hostnameTextField
operator|.
name|setEnabled
argument_list|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|portTextField
operator|.
name|setEnabled
argument_list|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setEnabled
argument_list|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|addChangeListener
argument_list|(
name|event
lambda|->
block|{
name|usernameTextField
operator|.
name|setEnabled
argument_list|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
operator|&&
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|passwordTextField
operator|.
name|setEnabled
argument_list|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
operator|&&
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|passwordWarningLabel
operator|.
name|setEnabled
argument_list|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
operator|&&
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"8dlu, left:pref, 4dlu, left:pref, 4dlu, fill:150dlu"
argument_list|,
literal|"p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p, 2dlu, p, p"
argument_list|)
decl_stmt|;
name|FormBuilder
name|builder
init|=
name|FormBuilder
operator|.
name|create
argument_list|()
operator|.
name|layout
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
argument_list|)
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|useProxyCheckBox
argument_list|)
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Host"
argument_list|)
operator|+
literal|':'
argument_list|)
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|hostnameTextField
argument_list|)
operator|.
name|xyw
argument_list|(
literal|4
argument_list|,
literal|5
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Port"
argument_list|)
operator|+
literal|':'
argument_list|)
operator|.
name|xy
argument_list|(
literal|2
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|portTextField
argument_list|)
operator|.
name|xyw
argument_list|(
literal|4
argument_list|,
literal|7
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|useAuthenticationCheckBox
argument_list|)
operator|.
name|xyw
argument_list|(
literal|4
argument_list|,
literal|9
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Username"
argument_list|)
operator|+
literal|':'
argument_list|)
operator|.
name|xy
argument_list|(
literal|4
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|usernameTextField
argument_list|)
operator|.
name|xy
argument_list|(
literal|6
argument_list|,
literal|11
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Password"
argument_list|)
operator|+
literal|':'
argument_list|)
operator|.
name|xy
argument_list|(
literal|4
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|passwordTextField
argument_list|)
operator|.
name|xy
argument_list|(
literal|6
argument_list|,
literal|13
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|passwordWarningLabel
argument_list|)
operator|.
name|xy
argument_list|(
literal|6
argument_list|,
literal|14
argument_list|)
expr_stmt|;
name|JPanel
name|pan
init|=
name|builder
operator|.
name|getPanel
argument_list|()
decl_stmt|;
name|pan
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|pan
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|ProxyPreferences
name|proxyPreferences
init|=
name|ProxyPreferences
operator|.
name|loadFromPreferences
argument_list|(
name|preferences
argument_list|)
decl_stmt|;
name|useProxyCheckBox
operator|.
name|setSelected
argument_list|(
name|proxyPreferences
operator|.
name|isUseProxy
argument_list|()
argument_list|)
expr_stmt|;
name|hostnameTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|portTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setSelected
argument_list|(
name|proxyPreferences
operator|.
name|isUseAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|usernameTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|passwordTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|oldProxyPreferences
operator|=
name|proxyPreferences
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|Boolean
name|useProxy
init|=
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
decl_stmt|;
name|String
name|hostname
init|=
name|hostnameTextField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|String
name|port
init|=
name|portTextField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|Boolean
name|useAuthentication
init|=
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
decl_stmt|;
name|String
name|username
init|=
name|usernameTextField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|String
name|password
init|=
operator|new
name|String
argument_list|(
name|passwordTextField
operator|.
name|getPassword
argument_list|()
argument_list|)
decl_stmt|;
name|ProxyPreferences
name|proxyPreferences
init|=
operator|new
name|ProxyPreferences
argument_list|(
name|useProxy
argument_list|,
name|hostname
argument_list|,
name|port
argument_list|,
name|useAuthentication
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|proxyPreferences
operator|.
name|equals
argument_list|(
name|oldProxyPreferences
argument_list|)
condition|)
block|{
name|ProxyRegisterer
operator|.
name|register
argument_list|(
name|proxyPreferences
argument_list|)
expr_stmt|;
block|}
name|proxyPreferences
operator|.
name|storeInPreferences
argument_list|(
name|preferences
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|validateSettings ()
specifier|public
name|boolean
name|validateSettings
parameter_list|()
block|{
name|boolean
name|validSetting
decl_stmt|,
name|validAuthenticationSetting
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|String
name|host
init|=
name|hostnameTextField
operator|.
name|getText
argument_list|()
decl_stmt|;
name|String
name|port
init|=
name|portTextField
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|host
operator|==
literal|null
operator|)
operator|||
name|host
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
operator|(
name|port
operator|==
literal|null
operator|)
operator|||
name|port
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|validSetting
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|Integer
name|p
decl_stmt|;
try|try
block|{
name|p
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|validSetting
operator|=
name|p
operator|>
literal|0
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|validSetting
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|String
name|userName
init|=
name|usernameTextField
operator|.
name|getText
argument_list|()
decl_stmt|;
name|char
index|[]
name|password
init|=
name|passwordTextField
operator|.
name|getPassword
argument_list|()
decl_stmt|;
comment|// no empty proxy passwords currently supported (they make no sense in this case anyway)
if|if
condition|(
operator|(
name|userName
operator|==
literal|null
operator|)
operator|||
name|userName
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
operator|(
name|password
operator|==
literal|null
operator|)
operator|||
operator|(
name|password
operator|.
name|length
operator|==
literal|0
operator|)
condition|)
block|{
name|validAuthenticationSetting
operator|=
literal|false
expr_stmt|;
name|validSetting
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|validAuthenticationSetting
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|validSetting
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|validSetting
condition|)
block|{
if|if
condition|(
name|validAuthenticationSetting
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify both hostname and port"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Invalid setting"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify both username and password"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Invalid setting"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|validSetting
return|;
block|}
annotation|@
name|Override
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

