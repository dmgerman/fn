begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.undo
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|undo
operator|.
name|CannotUndoException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|undo
operator|.
name|UndoManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|undo
operator|.
name|UndoableEdit
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|undo
operator|.
name|AddUndoableActionEvent
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|undo
operator|.
name|UndoRedoEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|eventbus
operator|.
name|EventBus
import|;
end_import

begin_class
DECL|class|CountingUndoManager
specifier|public
class|class
name|CountingUndoManager
extends|extends
name|UndoManager
block|{
DECL|field|unchangedPoint
specifier|private
name|int
name|unchangedPoint
decl_stmt|;
DECL|field|current
specifier|private
name|int
name|current
decl_stmt|;
DECL|field|eventBus
specifier|private
specifier|final
name|EventBus
name|eventBus
init|=
operator|new
name|EventBus
argument_list|()
decl_stmt|;
annotation|@
name|Override
DECL|method|addEdit (UndoableEdit edit)
specifier|public
specifier|synchronized
name|boolean
name|addEdit
parameter_list|(
name|UndoableEdit
name|edit
parameter_list|)
block|{
name|current
operator|++
expr_stmt|;
name|boolean
name|returnvalue
init|=
name|super
operator|.
name|addEdit
argument_list|(
name|edit
argument_list|)
decl_stmt|;
name|postAddUndoEvent
argument_list|()
expr_stmt|;
return|return
name|returnvalue
return|;
block|}
annotation|@
name|Override
DECL|method|undo ()
specifier|public
specifier|synchronized
name|void
name|undo
parameter_list|()
throws|throws
name|CannotUndoException
block|{
name|super
operator|.
name|undo
argument_list|()
expr_stmt|;
name|current
operator|--
expr_stmt|;
name|postUndoRedoEvent
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|redo ()
specifier|public
specifier|synchronized
name|void
name|redo
parameter_list|()
throws|throws
name|CannotUndoException
block|{
name|super
operator|.
name|redo
argument_list|()
expr_stmt|;
name|current
operator|++
expr_stmt|;
name|postUndoRedoEvent
argument_list|()
expr_stmt|;
block|}
DECL|method|markUnchanged ()
specifier|public
specifier|synchronized
name|void
name|markUnchanged
parameter_list|()
block|{
name|unchangedPoint
operator|=
name|current
expr_stmt|;
block|}
DECL|method|hasChanged ()
specifier|public
specifier|synchronized
name|boolean
name|hasChanged
parameter_list|()
block|{
return|return
operator|(
name|current
operator|!=
name|unchangedPoint
operator|)
return|;
block|}
DECL|method|registerListener (Object object)
specifier|public
name|void
name|registerListener
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|this
operator|.
name|eventBus
operator|.
name|register
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|postUndoRedoEvent
argument_list|()
expr_stmt|;
comment|// Send event to trigger changes
block|}
DECL|method|unregisterListener (Object object)
specifier|public
name|void
name|unregisterListener
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
name|this
operator|.
name|eventBus
operator|.
name|unregister
argument_list|(
name|object
argument_list|)
expr_stmt|;
block|}
DECL|method|postUndoRedoEvent ()
specifier|public
name|void
name|postUndoRedoEvent
parameter_list|()
block|{
name|boolean
name|canRedo
init|=
name|this
operator|.
name|canRedo
argument_list|()
decl_stmt|;
name|boolean
name|canUndo
init|=
name|this
operator|.
name|canUndo
argument_list|()
decl_stmt|;
name|eventBus
operator|.
name|post
argument_list|(
operator|new
name|UndoRedoEvent
argument_list|(
name|canUndo
argument_list|,
name|canUndo
condition|?
name|getUndoPresentationName
argument_list|()
else|:
name|Localization
operator|.
name|lang
argument_list|(
literal|"Undo"
argument_list|)
argument_list|,
name|canRedo
argument_list|,
name|canRedo
condition|?
name|getRedoPresentationName
argument_list|()
else|:
name|Localization
operator|.
name|lang
argument_list|(
literal|"Redo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|postAddUndoEvent ()
specifier|private
name|void
name|postAddUndoEvent
parameter_list|()
block|{
name|boolean
name|canRedo
init|=
name|this
operator|.
name|canRedo
argument_list|()
decl_stmt|;
name|boolean
name|canUndo
init|=
name|this
operator|.
name|canUndo
argument_list|()
decl_stmt|;
name|eventBus
operator|.
name|post
argument_list|(
operator|new
name|AddUndoableActionEvent
argument_list|(
name|canUndo
argument_list|,
name|canUndo
condition|?
name|getUndoPresentationName
argument_list|()
else|:
name|Localization
operator|.
name|lang
argument_list|(
literal|"Undo"
argument_list|)
argument_list|,
name|canRedo
argument_list|,
name|canRedo
condition|?
name|getRedoPresentationName
argument_list|()
else|:
name|Localization
operator|.
name|lang
argument_list|(
literal|"Redo"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

