begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2014 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.gui.journals
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|journals
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|AbstractTableModel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|GUIGlobals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|FileDialogs
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|help
operator|.
name|HelpAction
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|Abbreviation
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|JournalAbbreviationRepository
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|net
operator|.
name|MonitoredURLDownload
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|ButtonBarBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|ButtonStackBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_comment
comment|/**  * Created by IntelliJ IDEA.  * User: alver  * Date: Sep 19, 2005  * Time: 7:57:29 PM  * To browseOld this template use File | Settings | File Templates.  */
end_comment

begin_class
DECL|class|ManageJournalsPanel
class|class
name|ManageJournalsPanel
extends|extends
name|JPanel
block|{
DECL|field|frame
specifier|private
specifier|final
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|personalFile
specifier|private
specifier|final
name|JTextField
name|personalFile
init|=
operator|new
name|JTextField
argument_list|()
decl_stmt|;
DECL|field|tableModel
specifier|private
specifier|final
name|AbbreviationsTableModel
name|tableModel
init|=
operator|new
name|AbbreviationsTableModel
argument_list|()
decl_stmt|;
DECL|field|userTable
specifier|private
name|JTable
name|userTable
decl_stmt|;
comment|// builtInTable
DECL|field|userPanel
specifier|private
specifier|final
name|JPanel
name|userPanel
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
DECL|field|journalEditPanel
specifier|private
specifier|final
name|JPanel
name|journalEditPanel
decl_stmt|;
DECL|field|externalFilesPanel
specifier|private
specifier|final
name|JPanel
name|externalFilesPanel
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
DECL|field|addExtPan
specifier|private
specifier|final
name|JPanel
name|addExtPan
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
DECL|field|nameTf
specifier|private
specifier|final
name|JTextField
name|nameTf
init|=
operator|new
name|JTextField
argument_list|()
decl_stmt|;
DECL|field|newNameTf
specifier|private
specifier|final
name|JTextField
name|newNameTf
init|=
operator|new
name|JTextField
argument_list|()
decl_stmt|;
DECL|field|abbrTf
specifier|private
specifier|final
name|JTextField
name|abbrTf
init|=
operator|new
name|JTextField
argument_list|()
decl_stmt|;
DECL|field|externals
specifier|private
specifier|final
name|List
argument_list|<
name|ExternalFileEntry
argument_list|>
name|externals
init|=
operator|new
name|ArrayList
argument_list|<
name|ExternalFileEntry
argument_list|>
argument_list|()
decl_stmt|;
comment|// To hold references to external journal lists.
DECL|field|dialog
specifier|private
specifier|final
name|JDialog
name|dialog
decl_stmt|;
DECL|field|newFile
specifier|private
specifier|final
name|JRadioButton
name|newFile
init|=
operator|new
name|JRadioButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"New file"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|oldFile
specifier|private
specifier|final
name|JRadioButton
name|oldFile
init|=
operator|new
name|JRadioButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Existing file"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|add
specifier|private
specifier|final
name|JButton
name|add
init|=
operator|new
name|JButton
argument_list|(
name|GUIGlobals
operator|.
name|getImage
argument_list|(
literal|"add"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|remove
specifier|private
specifier|final
name|JButton
name|remove
init|=
operator|new
name|JButton
argument_list|(
name|GUIGlobals
operator|.
name|getImage
argument_list|(
literal|"remove"
argument_list|)
argument_list|)
decl_stmt|;
DECL|method|ManageJournalsPanel (final JabRefFrame frame)
specifier|public
name|ManageJournalsPanel
parameter_list|(
specifier|final
name|JabRefFrame
name|frame
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|personalFile
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|ButtonGroup
name|group
init|=
operator|new
name|ButtonGroup
argument_list|()
decl_stmt|;
name|group
operator|.
name|add
argument_list|(
name|newFile
argument_list|)
expr_stmt|;
name|group
operator|.
name|add
argument_list|(
name|oldFile
argument_list|)
expr_stmt|;
name|addExtPan
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|JButton
name|addExt
init|=
operator|new
name|JButton
argument_list|(
name|GUIGlobals
operator|.
name|getImage
argument_list|(
literal|"add"
argument_list|)
argument_list|)
decl_stmt|;
name|addExtPan
operator|.
name|add
argument_list|(
name|addExt
argument_list|,
name|BorderLayout
operator|.
name|EAST
argument_list|)
expr_stmt|;
name|addExtPan
operator|.
name|setToolTipText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Add"
argument_list|)
argument_list|)
expr_stmt|;
comment|//addExtPan.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.red));
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"1dlu, 8dlu, left:pref, 4dlu, fill:200dlu:grow, 4dlu, fill:pref"
argument_list|,
comment|// 4dlu, left:pref, 4dlu",
literal|"pref, pref, pref, 20dlu, 20dlu, fill:200dlu, 4dlu, pref"
argument_list|)
decl_stmt|;
comment|//150dlu");
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
comment|/*JLabel description = new JLabel("<HTML>"+Glbals.lang("JabRef can switch journal names between "             +"abbreviated and full form. Since it knows only a limited number of journal names, "             +"you may need to add your own definitions.")+"</HTML>");*/
name|builder
operator|.
name|addSeparator
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Built-in journal list"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|JLabel
name|description
init|=
operator|new
name|JLabel
argument_list|(
literal|"<HTML>"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"JabRef includes a built-in list of journal abbreviations."
argument_list|)
operator|+
literal|"<br>"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"You can add additional journal names by setting up a personal journal list,<br>as "
operator|+
literal|"well as linking to external journal lists."
argument_list|)
operator|+
literal|"</HTML>"
argument_list|)
decl_stmt|;
name|description
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|description
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|JButton
name|viewBuiltin
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"View"
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|viewBuiltin
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|7
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Personal journal list"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
comment|//builder.add(description, cc.xyw(2,1,6));
name|builder
operator|.
name|add
argument_list|(
name|newFile
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|newNameTf
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|5
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|JButton
name|browseNew
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Browse"
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|browseNew
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|7
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|oldFile
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|personalFile
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
comment|//BrowseAction action = new BrowseAction(personalFile, false);
comment|//JButton browse = new JButton(Globals.lang("Browse"));
comment|//browse.addActionListener(action);
name|JButton
name|browseOld
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Browse"
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|browseOld
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|7
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|userPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
comment|//builtInTable = new JTable(Globals.journalAbbrev.getTableModel());
name|builder
operator|.
name|add
argument_list|(
name|userPanel
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|6
argument_list|,
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|ButtonStackBuilder
name|butBul
init|=
operator|new
name|ButtonStackBuilder
argument_list|()
decl_stmt|;
name|butBul
operator|.
name|addButton
argument_list|(
name|add
argument_list|)
expr_stmt|;
name|butBul
operator|.
name|addButton
argument_list|(
name|remove
argument_list|)
expr_stmt|;
name|butBul
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|butBul
operator|.
name|getPanel
argument_list|()
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|7
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"External files"
argument_list|)
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|2
argument_list|,
literal|8
argument_list|,
literal|6
argument_list|)
argument_list|)
expr_stmt|;
name|externalFilesPanel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
comment|//builder.add(/*new JScrollPane(*/externalFilesPanel/*)*/, cc.xyw(2,8,6));
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|getPanel
argument_list|()
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
comment|//createMatteBorder(1,1,1,1,Color.green));
name|add
argument_list|(
name|builder
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|externalFilesPanel
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|ButtonBarBuilder
name|bb
init|=
operator|new
name|ButtonBarBuilder
argument_list|()
decl_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|JButton
name|ok
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Ok"
argument_list|)
argument_list|)
decl_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|ok
argument_list|)
expr_stmt|;
name|JButton
name|cancel
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
decl_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|cancel
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addUnrelatedGap
argument_list|()
expr_stmt|;
name|JButton
name|help
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Help"
argument_list|)
argument_list|)
decl_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|help
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|bb
operator|.
name|getPanel
argument_list|()
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|dialog
operator|=
operator|new
name|JDialog
argument_list|(
name|frame
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Journal abbreviations"
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|this
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|dialog
operator|.
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|bb
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
comment|//add(new JScrollPane(builtInTable), BorderLayout.CENTER);
comment|// Set up panel for editing a single journal, to be used in a dialog box:
name|FormLayout
name|layout2
init|=
operator|new
name|FormLayout
argument_list|(
literal|"right:pref, 4dlu, fill:180dlu"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder2
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout2
argument_list|)
decl_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Journal name"
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|nameTf
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"ISO abbreviation"
argument_list|)
argument_list|)
expr_stmt|;
name|builder2
operator|.
name|append
argument_list|(
name|abbrTf
argument_list|)
expr_stmt|;
name|journalEditPanel
operator|=
name|builder2
operator|.
name|getPanel
argument_list|()
expr_stmt|;
name|viewBuiltin
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|JournalAbbreviationRepository
name|abbr
init|=
operator|new
name|JournalAbbreviationRepository
argument_list|()
decl_stmt|;
name|abbr
operator|.
name|readJournalListFromResource
argument_list|(
name|Globals
operator|.
name|JOURNALS_FILE_BUILTIN
argument_list|)
expr_stmt|;
name|JTable
name|table
init|=
operator|new
name|JTable
argument_list|(
name|JournalAbbreviationsUtil
operator|.
name|getTableModel
argument_list|(
name|Globals
operator|.
name|journalAbbrev
argument_list|)
argument_list|)
decl_stmt|;
name|JScrollPane
name|pane
init|=
operator|new
name|JScrollPane
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|pane
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Journal list preview"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|INFORMATION_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|browseNew
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|File
name|old
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|newNameTf
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|old
operator|=
operator|new
name|File
argument_list|(
name|newNameTf
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|name
init|=
name|FileDialogs
operator|.
name|getNewFile
argument_list|(
name|frame
argument_list|,
name|old
argument_list|,
literal|null
argument_list|,
name|JFileChooser
operator|.
name|SAVE_DIALOG
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|newNameTf
operator|.
name|setText
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|newFile
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|browseOld
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|File
name|old
init|=
literal|null
decl_stmt|;
if|if
condition|(
operator|!
name|personalFile
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|old
operator|=
operator|new
name|File
argument_list|(
name|personalFile
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|String
name|name
init|=
name|FileDialogs
operator|.
name|getNewFile
argument_list|(
name|frame
argument_list|,
name|old
argument_list|,
literal|null
argument_list|,
name|JFileChooser
operator|.
name|OPEN_DIALOG
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|personalFile
operator|.
name|setText
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|oldFile
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|oldFile
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|setupUserTable
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|ok
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|readyToClose
argument_list|()
condition|)
block|{
try|try
block|{
name|storeSettings
argument_list|()
expr_stmt|;
name|dialog
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|ex
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error opening file"
argument_list|)
operator|+
literal|": "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error opening file"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|help
operator|.
name|addActionListener
argument_list|(
operator|new
name|HelpAction
argument_list|(
name|GUIGlobals
operator|.
name|helpDiag
argument_list|,
name|GUIGlobals
operator|.
name|journalAbbrHelp
argument_list|)
argument_list|)
expr_stmt|;
name|AbstractAction
name|cancelAction
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|dialog
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
decl_stmt|;
name|cancel
operator|.
name|addActionListener
argument_list|(
name|cancelAction
argument_list|)
expr_stmt|;
name|add
operator|.
name|addActionListener
argument_list|(
name|tableModel
argument_list|)
expr_stmt|;
name|remove
operator|.
name|addActionListener
argument_list|(
name|tableModel
argument_list|)
expr_stmt|;
name|addExt
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|externals
operator|.
name|add
argument_list|(
operator|new
name|ExternalFileEntry
argument_list|()
argument_list|)
expr_stmt|;
name|buildExternalsPanel
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// Key bindings:
name|ActionMap
name|am
init|=
name|getActionMap
argument_list|()
decl_stmt|;
name|InputMap
name|im
init|=
name|getInputMap
argument_list|(
name|JComponent
operator|.
name|WHEN_IN_FOCUSED_WINDOW
argument_list|)
decl_stmt|;
name|im
operator|.
name|put
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getKey
argument_list|(
literal|"Close dialog"
argument_list|)
argument_list|,
literal|"close"
argument_list|)
expr_stmt|;
name|am
operator|.
name|put
argument_list|(
literal|"close"
argument_list|,
name|cancelAction
argument_list|)
expr_stmt|;
comment|//dialog.pack();
name|int
name|xSize
init|=
name|getPreferredSize
argument_list|()
operator|.
name|width
decl_stmt|;
name|dialog
operator|.
name|setSize
argument_list|(
name|xSize
operator|+
literal|10
argument_list|,
literal|700
argument_list|)
expr_stmt|;
block|}
DECL|method|getDialog ()
specifier|public
name|JDialog
name|getDialog
parameter_list|()
block|{
return|return
name|dialog
return|;
block|}
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|personalFile
operator|.
name|setText
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|PERSONAL_JOURNAL_LIST
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|personalFile
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|newFile
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|oldFile
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|oldFile
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|oldFile
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|setupUserTable
argument_list|()
expr_stmt|;
name|setupExternals
argument_list|()
expr_stmt|;
name|buildExternalsPanel
argument_list|()
expr_stmt|;
block|}
DECL|method|buildExternalsPanel ()
specifier|private
name|void
name|buildExternalsPanel
parameter_list|()
block|{
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"fill:pref:grow"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|ExternalFileEntry
name|efe
range|:
name|externals
control|)
block|{
name|builder
operator|.
name|append
argument_list|(
name|efe
operator|.
name|getPanel
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
block|}
name|builder
operator|.
name|append
argument_list|(
name|Box
operator|.
name|createVerticalGlue
argument_list|()
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|addExtPan
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|Box
operator|.
name|createVerticalGlue
argument_list|()
argument_list|)
expr_stmt|;
comment|//builder.getPanel().setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.green));
comment|//externalFilesPanel.setBorder(BorderFactory.createMatteBorder(1,1,1,1,Color.red));
name|JScrollPane
name|pane
init|=
operator|new
name|JScrollPane
argument_list|(
name|builder
operator|.
name|getPanel
argument_list|()
argument_list|)
decl_stmt|;
name|pane
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|externalFilesPanel
operator|.
name|setMinimumSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|externalFilesPanel
operator|.
name|setPreferredSize
argument_list|(
operator|new
name|Dimension
argument_list|(
literal|400
argument_list|,
literal|400
argument_list|)
argument_list|)
expr_stmt|;
name|externalFilesPanel
operator|.
name|removeAll
argument_list|()
expr_stmt|;
name|externalFilesPanel
operator|.
name|add
argument_list|(
name|pane
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|externalFilesPanel
operator|.
name|revalidate
argument_list|()
expr_stmt|;
name|externalFilesPanel
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
DECL|method|setupExternals ()
specifier|private
name|void
name|setupExternals
parameter_list|()
block|{
name|String
index|[]
name|externalFiles
init|=
name|Globals
operator|.
name|prefs
operator|.
name|getStringArray
argument_list|(
name|JabRefPreferences
operator|.
name|EXTERNAL_JOURNAL_LISTS
argument_list|)
decl_stmt|;
if|if
condition|(
name|externalFiles
operator|==
literal|null
operator|||
name|externalFiles
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|ExternalFileEntry
name|efe
init|=
operator|new
name|ExternalFileEntry
argument_list|()
decl_stmt|;
name|externals
operator|.
name|add
argument_list|(
name|efe
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|String
name|externalFile
range|:
name|externalFiles
control|)
block|{
name|ExternalFileEntry
name|efe
init|=
operator|new
name|ExternalFileEntry
argument_list|(
name|externalFile
argument_list|)
decl_stmt|;
name|externals
operator|.
name|add
argument_list|(
name|efe
argument_list|)
expr_stmt|;
block|}
block|}
comment|//efe = new ExternalFileEntry();
comment|//externals.add(efe);
block|}
DECL|method|setupUserTable ()
specifier|private
name|void
name|setupUserTable
parameter_list|()
block|{
name|JournalAbbreviationRepository
name|userAbbr
init|=
operator|new
name|JournalAbbreviationRepository
argument_list|()
decl_stmt|;
name|String
name|filename
init|=
name|personalFile
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|filename
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
operator|&&
operator|new
name|File
argument_list|(
name|filename
argument_list|)
operator|.
name|exists
argument_list|()
condition|)
block|{
try|try
block|{
name|userAbbr
operator|.
name|readJournalListFromFile
argument_list|(
operator|new
name|File
argument_list|(
name|filename
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|tableModel
operator|.
name|setJournals
argument_list|(
name|userAbbr
operator|.
name|getAbbreviations
argument_list|()
argument_list|)
expr_stmt|;
name|userTable
operator|=
operator|new
name|JTable
argument_list|(
name|tableModel
argument_list|)
expr_stmt|;
name|userTable
operator|.
name|addMouseListener
argument_list|(
name|tableModel
operator|.
name|getMouseListener
argument_list|()
argument_list|)
expr_stmt|;
name|userPanel
operator|.
name|add
argument_list|(
operator|new
name|JScrollPane
argument_list|(
name|userTable
argument_list|)
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
DECL|method|readyToClose ()
specifier|private
name|boolean
name|readyToClose
parameter_list|()
block|{
name|File
name|f
decl_stmt|;
if|if
condition|(
name|newFile
operator|.
name|isSelected
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|newNameTf
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|f
operator|=
operator|new
name|File
argument_list|(
name|newNameTf
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
return|return
operator|!
name|f
operator|.
name|exists
argument_list|()
operator|||
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|this
argument_list|,
literal|"'"
operator|+
name|f
operator|.
name|getName
argument_list|()
operator|+
literal|"' "
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"exists. Overwrite file?"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Store journal abbreviations"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|OK_CANCEL_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|OK_OPTION
return|;
block|}
else|else
block|{
if|if
condition|(
name|tableModel
operator|.
name|getRowCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"You must choose a file name to store journal abbreviations"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Store journal abbreviations"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
else|else
block|{
return|return
literal|true
return|;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
DECL|method|storeSettings ()
specifier|private
name|void
name|storeSettings
parameter_list|()
throws|throws
name|FileNotFoundException
block|{
name|File
name|f
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|newFile
operator|.
name|isSelected
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|newNameTf
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|f
operator|=
operator|new
name|File
argument_list|(
name|newNameTf
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// else {
comment|//    return; // Nothing to do.
comment|//}
block|}
else|else
block|{
name|f
operator|=
operator|new
name|File
argument_list|(
name|personalFile
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|f
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|f
operator|.
name|exists
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|FileNotFoundException
argument_list|(
name|f
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
throw|;
block|}
name|FileWriter
name|fw
init|=
literal|null
decl_stmt|;
try|try
block|{
name|fw
operator|=
operator|new
name|FileWriter
argument_list|(
name|f
argument_list|,
literal|false
argument_list|)
expr_stmt|;
for|for
control|(
name|JournalEntry
name|entry
range|:
name|tableModel
operator|.
name|getJournals
argument_list|()
control|)
block|{
name|fw
operator|.
name|write
argument_list|(
name|entry
operator|.
name|name
argument_list|)
expr_stmt|;
name|fw
operator|.
name|write
argument_list|(
literal|" = "
argument_list|)
expr_stmt|;
name|fw
operator|.
name|write
argument_list|(
name|entry
operator|.
name|abbreviation
argument_list|)
expr_stmt|;
name|fw
operator|.
name|write
argument_list|(
name|Globals
operator|.
name|NEWLINE
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|fw
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|fw
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
block|}
name|String
name|filename
init|=
name|f
operator|.
name|getPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|filename
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|filename
operator|=
literal|null
expr_stmt|;
block|}
name|Globals
operator|.
name|prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|PERSONAL_JOURNAL_LIST
argument_list|,
name|filename
argument_list|)
expr_stmt|;
block|}
comment|// Store the list of external files set up:
name|ArrayList
argument_list|<
name|String
argument_list|>
name|extFiles
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|ExternalFileEntry
name|efe
range|:
name|externals
control|)
block|{
if|if
condition|(
operator|!
name|efe
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
literal|""
argument_list|)
condition|)
block|{
name|extFiles
operator|.
name|add
argument_list|(
name|efe
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|extFiles
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|Globals
operator|.
name|prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|EXTERNAL_JOURNAL_LISTS
argument_list|,
literal|""
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
index|[]
name|list
init|=
name|extFiles
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
name|extFiles
operator|.
name|size
argument_list|()
index|]
argument_list|)
decl_stmt|;
name|Globals
operator|.
name|prefs
operator|.
name|putStringArray
argument_list|(
name|JabRefPreferences
operator|.
name|EXTERNAL_JOURNAL_LISTS
argument_list|,
name|list
argument_list|)
expr_stmt|;
block|}
name|Globals
operator|.
name|initializeJournalNames
argument_list|()
expr_stmt|;
comment|// Update the autocompleter for the "journal" field in all base panels,
comment|// so added journal names are available:
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|frame
operator|.
name|baseCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|frame
operator|.
name|baseAt
argument_list|(
name|i
argument_list|)
operator|.
name|getAutoCompleters
argument_list|()
operator|.
name|addJournalListToAutoCompleter
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|DownloadAction
class|class
name|DownloadAction
extends|extends
name|AbstractAction
block|{
DECL|field|comp
specifier|final
name|JTextField
name|comp
decl_stmt|;
DECL|method|DownloadAction (JTextField tc)
specifier|public
name|DownloadAction
parameter_list|(
name|JTextField
name|tc
parameter_list|)
block|{
name|super
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Download"
argument_list|)
argument_list|)
expr_stmt|;
name|comp
operator|=
name|tc
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|String
name|chosen
decl_stmt|;
name|chosen
operator|=
name|JOptionPane
operator|.
name|showInputDialog
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Choose the URL to download. The default value points to a list provided by the JabRef developers."
argument_list|)
argument_list|,
literal|"http://jabref.sf.net/journals/journal_abbreviations_general.txt"
argument_list|)
expr_stmt|;
if|if
condition|(
name|chosen
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|File
name|toFile
decl_stmt|;
try|try
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|chosen
argument_list|)
decl_stmt|;
name|String
name|toName
init|=
name|FileDialogs
operator|.
name|getNewFile
argument_list|(
name|frame
argument_list|,
operator|new
name|File
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
argument_list|)
argument_list|,
literal|null
argument_list|,
name|JFileChooser
operator|.
name|SAVE_DIALOG
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|toName
operator|==
literal|null
condition|)
block|{
return|return;
block|}
else|else
block|{
name|toFile
operator|=
operator|new
name|File
argument_list|(
name|toName
argument_list|)
expr_stmt|;
block|}
name|MonitoredURLDownload
operator|.
name|buildMonitoredDownload
argument_list|(
name|comp
argument_list|,
name|url
argument_list|)
operator|.
name|downloadToFile
argument_list|(
name|toFile
argument_list|)
expr_stmt|;
name|comp
operator|.
name|setText
argument_list|(
name|toFile
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error downloading file '%0'"
argument_list|,
name|chosen
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Download failed"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|BrowseAction
class|class
name|BrowseAction
extends|extends
name|AbstractAction
block|{
DECL|field|comp
specifier|final
name|JTextField
name|comp
decl_stmt|;
DECL|field|dir
specifier|final
name|boolean
name|dir
decl_stmt|;
DECL|method|BrowseAction (JTextField tc, boolean dir)
specifier|public
name|BrowseAction
parameter_list|(
name|JTextField
name|tc
parameter_list|,
name|boolean
name|dir
parameter_list|)
block|{
name|super
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Browse"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|dir
operator|=
name|dir
expr_stmt|;
name|comp
operator|=
name|tc
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|String
name|chosen
decl_stmt|;
if|if
condition|(
name|dir
condition|)
block|{
name|chosen
operator|=
name|FileDialogs
operator|.
name|getNewDir
argument_list|(
name|frame
argument_list|,
operator|new
name|File
argument_list|(
name|comp
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|,
name|Globals
operator|.
name|NONE
argument_list|,
name|JFileChooser
operator|.
name|OPEN_DIALOG
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|chosen
operator|=
name|FileDialogs
operator|.
name|getNewFile
argument_list|(
name|frame
argument_list|,
operator|new
name|File
argument_list|(
name|comp
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|,
name|Globals
operator|.
name|NONE
argument_list|,
name|JFileChooser
operator|.
name|OPEN_DIALOG
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|chosen
operator|!=
literal|null
condition|)
block|{
name|File
name|newFile
init|=
operator|new
name|File
argument_list|(
name|chosen
argument_list|)
decl_stmt|;
name|comp
operator|.
name|setText
argument_list|(
name|newFile
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|class|AbbreviationsTableModel
class|class
name|AbbreviationsTableModel
extends|extends
name|AbstractTableModel
implements|implements
name|ActionListener
block|{
DECL|field|names
specifier|final
name|String
index|[]
name|names
init|=
operator|new
name|String
index|[]
block|{
name|Localization
operator|.
name|lang
argument_list|(
literal|"Journal name"
argument_list|)
block|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Abbreviation"
argument_list|)
block|}
decl_stmt|;
DECL|field|journals
name|List
argument_list|<
name|JournalEntry
argument_list|>
name|journals
decl_stmt|;
DECL|method|AbbreviationsTableModel ()
specifier|public
name|AbbreviationsTableModel
parameter_list|()
block|{          }
DECL|method|setJournals (SortedSet<Abbreviation> journals)
specifier|public
name|void
name|setJournals
parameter_list|(
name|SortedSet
argument_list|<
name|Abbreviation
argument_list|>
name|journals
parameter_list|)
block|{
name|this
operator|.
name|journals
operator|=
operator|new
name|ArrayList
argument_list|<
name|JournalEntry
argument_list|>
argument_list|()
expr_stmt|;
for|for
control|(
name|Abbreviation
name|abbreviation
range|:
name|journals
control|)
block|{
name|this
operator|.
name|journals
operator|.
name|add
argument_list|(
operator|new
name|JournalEntry
argument_list|(
name|abbreviation
operator|.
name|getName
argument_list|()
argument_list|,
name|abbreviation
operator|.
name|getIsoAbbreviation
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|fireTableDataChanged
argument_list|()
expr_stmt|;
block|}
DECL|method|getJournals ()
specifier|public
name|List
argument_list|<
name|JournalEntry
argument_list|>
name|getJournals
parameter_list|()
block|{
return|return
name|journals
return|;
block|}
annotation|@
name|Override
DECL|method|getColumnCount ()
specifier|public
name|int
name|getColumnCount
parameter_list|()
block|{
return|return
literal|2
return|;
block|}
annotation|@
name|Override
DECL|method|getRowCount ()
specifier|public
name|int
name|getRowCount
parameter_list|()
block|{
return|return
name|journals
operator|.
name|size
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getValueAt (int row, int col)
specifier|public
name|Object
name|getValueAt
parameter_list|(
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|)
block|{
if|if
condition|(
name|col
operator|==
literal|0
condition|)
block|{
return|return
name|journals
operator|.
name|get
argument_list|(
name|row
argument_list|)
operator|.
name|name
return|;
block|}
else|else
block|{
return|return
name|journals
operator|.
name|get
argument_list|(
name|row
argument_list|)
operator|.
name|abbreviation
return|;
block|}
block|}
annotation|@
name|Override
DECL|method|setValueAt (Object object, int row, int col)
specifier|public
name|void
name|setValueAt
parameter_list|(
name|Object
name|object
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|col
parameter_list|)
block|{
name|JournalEntry
name|entry
init|=
name|journals
operator|.
name|get
argument_list|(
name|row
argument_list|)
decl_stmt|;
if|if
condition|(
name|col
operator|==
literal|0
condition|)
block|{
name|entry
operator|.
name|name
operator|=
operator|(
name|String
operator|)
name|object
expr_stmt|;
block|}
else|else
block|{
name|entry
operator|.
name|abbreviation
operator|=
operator|(
name|String
operator|)
name|object
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|getColumnName (int i)
specifier|public
name|String
name|getColumnName
parameter_list|(
name|int
name|i
parameter_list|)
block|{
return|return
name|names
index|[
name|i
index|]
return|;
block|}
annotation|@
name|Override
DECL|method|isCellEditable (int i, int i1)
specifier|public
name|boolean
name|isCellEditable
parameter_list|(
name|int
name|i
parameter_list|,
name|int
name|i1
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
DECL|method|getMouseListener ()
specifier|public
name|MouseListener
name|getMouseListener
parameter_list|()
block|{
return|return
operator|new
name|MouseAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getClickCount
argument_list|()
operator|==
literal|2
condition|)
block|{
name|JTable
name|table
init|=
operator|(
name|JTable
operator|)
name|e
operator|.
name|getSource
argument_list|()
decl_stmt|;
name|int
name|row
init|=
name|table
operator|.
name|rowAtPoint
argument_list|(
name|e
operator|.
name|getPoint
argument_list|()
argument_list|)
decl_stmt|;
name|nameTf
operator|.
name|setText
argument_list|(
operator|(
name|String
operator|)
name|getValueAt
argument_list|(
name|row
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|abbrTf
operator|.
name|setText
argument_list|(
operator|(
name|String
operator|)
name|getValueAt
argument_list|(
name|row
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|dialog
argument_list|,
name|journalEditPanel
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Edit journal"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|OK_CANCEL_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|OK_OPTION
condition|)
block|{
name|setValueAt
argument_list|(
name|nameTf
operator|.
name|getText
argument_list|()
argument_list|,
name|row
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|setValueAt
argument_list|(
name|abbrTf
operator|.
name|getText
argument_list|()
argument_list|,
name|row
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|journals
argument_list|)
expr_stmt|;
name|fireTableDataChanged
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
return|;
block|}
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getSource
argument_list|()
operator|==
name|add
condition|)
block|{
comment|//int sel = userTable.getSelectedRow();
comment|//if (sel< 0)
comment|//    sel = 0;
name|nameTf
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|abbrTf
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|dialog
argument_list|,
name|journalEditPanel
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Edit journal"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|OK_CANCEL_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|OK_OPTION
condition|)
block|{
name|journals
operator|.
name|add
argument_list|(
operator|new
name|JournalEntry
argument_list|(
name|nameTf
operator|.
name|getText
argument_list|()
argument_list|,
name|abbrTf
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|//setValueAt(nameTf.getText(), sel, 0);
comment|//setValueAt(abbrTf.getText(), sel, 1);
name|Collections
operator|.
name|sort
argument_list|(
name|journals
argument_list|)
expr_stmt|;
name|fireTableDataChanged
argument_list|()
expr_stmt|;
block|}
block|}
elseif|else
if|if
condition|(
name|e
operator|.
name|getSource
argument_list|()
operator|==
name|remove
condition|)
block|{
name|int
index|[]
name|rows
init|=
name|userTable
operator|.
name|getSelectedRows
argument_list|()
decl_stmt|;
if|if
condition|(
name|rows
operator|.
name|length
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
name|rows
operator|.
name|length
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|journals
operator|.
name|remove
argument_list|(
name|rows
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
name|fireTableDataChanged
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|class|ExternalFileEntry
class|class
name|ExternalFileEntry
block|{
DECL|field|pan
specifier|private
name|JPanel
name|pan
decl_stmt|;
DECL|field|tf
specifier|private
specifier|final
name|JTextField
name|tf
decl_stmt|;
DECL|field|browse
specifier|private
specifier|final
name|JButton
name|browse
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Browse"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|view
specifier|private
specifier|final
name|JButton
name|view
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Preview"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|clear
specifier|private
specifier|final
name|JButton
name|clear
init|=
operator|new
name|JButton
argument_list|(
name|GUIGlobals
operator|.
name|getImage
argument_list|(
literal|"delete"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|download
specifier|private
specifier|final
name|JButton
name|download
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Download"
argument_list|)
argument_list|)
decl_stmt|;
DECL|method|ExternalFileEntry ()
specifier|public
name|ExternalFileEntry
parameter_list|()
block|{
name|tf
operator|=
operator|new
name|JTextField
argument_list|()
expr_stmt|;
name|setupPanel
argument_list|()
expr_stmt|;
block|}
DECL|method|ExternalFileEntry (String filename)
specifier|public
name|ExternalFileEntry
parameter_list|(
name|String
name|filename
parameter_list|)
block|{
name|tf
operator|=
operator|new
name|JTextField
argument_list|(
name|filename
argument_list|)
expr_stmt|;
name|setupPanel
argument_list|()
expr_stmt|;
block|}
DECL|method|setupPanel ()
specifier|private
name|void
name|setupPanel
parameter_list|()
block|{
name|tf
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|BrowseAction
name|browseA
init|=
operator|new
name|BrowseAction
argument_list|(
name|tf
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|browse
operator|.
name|addActionListener
argument_list|(
name|browseA
argument_list|)
expr_stmt|;
name|DownloadAction
name|da
init|=
operator|new
name|DownloadAction
argument_list|(
name|tf
argument_list|)
decl_stmt|;
name|download
operator|.
name|addActionListener
argument_list|(
name|da
argument_list|)
expr_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"fill:pref:grow, 4dlu, fill:pref, 4dlu, fill:pref, 4dlu, fill:pref, 4dlu, fill:pref"
argument_list|,
literal|""
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|tf
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|browse
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|download
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|clear
argument_list|)
expr_stmt|;
name|pan
operator|=
name|builder
operator|.
name|getPanel
argument_list|()
expr_stmt|;
name|view
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
try|try
block|{
name|JournalAbbreviationRepository
name|abbr
init|=
operator|new
name|JournalAbbreviationRepository
argument_list|()
decl_stmt|;
name|abbr
operator|.
name|readJournalListFromFile
argument_list|(
operator|new
name|File
argument_list|(
name|tf
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|JTable
name|table
init|=
operator|new
name|JTable
argument_list|(
name|JournalAbbreviationsUtil
operator|.
name|getTableModel
argument_list|(
name|Globals
operator|.
name|journalAbbrev
argument_list|)
argument_list|)
decl_stmt|;
name|JScrollPane
name|pane
init|=
operator|new
name|JScrollPane
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|pane
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Journal list preview"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|INFORMATION_MESSAGE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|ex
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"File '%0' not found"
argument_list|,
name|tf
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|clear
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|externals
operator|.
name|remove
argument_list|(
name|ExternalFileEntry
operator|.
name|this
argument_list|)
expr_stmt|;
name|buildExternalsPanel
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|clear
operator|.
name|setToolTipText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Remove"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getPanel ()
specifier|public
name|JPanel
name|getPanel
parameter_list|()
block|{
return|return
name|pan
return|;
block|}
DECL|method|getValue ()
specifier|public
name|String
name|getValue
parameter_list|()
block|{
return|return
name|tf
operator|.
name|getText
argument_list|()
return|;
block|}
block|}
DECL|class|JournalEntry
specifier|static
class|class
name|JournalEntry
implements|implements
name|Comparable
argument_list|<
name|JournalEntry
argument_list|>
block|{
DECL|field|name
name|String
name|name
decl_stmt|;
DECL|field|abbreviation
name|String
name|abbreviation
decl_stmt|;
DECL|method|JournalEntry (String name, String abbreviation)
specifier|public
name|JournalEntry
parameter_list|(
name|String
name|name
parameter_list|,
name|String
name|abbreviation
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
name|this
operator|.
name|abbreviation
operator|=
name|abbreviation
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|compareTo (JournalEntry other)
specifier|public
name|int
name|compareTo
parameter_list|(
name|JournalEntry
name|other
parameter_list|)
block|{
return|return
name|this
operator|.
name|name
operator|.
name|compareTo
argument_list|(
name|other
operator|.
name|name
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

