begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.actions
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|exporter
operator|.
name|AutoSaveManager
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|exporter
operator|.
name|SaveDatabaseAction
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|CloseDatabaseAction
specifier|public
class|class
name|CloseDatabaseAction
extends|extends
name|MnemonicAwareAction
block|{
DECL|field|frame
specifier|private
name|DragDropPopupPane
name|frame
decl_stmt|;
DECL|field|mode
specifier|private
name|CloseMode
name|mode
decl_stmt|;
DECL|method|CloseDatabaseAction (DragDropPopupPane pane)
specifier|public
name|CloseDatabaseAction
parameter_list|(
name|DragDropPopupPane
name|pane
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|pane
expr_stmt|;
name|mode
operator|=
name|CloseMode
operator|.
name|CURRENT
expr_stmt|;
block|}
DECL|method|CloseDatabaseAction (DragDropPopupPane pane, CloseMode mode)
specifier|public
name|CloseDatabaseAction
parameter_list|(
name|DragDropPopupPane
name|pane
parameter_list|,
name|CloseMode
name|mode
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|pane
expr_stmt|;
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
specifier|final
name|BasePanel
name|active
init|=
operator|(
name|BasePanel
operator|)
name|frame
operator|.
name|getSelectedComponent
argument_list|()
decl_stmt|;
specifier|final
name|Component
index|[]
name|panels
init|=
name|frame
operator|.
name|getComponents
argument_list|()
decl_stmt|;
if|if
condition|(
name|mode
operator|==
name|CloseMode
operator|.
name|CURRENT
condition|)
block|{
name|closeTab
argument_list|(
name|active
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|mode
operator|==
name|CloseMode
operator|.
name|OTHER
condition|)
block|{
for|for
control|(
name|Component
name|p
range|:
name|panels
control|)
block|{
if|if
condition|(
name|p
operator|!=
name|active
condition|)
block|{
name|closeTab
argument_list|(
operator|(
name|BasePanel
operator|)
name|p
argument_list|)
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
while|while
condition|(
operator|(
name|BasePanel
operator|)
name|frame
operator|.
name|getSelectedComponent
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|closeTab
argument_list|(
operator|(
name|BasePanel
operator|)
name|frame
operator|.
name|getSelectedComponent
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|closeTab (BasePanel panel)
specifier|private
name|void
name|closeTab
parameter_list|(
name|BasePanel
name|panel
parameter_list|)
block|{
comment|// TODO: this menu should be tab based not on the DragDropPopupPane
comment|// empty tab without database
if|if
condition|(
name|panel
operator|==
literal|null
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|panel
operator|.
name|isModified
argument_list|()
condition|)
block|{
if|if
condition|(
name|confirmClose
argument_list|(
name|panel
argument_list|)
condition|)
block|{
name|close
argument_list|(
name|panel
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|close
argument_list|(
name|panel
argument_list|)
expr_stmt|;
block|}
block|}
comment|// Ask if the user really wants to close, if the base has not been saved
DECL|method|confirmClose (BasePanel panel)
specifier|private
name|boolean
name|confirmClose
parameter_list|(
name|BasePanel
name|panel
parameter_list|)
block|{
name|boolean
name|close
init|=
literal|false
decl_stmt|;
name|String
name|filename
decl_stmt|;
if|if
condition|(
name|panel
operator|.
name|getDatabaseFile
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|filename
operator|=
name|panel
operator|.
name|getDatabaseFile
argument_list|()
operator|.
name|getAbsolutePath
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|filename
operator|=
name|GUIGlobals
operator|.
name|untitledTitle
expr_stmt|;
block|}
name|int
name|answer
init|=
name|JabRefFrame
operator|.
name|showSaveDialog
argument_list|(
name|filename
argument_list|)
decl_stmt|;
if|if
condition|(
name|answer
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
block|{
comment|// The user wants to save.
try|try
block|{
name|SaveDatabaseAction
name|saveAction
init|=
operator|new
name|SaveDatabaseAction
argument_list|(
name|panel
argument_list|)
decl_stmt|;
name|saveAction
operator|.
name|runCommand
argument_list|()
expr_stmt|;
if|if
condition|(
name|saveAction
operator|.
name|isSuccess
argument_list|()
condition|)
block|{
name|close
operator|=
literal|true
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|Throwable
name|ex
parameter_list|)
block|{
comment|// do not close
block|}
block|}
elseif|else
if|if
condition|(
name|answer
operator|==
name|JOptionPane
operator|.
name|NO_OPTION
condition|)
block|{
comment|// discard changes
name|close
operator|=
literal|true
expr_stmt|;
block|}
return|return
name|close
return|;
block|}
DECL|method|close (BasePanel panel)
specifier|private
name|void
name|close
parameter_list|(
name|BasePanel
name|panel
parameter_list|)
block|{
name|panel
operator|.
name|cleanUp
argument_list|()
expr_stmt|;
name|AutoSaveManager
operator|.
name|deleteAutoSaveFile
argument_list|(
name|panel
argument_list|)
expr_stmt|;
name|frame
operator|.
name|remove
argument_list|(
name|panel
argument_list|)
expr_stmt|;
if|if
condition|(
name|frame
operator|.
name|getTabCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|frame
operator|.
name|markActiveBasePanel
argument_list|()
expr_stmt|;
block|}
name|frame
operator|.
name|setWindowTitle
argument_list|()
expr_stmt|;
name|frame
operator|.
name|updateEnabledState
argument_list|()
expr_stmt|;
comment|// FIXME: Man, this is what I call a bug that this is not called.
name|frame
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Closed database"
argument_list|)
operator|+
literal|'.'
argument_list|)
expr_stmt|;
comment|// update tab titles
name|frame
operator|.
name|updateAllTabTitles
argument_list|()
expr_stmt|;
block|}
DECL|enum|CloseMode
specifier|public
enum|enum
name|CloseMode
block|{
DECL|enumConstant|CURRENT
name|CURRENT
block|,
DECL|enumConstant|OTHER
name|OTHER
block|,
DECL|enumConstant|ALL
name|ALL
block|}
block|}
end_class

end_unit

