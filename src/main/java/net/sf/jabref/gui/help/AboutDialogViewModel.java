begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2016 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.gui.help
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|help
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ReadOnlyStringProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ReadOnlyStringWrapper
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|FXML
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|Stage
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefGUI
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|ClipBoardManager
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|desktop
operator|.
name|JabRefDesktop
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_class
DECL|class|AboutDialogViewModel
specifier|public
class|class
name|AboutDialogViewModel
block|{
DECL|field|logger
specifier|private
specifier|final
name|Log
name|logger
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|AboutDialogViewModel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|website
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|website
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
DECL|field|websiteLibraries
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|websiteLibraries
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
DECL|field|websiteGithub
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|websiteGithub
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
DECL|field|license
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|license
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
DECL|field|heading
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|heading
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
DECL|field|years
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|years
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
DECL|field|authors
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|authors
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
DECL|field|developers
specifier|private
specifier|final
name|ReadOnlyStringWrapper
name|developers
init|=
operator|new
name|ReadOnlyStringWrapper
argument_list|()
decl_stmt|;
annotation|@
name|FXML
DECL|field|closeButton
specifier|private
name|Button
name|closeButton
decl_stmt|;
annotation|@
name|FXML
DECL|method|initialize ()
specifier|private
name|void
name|initialize
parameter_list|()
block|{
name|heading
operator|.
name|set
argument_list|(
literal|"JabRef "
operator|+
name|Globals
operator|.
name|BUILD_INFO
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|years
operator|.
name|set
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"2003-%s"
argument_list|,
name|Globals
operator|.
name|BUILD_INFO
operator|.
name|getYear
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|website
operator|.
name|set
argument_list|(
literal|"http://www.jabref.org"
argument_list|)
expr_stmt|;
name|license
operator|.
name|set
argument_list|(
literal|"GNU General Public License v2 or later"
argument_list|)
expr_stmt|;
name|developers
operator|.
name|set
argument_list|(
name|Globals
operator|.
name|BUILD_INFO
operator|.
name|getDevelopers
argument_list|()
argument_list|)
expr_stmt|;
name|authors
operator|.
name|set
argument_list|(
name|Globals
operator|.
name|BUILD_INFO
operator|.
name|getAuthors
argument_list|()
argument_list|)
expr_stmt|;
name|websiteLibraries
operator|.
name|set
argument_list|(
literal|"https://github.com/JabRef/jabref/blob/master/external-libraries.txt"
argument_list|)
expr_stmt|;
name|websiteGithub
operator|.
name|set
argument_list|(
literal|"https://github.com/JabRef/jabref"
argument_list|)
expr_stmt|;
block|}
DECL|method|websiteProperty ()
specifier|public
name|ReadOnlyStringProperty
name|websiteProperty
parameter_list|()
block|{
return|return
name|website
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getWebsite ()
specifier|public
name|String
name|getWebsite
parameter_list|()
block|{
return|return
name|website
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|websiteLibrariesProperty ()
specifier|public
name|ReadOnlyStringProperty
name|websiteLibrariesProperty
parameter_list|()
block|{
return|return
name|websiteLibraries
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getWebsiteLibraries ()
specifier|public
name|String
name|getWebsiteLibraries
parameter_list|()
block|{
return|return
name|websiteLibraries
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|websiteGithubProperty ()
specifier|public
name|ReadOnlyStringProperty
name|websiteGithubProperty
parameter_list|()
block|{
return|return
name|websiteGithub
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getWebsiteGithub ()
specifier|public
name|String
name|getWebsiteGithub
parameter_list|()
block|{
return|return
name|websiteGithub
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|licenseProperty ()
specifier|public
name|ReadOnlyStringProperty
name|licenseProperty
parameter_list|()
block|{
return|return
name|license
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getLicense ()
specifier|public
name|String
name|getLicense
parameter_list|()
block|{
return|return
name|license
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|authorsProperty ()
specifier|public
name|ReadOnlyStringProperty
name|authorsProperty
parameter_list|()
block|{
return|return
name|authors
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getAuthors ()
specifier|public
name|String
name|getAuthors
parameter_list|()
block|{
return|return
name|authors
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|developersProperty ()
specifier|public
name|ReadOnlyStringProperty
name|developersProperty
parameter_list|()
block|{
return|return
name|developers
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getDevelopers ()
specifier|public
name|String
name|getDevelopers
parameter_list|()
block|{
return|return
name|developers
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|headingProperty ()
specifier|public
name|ReadOnlyStringProperty
name|headingProperty
parameter_list|()
block|{
return|return
name|heading
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getHeading ()
specifier|public
name|String
name|getHeading
parameter_list|()
block|{
return|return
name|heading
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|yearsProperty ()
specifier|public
name|ReadOnlyStringProperty
name|yearsProperty
parameter_list|()
block|{
return|return
name|years
operator|.
name|getReadOnlyProperty
argument_list|()
return|;
block|}
DECL|method|getYears ()
specifier|public
name|String
name|getYears
parameter_list|()
block|{
return|return
name|years
operator|.
name|get
argument_list|()
return|;
block|}
annotation|@
name|FXML
DECL|method|closeAboutDialog ()
specifier|private
name|void
name|closeAboutDialog
parameter_list|()
block|{
name|Stage
name|stage
init|=
operator|(
name|Stage
operator|)
name|closeButton
operator|.
name|getScene
argument_list|()
operator|.
name|getWindow
argument_list|()
decl_stmt|;
name|stage
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|FXML
DECL|method|copyVersionToClipboard ()
specifier|private
name|void
name|copyVersionToClipboard
parameter_list|()
block|{
operator|new
name|ClipBoardManager
argument_list|()
operator|.
name|setClipboardContents
argument_list|(
name|Globals
operator|.
name|BUILD_INFO
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|message
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s - %s"
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Copied version information to clipboard"
argument_list|)
argument_list|,
name|Globals
operator|.
name|BUILD_INFO
operator|.
name|getVersion
argument_list|()
argument_list|)
decl_stmt|;
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|output
argument_list|(
name|message
argument_list|)
expr_stmt|;
block|}
annotation|@
name|FXML
DECL|method|openJabrefWebsite ()
specifier|private
name|void
name|openJabrefWebsite
parameter_list|()
block|{
try|try
block|{
name|JabRefDesktop
operator|.
name|openBrowser
argument_list|(
name|website
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error"
argument_list|)
operator|+
literal|": "
operator|+
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Could not open default browser."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|FXML
DECL|method|openExternalLibrariesWebsite ()
specifier|private
name|void
name|openExternalLibrariesWebsite
parameter_list|()
block|{
try|try
block|{
name|JabRefDesktop
operator|.
name|openBrowser
argument_list|(
name|websiteLibraries
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error"
argument_list|)
operator|+
literal|": "
operator|+
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Could not open default browser."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|FXML
DECL|method|openGithub ()
specifier|private
name|void
name|openGithub
parameter_list|()
block|{
try|try
block|{
name|JabRefDesktop
operator|.
name|openBrowser
argument_list|(
name|websiteGithub
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error"
argument_list|)
operator|+
literal|": "
operator|+
name|e
operator|.
name|getLocalizedMessage
argument_list|()
argument_list|)
expr_stmt|;
name|logger
operator|.
name|debug
argument_list|(
literal|"Could not open default browser."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

