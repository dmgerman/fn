begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2011 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.gui
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|GUIGlobals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_class
DECL|class|SysTray
specifier|public
class|class
name|SysTray
block|{
DECL|field|frame
specifier|private
specifier|final
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|icon
specifier|private
specifier|final
name|TrayIcon
name|icon
decl_stmt|;
DECL|field|tray
specifier|private
name|SystemTray
name|tray
init|=
literal|null
decl_stmt|;
DECL|method|SysTray (JabRefFrame frame)
specifier|public
name|SysTray
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
specifier|final
name|ActionListener
name|showJabref
init|=
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|actionEvent
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|SysTray
operator|.
name|this
operator|.
name|frame
operator|.
name|showIfMinimizedToSysTray
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|MenuItem
name|showWindow
init|=
operator|new
name|MenuItem
argument_list|(
name|Globals
operator|.
name|lang
argument_list|(
literal|"Show"
argument_list|)
argument_list|)
decl_stmt|;
name|showWindow
operator|.
name|addActionListener
argument_list|(
name|showJabref
argument_list|)
expr_stmt|;
name|PopupMenu
name|popup
init|=
operator|new
name|PopupMenu
argument_list|()
decl_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|showWindow
argument_list|)
expr_stmt|;
name|ImageIcon
name|imic
init|=
operator|new
name|ImageIcon
argument_list|(
name|GUIGlobals
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"/images/icons/JabRef-icon-48.png"
argument_list|)
argument_list|)
decl_stmt|;
name|icon
operator|=
operator|new
name|TrayIcon
argument_list|(
name|imic
operator|.
name|getImage
argument_list|()
argument_list|,
literal|"JabRef"
argument_list|,
name|popup
argument_list|)
expr_stmt|;
name|icon
operator|.
name|setImageAutoSize
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|icon
operator|.
name|addMouseListener
argument_list|(
operator|new
name|MouseAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|mouseEvent
parameter_list|)
block|{
name|showJabref
operator|.
name|actionPerformed
argument_list|(
operator|new
name|ActionEvent
argument_list|(
name|mouseEvent
operator|.
name|getSource
argument_list|()
argument_list|,
literal|0
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|mousePressed
parameter_list|(
name|MouseEvent
name|mouseEvent
parameter_list|)
block|{
name|super
operator|.
name|mousePressed
argument_list|(
name|mouseEvent
argument_list|)
expr_stmt|;
comment|//To change body of overridden methods use File | Settings | File Templates.
block|}
annotation|@
name|Override
specifier|public
name|void
name|mouseReleased
parameter_list|(
name|MouseEvent
name|mouseEvent
parameter_list|)
block|{
name|super
operator|.
name|mouseReleased
argument_list|(
name|mouseEvent
argument_list|)
expr_stmt|;
comment|//To change body of overridden methods use File | Settings | File Templates.
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|SystemTray
operator|.
name|isSupported
argument_list|()
condition|)
block|{
name|tray
operator|=
name|SystemTray
operator|.
name|getSystemTray
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|show ()
specifier|public
name|void
name|show
parameter_list|()
block|{
if|if
condition|(
name|tray
operator|==
literal|null
condition|)
block|{
return|return;
block|}
try|try
block|{
name|tray
operator|.
name|add
argument_list|(
name|icon
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|AWTException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|hide ()
specifier|public
name|void
name|hide
parameter_list|()
block|{
if|if
condition|(
name|tray
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|tray
operator|.
name|remove
argument_list|(
name|icon
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

