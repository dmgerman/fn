begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.search
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|search
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|RenderingHints
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|FocusListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_comment
comment|/**  * A text field which displays a predefined text (e.g. "Search") if it has not the focus and no text is entered.  * Implementation based on https://gmigdos.wordpress.com/2010/03/30/java-a-custom-jtextfield-for-searching/  */
end_comment

begin_class
DECL|class|JSearchTextField
specifier|public
class|class
name|JSearchTextField
extends|extends
name|JTextField
implements|implements
name|FocusListener
block|{
DECL|field|textWhenNotFocused
specifier|private
name|String
name|textWhenNotFocused
decl_stmt|;
DECL|method|JSearchTextField ()
specifier|public
name|JSearchTextField
parameter_list|()
block|{
name|super
argument_list|()
expr_stmt|;
name|this
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|textWhenNotFocused
operator|=
literal|"Search..."
expr_stmt|;
name|this
operator|.
name|addFocusListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
DECL|method|getTextWhenNotFocused ()
specifier|public
name|String
name|getTextWhenNotFocused
parameter_list|()
block|{
return|return
name|this
operator|.
name|textWhenNotFocused
return|;
block|}
DECL|method|setTextWhenNotFocused (String newText)
specifier|public
name|void
name|setTextWhenNotFocused
parameter_list|(
name|String
name|newText
parameter_list|)
block|{
name|this
operator|.
name|textWhenNotFocused
operator|=
name|newText
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|paintComponent (Graphics g)
specifier|protected
name|void
name|paintComponent
parameter_list|(
name|Graphics
name|g
parameter_list|)
block|{
name|super
operator|.
name|paintComponent
argument_list|(
name|g
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|this
operator|.
name|hasFocus
argument_list|()
operator|&&
name|this
operator|.
name|getText
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|int
name|height
init|=
name|this
operator|.
name|getHeight
argument_list|()
decl_stmt|;
name|Font
name|prev
init|=
name|g
operator|.
name|getFont
argument_list|()
decl_stmt|;
name|Color
name|prevColor
init|=
name|g
operator|.
name|getColor
argument_list|()
decl_stmt|;
name|g
operator|.
name|setColor
argument_list|(
name|UIManager
operator|.
name|getColor
argument_list|(
literal|"textInactiveText"
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|h
init|=
name|g
operator|.
name|getFontMetrics
argument_list|()
operator|.
name|getHeight
argument_list|()
decl_stmt|;
name|int
name|textBottom
init|=
operator|(
operator|(
operator|(
name|height
operator|-
name|h
operator|)
operator|/
literal|2
operator|)
operator|+
name|h
operator|)
operator|-
literal|4
decl_stmt|;
name|int
name|x
init|=
name|this
operator|.
name|getInsets
argument_list|()
operator|.
name|left
decl_stmt|;
name|Graphics2D
name|g2d
init|=
operator|(
name|Graphics2D
operator|)
name|g
decl_stmt|;
name|RenderingHints
name|hints
init|=
name|g2d
operator|.
name|getRenderingHints
argument_list|()
decl_stmt|;
name|g2d
operator|.
name|setRenderingHint
argument_list|(
name|RenderingHints
operator|.
name|KEY_TEXT_ANTIALIASING
argument_list|,
name|RenderingHints
operator|.
name|VALUE_TEXT_ANTIALIAS_ON
argument_list|)
expr_stmt|;
name|g2d
operator|.
name|drawString
argument_list|(
name|textWhenNotFocused
argument_list|,
name|x
argument_list|,
name|textBottom
argument_list|)
expr_stmt|;
name|g2d
operator|.
name|setRenderingHints
argument_list|(
name|hints
argument_list|)
expr_stmt|;
name|g
operator|.
name|setFont
argument_list|(
name|prev
argument_list|)
expr_stmt|;
name|g
operator|.
name|setColor
argument_list|(
name|prevColor
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|focusGained (FocusEvent e)
specifier|public
name|void
name|focusGained
parameter_list|(
name|FocusEvent
name|e
parameter_list|)
block|{
name|this
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|focusLost (FocusEvent e)
specifier|public
name|void
name|focusLost
parameter_list|(
name|FocusEvent
name|e
parameter_list|)
block|{
name|this
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

