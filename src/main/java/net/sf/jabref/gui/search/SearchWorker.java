begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.search
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|search
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|worker
operator|.
name|AbstractWorker
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|SearchQuery
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|matchers
operator|.
name|SearchMatcher
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|SearchWorker
class|class
name|SearchWorker
extends|extends
name|AbstractWorker
block|{
DECL|field|basePanel
specifier|private
specifier|final
name|BasePanel
name|basePanel
decl_stmt|;
DECL|field|searchQuery
specifier|private
name|SearchQuery
name|searchQuery
decl_stmt|;
DECL|field|mode
specifier|private
name|SearchMode
name|mode
init|=
name|SearchMode
operator|.
name|FILTER
decl_stmt|;
DECL|field|hits
specifier|private
name|int
name|hits
init|=
literal|0
decl_stmt|;
DECL|method|SearchWorker (BasePanel basePanel)
specifier|public
name|SearchWorker
parameter_list|(
name|BasePanel
name|basePanel
parameter_list|)
block|{
name|this
operator|.
name|basePanel
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|basePanel
argument_list|)
expr_stmt|;
block|}
comment|/**      * Resets the information and display of the previous search.      */
DECL|method|restart ()
specifier|public
name|void
name|restart
parameter_list|()
block|{
if|if
condition|(
name|basePanel
operator|.
name|isShowingFloatSearch
argument_list|()
condition|)
block|{
name|basePanel
operator|.
name|mainTable
operator|.
name|stopShowingFloatSearch
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|basePanel
operator|.
name|isShowingFilterSearch
argument_list|()
condition|)
block|{
name|basePanel
operator|.
name|stopShowingSearchResults
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Initializes a new search.      */
DECL|method|initSearch (SearchQuery searchQuery, SearchMode mode)
specifier|public
name|void
name|initSearch
parameter_list|(
name|SearchQuery
name|searchQuery
parameter_list|,
name|SearchMode
name|mode
parameter_list|)
block|{
name|this
operator|.
name|searchQuery
operator|=
name|searchQuery
expr_stmt|;
if|if
condition|(
name|this
operator|.
name|mode
operator|!=
name|mode
condition|)
block|{
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
comment|// We changed search mode so reset information
name|restart
argument_list|()
expr_stmt|;
block|}
name|LogFactory
operator|.
name|getLog
argument_list|(
name|SearchWorker
operator|.
name|class
argument_list|)
operator|.
name|debug
argument_list|(
literal|"Search ("
operator|+
name|this
operator|.
name|mode
operator|.
name|getDisplayName
argument_list|()
operator|+
literal|"): "
operator|+
name|this
operator|.
name|searchQuery
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/* (non-Javadoc)      * @see net.sf.jabref.Worker#run()      */
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|this
operator|.
name|hits
operator|=
literal|0
expr_stmt|;
name|runNormal
argument_list|()
expr_stmt|;
block|}
comment|/**      * Searches for matches in the current database. Saves the number of matches in hits.      */
DECL|method|runNormal ()
specifier|private
name|void
name|runNormal
parameter_list|()
block|{
comment|// Search the current database
for|for
control|(
name|BibtexEntry
name|entry
range|:
name|basePanel
operator|.
name|getDatabase
argument_list|()
operator|.
name|getEntries
argument_list|()
control|)
block|{
name|boolean
name|hit
init|=
name|searchQuery
operator|.
name|isMatch
argument_list|(
name|entry
argument_list|)
decl_stmt|;
name|entry
operator|.
name|setSearchHit
argument_list|(
name|hit
argument_list|)
expr_stmt|;
if|if
condition|(
name|hit
condition|)
block|{
name|hits
operator|++
expr_stmt|;
block|}
block|}
block|}
comment|/* (non-Javadoc)      * @see net.sf.jabref.AbstractWorker#update()      */
annotation|@
name|Override
DECL|method|update ()
specifier|public
name|void
name|update
parameter_list|()
block|{
comment|// Show the result in the chosen way:
switch|switch
condition|(
name|mode
condition|)
block|{
case|case
name|FLOAT
case|:
name|updateFloat
argument_list|()
expr_stmt|;
break|break;
case|case
name|FILTER
case|:
name|updateFilter
argument_list|()
expr_stmt|;
break|break;
block|}
name|basePanel
operator|.
name|getSearchBar
argument_list|()
operator|.
name|updateResults
argument_list|(
name|hits
argument_list|,
name|searchQuery
operator|.
name|description
argument_list|)
expr_stmt|;
block|}
comment|/**      * Floats matches to the top of the entry table.      */
DECL|method|updateFloat ()
specifier|private
name|void
name|updateFloat
parameter_list|()
block|{
name|basePanel
operator|.
name|mainTable
operator|.
name|showFloatSearch
argument_list|(
operator|new
name|SearchMatcher
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|hits
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|basePanel
operator|.
name|mainTable
operator|.
name|getRowCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|basePanel
operator|.
name|mainTable
operator|.
name|setSelected
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Shows only matches in the entry table by removing non-hits.      */
DECL|method|updateFilter ()
specifier|private
name|void
name|updateFilter
parameter_list|()
block|{
name|basePanel
operator|.
name|setSearchMatcher
argument_list|(
operator|new
name|SearchMatcher
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|hits
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|basePanel
operator|.
name|mainTable
operator|.
name|getRowCount
argument_list|()
operator|>
literal|0
condition|)
block|{
name|basePanel
operator|.
name|mainTable
operator|.
name|setSelected
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

