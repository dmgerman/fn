begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui.specialfields
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|specialfields
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Icon
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|specialfields
operator|.
name|SpecialField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|specialfields
operator|.
name|SpecialFieldValue
import|;
end_import

begin_class
DECL|class|SpecialFieldViewModel
specifier|public
class|class
name|SpecialFieldViewModel
block|{
DECL|field|field
specifier|private
specifier|final
name|SpecialField
name|field
decl_stmt|;
DECL|method|SpecialFieldViewModel (SpecialField field)
specifier|public
name|SpecialFieldViewModel
parameter_list|(
name|SpecialField
name|field
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
block|}
DECL|method|getSpecialFieldAction (SpecialFieldValue value, JabRefFrame frame)
specifier|public
name|SpecialFieldAction
name|getSpecialFieldAction
parameter_list|(
name|SpecialFieldValue
name|value
parameter_list|,
name|JabRefFrame
name|frame
parameter_list|)
block|{
return|return
operator|new
name|SpecialFieldAction
argument_list|(
name|frame
argument_list|,
name|field
argument_list|,
name|value
operator|.
name|getFieldValue
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
argument_list|,
comment|// if field contains only one value, it has to be nulled
comment|// otherwise, another setting does not empty the field
name|field
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|,
name|getLocalization
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getRepresentingIcon ()
specifier|public
name|Icon
name|getRepresentingIcon
parameter_list|()
block|{
switch|switch
condition|(
name|field
condition|)
block|{
case|case
name|PRINTED
case|:
return|return
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|PRINTED
operator|.
name|getSmallIcon
argument_list|()
return|;
case|case
name|PRIORITY
case|:
return|return
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|PRIORITY
operator|.
name|getSmallIcon
argument_list|()
return|;
case|case
name|QUALITY
case|:
return|return
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|QUALITY
operator|.
name|getSmallIcon
argument_list|()
return|;
case|case
name|RANKING
case|:
return|return
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|RANKING
operator|.
name|getIcon
argument_list|()
return|;
case|case
name|READ_STATUS
case|:
return|return
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|READ_STATUS
operator|.
name|getSmallIcon
argument_list|()
return|;
case|case
name|RELEVANCE
case|:
return|return
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|RELEVANCE
operator|.
name|getSmallIcon
argument_list|()
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"There is no icon mapping for special field "
operator|+
name|field
argument_list|)
throw|;
block|}
block|}
DECL|method|getLocalization ()
specifier|public
name|String
name|getLocalization
parameter_list|()
block|{
switch|switch
condition|(
name|field
condition|)
block|{
case|case
name|PRINTED
case|:
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Printed"
argument_list|)
return|;
case|case
name|PRIORITY
case|:
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Priority"
argument_list|)
return|;
case|case
name|QUALITY
case|:
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Quality"
argument_list|)
return|;
case|case
name|RANKING
case|:
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Rank"
argument_list|)
return|;
case|case
name|READ_STATUS
case|:
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Read status"
argument_list|)
return|;
case|case
name|RELEVANCE
case|:
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Relevance"
argument_list|)
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"There is no icon mapping for special field "
operator|+
name|field
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

