begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.specialfields
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|specialfields
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|DatabaseChangeEvent
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|DatabaseChangeListener
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRef
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_class
DECL|class|SpecialFieldDatabaseChangeListener
specifier|public
class|class
name|SpecialFieldDatabaseChangeListener
implements|implements
name|DatabaseChangeListener
block|{
DECL|field|INSTANCE
specifier|private
specifier|static
name|SpecialFieldDatabaseChangeListener
name|INSTANCE
decl_stmt|;
annotation|@
name|Override
DECL|method|databaseChanged (DatabaseChangeEvent e)
specifier|public
name|void
name|databaseChanged
parameter_list|(
name|DatabaseChangeEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getType
argument_list|()
operator|==
name|DatabaseChangeEvent
operator|.
name|ChangeType
operator|.
name|ADDED_ENTRY
operator|&&
name|SpecialFieldsUtils
operator|.
name|keywordSyncEnabled
argument_list|()
condition|)
block|{
specifier|final
name|BibtexEntry
name|entry
init|=
name|e
operator|.
name|getEntry
argument_list|()
decl_stmt|;
comment|// NamedCompount code similar to SpecialFieldUpdateListener
name|NamedCompound
name|nc
init|=
operator|new
name|NamedCompound
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Synchronized special fields based on keywords"
argument_list|)
argument_list|)
decl_stmt|;
name|SpecialFieldsUtils
operator|.
name|syncSpecialFieldsFromKeywords
argument_list|(
name|entry
argument_list|,
name|nc
argument_list|)
expr_stmt|;
name|nc
operator|.
name|end
argument_list|()
expr_stmt|;
name|JabRef
operator|.
name|jrf
operator|.
name|getCurrentBasePanel
argument_list|()
operator|.
name|undoManager
operator|.
name|addEdit
argument_list|(
name|nc
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|getInstance ()
specifier|public
specifier|static
name|SpecialFieldDatabaseChangeListener
name|getInstance
parameter_list|()
block|{
if|if
condition|(
name|SpecialFieldDatabaseChangeListener
operator|.
name|INSTANCE
operator|==
literal|null
condition|)
block|{
name|SpecialFieldDatabaseChangeListener
operator|.
name|INSTANCE
operator|=
operator|new
name|SpecialFieldDatabaseChangeListener
argument_list|()
expr_stmt|;
block|}
return|return
name|SpecialFieldDatabaseChangeListener
operator|.
name|INSTANCE
return|;
block|}
block|}
end_class

end_unit

