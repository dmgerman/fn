begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2012 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.specialfields
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|specialfields
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefFrame
import|;
end_import

begin_class
DECL|class|SpecialFieldValue
specifier|public
class|class
name|SpecialFieldValue
block|{
DECL|field|field
specifier|private
specifier|final
name|SpecialField
name|field
decl_stmt|;
comment|// keyword used at keyword field
DECL|field|keyword
specifier|private
specifier|final
name|String
name|keyword
decl_stmt|;
comment|// action belonging to this value
DECL|field|actionName
specifier|private
specifier|final
name|String
name|actionName
decl_stmt|;
comment|// localized menu string used at menu / button
DECL|field|menuString
specifier|private
name|String
name|menuString
decl_stmt|;
DECL|field|action
specifier|private
name|SpecialFieldAction
name|action
init|=
literal|null
decl_stmt|;
DECL|field|menuAction
specifier|private
name|SpecialFieldMenuAction
name|menuAction
init|=
literal|null
decl_stmt|;
DECL|field|icon
specifier|private
name|ImageIcon
name|icon
decl_stmt|;
DECL|field|toolTipText
specifier|private
name|String
name|toolTipText
decl_stmt|;
comment|// value when used in a separate vield
comment|//private String fieldValue;
comment|/** 	 *  	 * @param field The special field this value is a value of 	 * @param keyword - The keyword to be used at BibTex's keyword field 	 * @param actionName - the action to call 	 * @param menuString - the string to display at a menu 	 * @param icon - the icon of this value 	 * @param toolTipText - the tool tip text 	 */
DECL|method|SpecialFieldValue ( SpecialField field, String keyword, String actionName, String menuString, ImageIcon icon, String toolTipText)
specifier|public
name|SpecialFieldValue
parameter_list|(
name|SpecialField
name|field
parameter_list|,
name|String
name|keyword
parameter_list|,
name|String
name|actionName
parameter_list|,
name|String
name|menuString
parameter_list|,
name|ImageIcon
name|icon
parameter_list|,
name|String
name|toolTipText
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
name|this
operator|.
name|keyword
operator|=
name|keyword
expr_stmt|;
name|this
operator|.
name|actionName
operator|=
name|actionName
expr_stmt|;
name|this
operator|.
name|menuString
operator|=
name|menuString
expr_stmt|;
name|this
operator|.
name|icon
operator|=
name|icon
expr_stmt|;
name|this
operator|.
name|toolTipText
operator|=
name|toolTipText
expr_stmt|;
block|}
DECL|method|getKeyword ()
specifier|public
name|String
name|getKeyword
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyword
return|;
block|}
DECL|method|getActionName ()
specifier|public
name|String
name|getActionName
parameter_list|()
block|{
return|return
name|this
operator|.
name|actionName
return|;
block|}
DECL|method|getMenuString ()
specifier|public
name|String
name|getMenuString
parameter_list|()
block|{
return|return
name|this
operator|.
name|menuString
return|;
block|}
DECL|method|createLabel ()
specifier|public
name|JLabel
name|createLabel
parameter_list|()
block|{
name|JLabel
name|label
init|=
operator|new
name|JLabel
argument_list|(
name|this
operator|.
name|icon
argument_list|)
decl_stmt|;
name|label
operator|.
name|setToolTipText
argument_list|(
name|this
operator|.
name|toolTipText
argument_list|)
expr_stmt|;
return|return
name|label
return|;
block|}
DECL|method|getFieldValue ()
specifier|public
name|String
name|getFieldValue
parameter_list|()
block|{
return|return
name|this
operator|.
name|keyword
return|;
block|}
DECL|method|getIcon ()
specifier|public
name|ImageIcon
name|getIcon
parameter_list|()
block|{
return|return
name|this
operator|.
name|icon
return|;
block|}
DECL|method|getToolTipText ()
specifier|public
name|String
name|getToolTipText
parameter_list|()
block|{
return|return
name|this
operator|.
name|toolTipText
return|;
block|}
DECL|method|getAction (JabRefFrame frame)
specifier|public
name|SpecialFieldAction
name|getAction
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|action
operator|==
literal|null
condition|)
block|{
name|action
operator|=
operator|new
name|SpecialFieldAction
argument_list|(
name|frame
argument_list|,
name|this
operator|.
name|field
argument_list|,
name|this
operator|.
name|getFieldValue
argument_list|()
argument_list|,
comment|// if field contains only one value, it has to be nulled
comment|// otherwise, another setting does not empty the field
name|this
operator|.
name|field
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|,
name|this
operator|.
name|getMenuString
argument_list|()
argument_list|,
name|this
operator|.
name|field
operator|.
name|TEXT_DONE_PATTERN
argument_list|)
expr_stmt|;
block|}
return|return
name|action
return|;
block|}
DECL|method|getMenuAction (JabRefFrame frame)
specifier|public
name|SpecialFieldMenuAction
name|getMenuAction
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|menuAction
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|menuAction
operator|=
operator|new
name|SpecialFieldMenuAction
argument_list|(
name|this
argument_list|,
name|frame
argument_list|)
expr_stmt|;
block|}
return|return
name|this
operator|.
name|menuAction
return|;
block|}
block|}
end_class

end_unit

