begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2015 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.groups
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|groups
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|groups
operator|.
name|structure
operator|.
name|EntriesGroupChange
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|UndoableFieldChange
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|FieldChange
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|undo
operator|.
name|AbstractUndoableEdit
import|;
end_import

begin_class
DECL|class|UndoableChangeEntriesOfGroup
specifier|public
class|class
name|UndoableChangeEntriesOfGroup
block|{
DECL|method|getUndoableEdit (GroupTreeNode node, EntriesGroupChange change)
specifier|public
specifier|static
name|AbstractUndoableEdit
name|getUndoableEdit
parameter_list|(
name|GroupTreeNode
name|node
parameter_list|,
name|EntriesGroupChange
name|change
parameter_list|)
block|{
if|if
condition|(
name|change
operator|.
name|getOldEntries
argument_list|()
operator|.
name|size
argument_list|()
operator|!=
name|change
operator|.
name|getNewEntries
argument_list|()
operator|.
name|size
argument_list|()
condition|)
block|{
return|return
operator|new
name|UndoableChangeAssignment
argument_list|(
name|node
argument_list|,
name|change
operator|.
name|getOldEntries
argument_list|()
argument_list|,
name|change
operator|.
name|getNewEntries
argument_list|()
argument_list|)
return|;
block|}
name|boolean
name|hasEntryChanges
init|=
literal|false
decl_stmt|;
name|NamedCompound
name|entryChangeCompound
init|=
operator|new
name|NamedCompound
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"change entries of group"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|FieldChange
name|fieldChange
range|:
name|change
operator|.
name|getEntryChanges
argument_list|()
control|)
block|{
name|hasEntryChanges
operator|=
literal|true
expr_stmt|;
name|entryChangeCompound
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoableFieldChange
argument_list|(
name|fieldChange
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|hasEntryChanges
condition|)
block|{
name|entryChangeCompound
operator|.
name|end
argument_list|()
expr_stmt|;
return|return
name|entryChangeCompound
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

