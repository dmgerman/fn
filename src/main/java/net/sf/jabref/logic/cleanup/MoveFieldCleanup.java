begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.cleanup
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|cleanup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|OptionalUtil
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|FieldChange
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_comment
comment|/**  * Moves the content of one field to another field.  */
end_comment

begin_class
DECL|class|MoveFieldCleanup
specifier|public
class|class
name|MoveFieldCleanup
implements|implements
name|CleanupJob
block|{
DECL|field|sourceField
specifier|private
name|String
name|sourceField
decl_stmt|;
DECL|field|targetField
specifier|private
name|String
name|targetField
decl_stmt|;
DECL|method|MoveFieldCleanup (String sourceField, String targetField)
specifier|public
name|MoveFieldCleanup
parameter_list|(
name|String
name|sourceField
parameter_list|,
name|String
name|targetField
parameter_list|)
block|{
name|this
operator|.
name|sourceField
operator|=
name|sourceField
expr_stmt|;
name|this
operator|.
name|targetField
operator|=
name|targetField
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|cleanup (BibEntry entry)
specifier|public
name|List
argument_list|<
name|FieldChange
argument_list|>
name|cleanup
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|Optional
argument_list|<
name|FieldChange
argument_list|>
name|setFieldChange
init|=
name|entry
operator|.
name|getField
argument_list|(
name|sourceField
argument_list|)
operator|.
name|flatMap
argument_list|(
name|value
lambda|->
name|entry
operator|.
name|setField
argument_list|(
name|targetField
argument_list|,
name|value
argument_list|)
argument_list|)
decl_stmt|;
name|Optional
argument_list|<
name|FieldChange
argument_list|>
name|clearFieldChange
init|=
name|entry
operator|.
name|clearField
argument_list|(
name|sourceField
argument_list|)
decl_stmt|;
return|return
name|OptionalUtil
operator|.
name|toList
argument_list|(
name|setFieldChange
argument_list|,
name|clearFieldChange
argument_list|)
return|;
block|}
block|}
end_class

end_unit

