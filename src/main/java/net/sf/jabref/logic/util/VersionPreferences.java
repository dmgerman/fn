begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2016 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.logic.util
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|VersionPreferences
specifier|public
class|class
name|VersionPreferences
block|{
DECL|field|VERSION_IGNORED_UPDATE
specifier|public
specifier|static
specifier|final
name|String
name|VERSION_IGNORED_UPDATE
init|=
literal|"versionIgnoreUpdate"
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|JabRefPreferences
name|preferences
decl_stmt|;
DECL|method|VersionPreferences (JabRefPreferences preferences)
specifier|public
name|VersionPreferences
parameter_list|(
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
block|}
DECL|method|setAsIgnoredVersion (Version version)
specifier|public
name|void
name|setAsIgnoredVersion
parameter_list|(
name|Version
name|version
parameter_list|)
block|{
name|preferences
operator|.
name|put
argument_list|(
name|VERSION_IGNORED_UPDATE
argument_list|,
name|version
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getIgnoredVersion ()
specifier|public
name|Version
name|getIgnoredVersion
parameter_list|()
block|{
return|return
operator|new
name|Version
argument_list|(
name|preferences
operator|.
name|get
argument_list|(
name|VERSION_IGNORED_UPDATE
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

