begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2015 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.  */
end_comment

begin_package
DECL|package|net.sf.jabref.logic.util
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
package|;
end_package

begin_comment
comment|/***  * Operating system (OS) detection  */
end_comment

begin_class
DECL|class|OS
specifier|public
class|class
name|OS
block|{
comment|// TODO: what OS do we support?
comment|// https://commons.apache.org/proper/commons-lang/javadocs/api-2.6/org/apache/commons/lang/SystemUtils.html
DECL|field|osName
specifier|public
specifier|static
specifier|final
name|String
name|osName
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|,
literal|"unknown"
argument_list|)
operator|.
name|toLowerCase
argument_list|()
decl_stmt|;
DECL|field|LINUX
specifier|public
specifier|static
specifier|final
name|boolean
name|LINUX
init|=
name|osName
operator|.
name|startsWith
argument_list|(
literal|"linux"
argument_list|)
decl_stmt|;
DECL|field|WINDOWS
specifier|public
specifier|static
specifier|final
name|boolean
name|WINDOWS
init|=
name|osName
operator|.
name|startsWith
argument_list|(
literal|"win"
argument_list|)
decl_stmt|;
DECL|field|OS_X
specifier|public
specifier|static
specifier|final
name|boolean
name|OS_X
init|=
name|osName
operator|.
name|startsWith
argument_list|(
literal|"mac"
argument_list|)
decl_stmt|;
DECL|method|guessProgramPath (String programName, String windowsDirectory)
specifier|public
specifier|static
specifier|final
name|String
name|guessProgramPath
parameter_list|(
name|String
name|programName
parameter_list|,
name|String
name|windowsDirectory
parameter_list|)
block|{
if|if
condition|(
name|OS
operator|.
name|WINDOWS
condition|)
block|{
name|String
name|progFiles
init|=
name|System
operator|.
name|getenv
argument_list|(
literal|"ProgramFiles(x86)"
argument_list|)
decl_stmt|;
if|if
condition|(
name|progFiles
operator|==
literal|null
condition|)
block|{
name|progFiles
operator|=
name|System
operator|.
name|getenv
argument_list|(
literal|"ProgramFiles"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
name|windowsDirectory
operator|!=
literal|null
operator|)
operator|&&
operator|!
name|windowsDirectory
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|progFiles
operator|+
literal|"\\"
operator|+
name|windowsDirectory
operator|+
literal|"\\"
operator|+
name|programName
operator|+
literal|".exe"
return|;
block|}
return|return
name|progFiles
operator|+
literal|"\\"
operator|+
name|programName
operator|+
literal|".exe"
return|;
block|}
return|return
name|programName
return|;
block|}
block|}
end_class

end_unit

