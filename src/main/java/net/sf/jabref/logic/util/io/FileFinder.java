begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.util.io
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|io
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_class
DECL|class|FileFinder
specifier|public
class|class
name|FileFinder
block|{
DECL|method|findFiles (Collection<String> extensions, Collection<File> directories)
specifier|public
specifier|static
name|Set
argument_list|<
name|File
argument_list|>
name|findFiles
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|extensions
parameter_list|,
name|Collection
argument_list|<
name|File
argument_list|>
name|directories
parameter_list|)
block|{
name|Set
argument_list|<
name|File
argument_list|>
name|result
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|File
name|directory
range|:
name|directories
control|)
block|{
name|result
operator|.
name|addAll
argument_list|(
name|FileFinder
operator|.
name|findFiles
argument_list|(
name|extensions
argument_list|,
name|directory
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
DECL|method|findFiles (Collection<String> extensions, File directory)
specifier|private
specifier|static
name|Collection
argument_list|<
name|?
extends|extends
name|File
argument_list|>
name|findFiles
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|extensions
parameter_list|,
name|File
name|directory
parameter_list|)
block|{
name|Set
argument_list|<
name|File
argument_list|>
name|result
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
decl_stmt|;
name|File
index|[]
name|children
init|=
name|directory
operator|.
name|listFiles
argument_list|()
decl_stmt|;
if|if
condition|(
name|children
operator|==
literal|null
condition|)
block|{
return|return
name|result
return|;
comment|// No permission?
block|}
for|for
control|(
name|File
name|child
range|:
name|children
control|)
block|{
if|if
condition|(
name|child
operator|.
name|isDirectory
argument_list|()
condition|)
block|{
name|result
operator|.
name|addAll
argument_list|(
name|FileFinder
operator|.
name|findFiles
argument_list|(
name|extensions
argument_list|,
name|child
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|FileUtil
operator|.
name|getFileExtension
argument_list|(
name|child
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|extension
lambda|->
block|{
if|if
condition|(
name|extensions
operator|.
name|contains
argument_list|(
name|extension
argument_list|)
condition|)
block|{
name|result
operator|.
name|add
argument_list|(
name|child
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

