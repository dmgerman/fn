begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.util.date
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|date
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZoneId
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_class
DECL|class|EasyDateFormat
specifier|public
class|class
name|EasyDateFormat
block|{
comment|/**      * The formatter objects      */
DECL|field|dateFormatter
specifier|private
specifier|final
name|DateTimeFormatter
name|dateFormatter
decl_stmt|;
DECL|method|EasyDateFormat (String dateFormat)
specifier|public
name|EasyDateFormat
parameter_list|(
name|String
name|dateFormat
parameter_list|)
block|{
name|this
argument_list|(
name|DateTimeFormatter
operator|.
name|ofPattern
argument_list|(
name|dateFormat
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|EasyDateFormat (DateTimeFormatter dateFormatter)
specifier|public
name|EasyDateFormat
parameter_list|(
name|DateTimeFormatter
name|dateFormatter
parameter_list|)
block|{
name|this
operator|.
name|dateFormatter
operator|=
name|dateFormatter
expr_stmt|;
block|}
comment|/**      * Creates a String containing the current date (and possibly time),      * formatted according to the format set in preferences under the key      * "timeStampFormat".      *      * @return The date string.      */
DECL|method|getCurrentDate ()
specifier|public
name|String
name|getCurrentDate
parameter_list|()
block|{
return|return
name|getDateAt
argument_list|(
name|ZonedDateTime
operator|.
name|now
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Creates a readable Date string from the parameter date. The format is set      * in preferences under the key "timeStampFormat".      *      * @return The formatted date string.      */
DECL|method|getDateAt (Date date)
specifier|public
name|String
name|getDateAt
parameter_list|(
name|Date
name|date
parameter_list|)
block|{
return|return
name|getDateAt
argument_list|(
name|date
operator|.
name|toInstant
argument_list|()
operator|.
name|atZone
argument_list|(
name|ZoneId
operator|.
name|systemDefault
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * Creates a readable Date string from the parameter date. The format is set      * in preferences under the key "timeStampFormat".      *      * @return The formatted date string.      */
DECL|method|getDateAt (ZonedDateTime dateTime)
specifier|public
name|String
name|getDateAt
parameter_list|(
name|ZonedDateTime
name|dateTime
parameter_list|)
block|{
comment|// first use, create an instance
return|return
name|dateTime
operator|.
name|format
argument_list|(
name|dateFormatter
argument_list|)
return|;
block|}
DECL|method|fromTimeStampFormat (String timeStampFormat)
specifier|public
specifier|static
name|EasyDateFormat
name|fromTimeStampFormat
parameter_list|(
name|String
name|timeStampFormat
parameter_list|)
block|{
return|return
operator|new
name|EasyDateFormat
argument_list|(
name|timeStampFormat
argument_list|)
return|;
block|}
DECL|method|isoDateFormat ()
specifier|public
specifier|static
name|EasyDateFormat
name|isoDateFormat
parameter_list|()
block|{
return|return
operator|new
name|EasyDateFormat
argument_list|(
name|DateTimeFormatter
operator|.
name|ISO_LOCAL_DATE
argument_list|)
return|;
block|}
block|}
end_class

end_unit

