begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.exporter
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|JAXBException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|bind
operator|.
name|Marshaller
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|namespace
operator|.
name|QName
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|AbstractDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|CodeOrText
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|DateDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|DetailDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|ExtentDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|GenreDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|IdentifierDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|IssuanceDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|LanguageDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|LanguageTermDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|LocationDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|ModsCollectionDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|ModsDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|NameDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|NamePartDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|NoteDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|OriginInfoDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|PartDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|PhysicalLocationDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|PlaceDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|PlaceTermDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|RelatedItemDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|StringPlusLanguage
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|StringPlusLanguagePlusAuthority
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|StringPlusLanguagePlusSupplied
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|SubjectDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|TitleInfoDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|TypeOfResourceDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|mods
operator|.
name|UrlDefinition
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|xml
operator|.
name|internal
operator|.
name|bind
operator|.
name|marshaller
operator|.
name|NamespacePrefixMapper
import|;
end_import

begin_comment
comment|/**  * ExportFormat for exporting in MODS XML format.  */
end_comment

begin_class
DECL|class|ModsExportFormat
class|class
name|ModsExportFormat
extends|extends
name|ExportFormat
block|{
DECL|field|MINUS
specifier|private
specifier|static
specifier|final
name|String
name|MINUS
init|=
literal|"-"
decl_stmt|;
DECL|field|DOUBLE_MINUS
specifier|private
specifier|static
specifier|final
name|String
name|DOUBLE_MINUS
init|=
literal|"--"
decl_stmt|;
DECL|field|KEYWORD_SEPARATOR
specifier|private
specifier|static
specifier|final
name|String
name|KEYWORD_SEPARATOR
init|=
name|JabRefPreferences
operator|.
name|getInstance
argument_list|()
operator|.
name|getImportFormatPreferences
argument_list|()
operator|.
name|getKeywordSeparator
argument_list|()
decl_stmt|;
DECL|field|MODS_SCHEMA_LOCATION
specifier|private
specifier|static
specifier|final
name|String
name|MODS_SCHEMA_LOCATION
init|=
literal|"http://www.loc.gov/standards/mods/v3/mods-3-6.xsd"
decl_stmt|;
DECL|field|PREFIX_MAPPER_PACKAGE
specifier|private
specifier|static
specifier|final
name|String
name|PREFIX_MAPPER_PACKAGE
init|=
literal|"com.sun.xml.internal.bind.namespacePrefixMapper"
decl_stmt|;
DECL|field|MODS_NAMESPACE_URI
specifier|protected
specifier|static
specifier|final
name|String
name|MODS_NAMESPACE_URI
init|=
literal|"http://www.loc.gov/mods/v3"
decl_stmt|;
DECL|field|context
specifier|private
name|JAXBContext
name|context
decl_stmt|;
DECL|method|ModsExportFormat ()
specifier|public
name|ModsExportFormat
parameter_list|()
block|{
name|super
argument_list|(
literal|"MODS"
argument_list|,
literal|"mods"
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|".xml"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|performExport (final BibDatabaseContext databaseContext, final String file, final Charset encoding, List<BibEntry> entries)
specifier|public
name|void
name|performExport
parameter_list|(
specifier|final
name|BibDatabaseContext
name|databaseContext
parameter_list|,
specifier|final
name|String
name|file
parameter_list|,
specifier|final
name|Charset
name|encoding
parameter_list|,
name|List
argument_list|<
name|BibEntry
argument_list|>
name|entries
parameter_list|)
throws|throws
name|SaveException
throws|,
name|IOException
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|databaseContext
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|entries
argument_list|)
expr_stmt|;
if|if
condition|(
name|entries
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
comment|// Only export if entries exist
return|return;
block|}
try|try
block|{
name|ModsCollectionDefinition
name|modsCollection
init|=
operator|new
name|ModsCollectionDefinition
argument_list|()
decl_stmt|;
for|for
control|(
name|BibEntry
name|bibEntry
range|:
name|entries
control|)
block|{
name|ModsDefinition
name|mods
init|=
operator|new
name|ModsDefinition
argument_list|()
decl_stmt|;
name|bibEntry
operator|.
name|getCiteKeyOptional
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|citeKey
lambda|->
name|addIdentifier
argument_list|(
literal|"citekey"
argument_list|,
name|citeKey
argument_list|,
name|mods
argument_list|)
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|fieldMap
init|=
name|bibEntry
operator|.
name|getFieldMap
argument_list|()
decl_stmt|;
name|addGenre
argument_list|(
name|bibEntry
argument_list|,
name|mods
argument_list|)
expr_stmt|;
name|OriginInfoDefinition
name|originInfo
init|=
operator|new
name|OriginInfoDefinition
argument_list|()
decl_stmt|;
name|PartDefinition
name|partDefinition
init|=
operator|new
name|PartDefinition
argument_list|()
decl_stmt|;
name|RelatedItemDefinition
name|relatedItem
init|=
operator|new
name|RelatedItemDefinition
argument_list|()
decl_stmt|;
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|entry
range|:
name|fieldMap
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|String
name|key
init|=
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
name|value
init|=
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|key
condition|)
block|{
case|case
name|FieldName
operator|.
name|AUTHOR
case|:
name|handleAuthors
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
literal|"affiliation"
case|:
name|addAffiliation
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|ABSTRACT
case|:
name|addAbstract
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|TITLE
case|:
name|addTitle
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|LANGUAGE
case|:
name|addLanguage
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|LOCATION
case|:
name|addLocation
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|URL
case|:
name|addUrl
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|NOTE
case|:
name|addNote
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|KEYWORDS
case|:
name|addKeyWords
argument_list|(
name|mods
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|VOLUME
case|:
name|addDetail
argument_list|(
name|FieldName
operator|.
name|VOLUME
argument_list|,
name|value
argument_list|,
name|partDefinition
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|ISSUE
case|:
name|addDetail
argument_list|(
name|FieldName
operator|.
name|ISSUE
argument_list|,
name|value
argument_list|,
name|partDefinition
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|PAGES
case|:
name|addPages
argument_list|(
name|partDefinition
argument_list|,
name|value
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|URI
case|:
name|addIdentifier
argument_list|(
name|FieldName
operator|.
name|URI
argument_list|,
name|value
argument_list|,
name|mods
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|ISBN
case|:
name|addIdentifier
argument_list|(
name|FieldName
operator|.
name|ISBN
argument_list|,
name|value
argument_list|,
name|mods
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|ISSN
case|:
name|addIdentifier
argument_list|(
name|FieldName
operator|.
name|ISSN
argument_list|,
name|value
argument_list|,
name|mods
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|DOI
case|:
name|addIdentifier
argument_list|(
name|FieldName
operator|.
name|DOI
argument_list|,
name|value
argument_list|,
name|mods
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|PMID
case|:
name|addIdentifier
argument_list|(
name|FieldName
operator|.
name|PMID
argument_list|,
name|value
argument_list|,
name|mods
argument_list|)
expr_stmt|;
break|break;
case|case
name|FieldName
operator|.
name|JOURNAL
case|:
name|addJournal
argument_list|(
name|value
argument_list|,
name|relatedItem
argument_list|)
expr_stmt|;
break|break;
default|default:
break|break;
block|}
name|addOriginInformation
argument_list|(
name|key
argument_list|,
name|value
argument_list|,
name|originInfo
argument_list|)
expr_stmt|;
block|}
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|originInfo
argument_list|)
expr_stmt|;
name|addRelatedAndOriginInfoToModsGroup
argument_list|(
name|relatedItem
argument_list|,
name|partDefinition
argument_list|,
name|mods
argument_list|)
expr_stmt|;
name|modsCollection
operator|.
name|getMods
argument_list|()
operator|.
name|add
argument_list|(
name|mods
argument_list|)
expr_stmt|;
block|}
name|JAXBElement
argument_list|<
name|ModsCollectionDefinition
argument_list|>
name|jaxbElement
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"modsCollection"
argument_list|)
argument_list|,
name|ModsCollectionDefinition
operator|.
name|class
argument_list|,
name|modsCollection
argument_list|)
decl_stmt|;
name|createMarshallerAndWriteToFile
argument_list|(
name|file
argument_list|,
name|jaxbElement
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JAXBException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|SaveException
argument_list|(
name|ex
argument_list|)
throw|;
block|}
block|}
DECL|method|createMarshallerAndWriteToFile (String file, JAXBElement<ModsCollectionDefinition> jaxbElement)
specifier|private
name|void
name|createMarshallerAndWriteToFile
parameter_list|(
name|String
name|file
parameter_list|,
name|JAXBElement
argument_list|<
name|ModsCollectionDefinition
argument_list|>
name|jaxbElement
parameter_list|)
throws|throws
name|JAXBException
block|{
if|if
condition|(
name|context
operator|==
literal|null
condition|)
block|{
name|context
operator|=
name|JAXBContext
operator|.
name|newInstance
argument_list|(
name|ModsCollectionDefinition
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
name|Marshaller
name|marshaller
init|=
name|context
operator|.
name|createMarshaller
argument_list|()
decl_stmt|;
comment|//since it has to be a prefix, use mods everywhere as prefix for elements
comment|//see also http://www.loc.gov/standards/mods/v3/mods-userguide-intro.html
name|NamespacePrefixMapper
name|myPrefixMapper
init|=
operator|new
name|NamespacePrefixMapper
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|String
name|getPreferredPrefix
parameter_list|(
name|String
name|namespaceUri
parameter_list|,
name|String
name|suggestion
parameter_list|,
name|boolean
name|requirePrefix
parameter_list|)
block|{
return|return
name|MODS_NAMESPACE_URI
operator|.
name|equals
argument_list|(
name|namespaceUri
argument_list|)
condition|?
literal|"mods"
else|:
literal|""
return|;
block|}
block|}
decl_stmt|;
comment|//format the output
name|marshaller
operator|.
name|setProperty
argument_list|(
name|Marshaller
operator|.
name|JAXB_FORMATTED_OUTPUT
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|marshaller
operator|.
name|setProperty
argument_list|(
name|Marshaller
operator|.
name|JAXB_SCHEMA_LOCATION
argument_list|,
name|MODS_SCHEMA_LOCATION
argument_list|)
expr_stmt|;
name|marshaller
operator|.
name|setProperty
argument_list|(
name|PREFIX_MAPPER_PACKAGE
argument_list|,
name|myPrefixMapper
argument_list|)
expr_stmt|;
comment|// Write to File
name|marshaller
operator|.
name|marshal
argument_list|(
name|jaxbElement
argument_list|,
operator|new
name|File
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addRelatedAndOriginInfoToModsGroup (RelatedItemDefinition relatedItem, PartDefinition partDefinition, ModsDefinition mods)
specifier|private
name|void
name|addRelatedAndOriginInfoToModsGroup
parameter_list|(
name|RelatedItemDefinition
name|relatedItem
parameter_list|,
name|PartDefinition
name|partDefinition
parameter_list|,
name|ModsDefinition
name|mods
parameter_list|)
block|{
name|relatedItem
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|partDefinition
argument_list|)
expr_stmt|;
name|relatedItem
operator|.
name|setAtType
argument_list|(
literal|"host"
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|relatedItem
argument_list|)
expr_stmt|;
name|TypeOfResourceDefinition
name|typeOfResource
init|=
operator|new
name|TypeOfResourceDefinition
argument_list|()
decl_stmt|;
name|typeOfResource
operator|.
name|setValue
argument_list|(
literal|"text"
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|typeOfResource
argument_list|)
expr_stmt|;
block|}
DECL|method|addGenre (BibEntry bibEntry, ModsDefinition mods)
specifier|private
name|void
name|addGenre
parameter_list|(
name|BibEntry
name|bibEntry
parameter_list|,
name|ModsDefinition
name|mods
parameter_list|)
block|{
name|GenreDefinition
name|genre
init|=
operator|new
name|GenreDefinition
argument_list|()
decl_stmt|;
name|genre
operator|.
name|setValue
argument_list|(
name|bibEntry
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|genre
argument_list|)
expr_stmt|;
block|}
DECL|method|addAbstract (ModsDefinition mods, String value)
specifier|private
name|void
name|addAbstract
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|AbstractDefinition
name|abstractDefinition
init|=
operator|new
name|AbstractDefinition
argument_list|()
decl_stmt|;
name|abstractDefinition
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|abstractDefinition
argument_list|)
expr_stmt|;
block|}
DECL|method|addTitle (ModsDefinition mods, String value)
specifier|private
name|void
name|addTitle
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|TitleInfoDefinition
name|titleInfo
init|=
operator|new
name|TitleInfoDefinition
argument_list|()
decl_stmt|;
name|StringPlusLanguage
name|title
init|=
operator|new
name|StringPlusLanguage
argument_list|()
decl_stmt|;
name|title
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|StringPlusLanguage
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"title"
argument_list|)
argument_list|,
name|StringPlusLanguage
operator|.
name|class
argument_list|,
name|title
argument_list|)
decl_stmt|;
name|titleInfo
operator|.
name|getTitleOrSubTitleOrPartNumber
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|titleInfo
argument_list|)
expr_stmt|;
block|}
DECL|method|addAffiliation (ModsDefinition mods, String value)
specifier|private
name|void
name|addAffiliation
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|NameDefinition
name|nameDefinition
init|=
operator|new
name|NameDefinition
argument_list|()
decl_stmt|;
name|StringPlusLanguage
name|affiliation
init|=
operator|new
name|StringPlusLanguage
argument_list|()
decl_stmt|;
name|affiliation
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|StringPlusLanguage
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"affiliation"
argument_list|)
argument_list|,
name|StringPlusLanguage
operator|.
name|class
argument_list|,
name|affiliation
argument_list|)
decl_stmt|;
name|nameDefinition
operator|.
name|getAffiliationOrRoleOrDescription
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|nameDefinition
argument_list|)
expr_stmt|;
block|}
DECL|method|addLocation (ModsDefinition mods, String value)
specifier|private
name|void
name|addLocation
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|LocationDefinition
name|locationDefinition
init|=
operator|new
name|LocationDefinition
argument_list|()
decl_stmt|;
comment|//There can be more than one location
name|String
index|[]
name|locations
init|=
name|value
operator|.
name|split
argument_list|(
literal|", "
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|location
range|:
name|locations
control|)
block|{
name|PhysicalLocationDefinition
name|physicalLocation
init|=
operator|new
name|PhysicalLocationDefinition
argument_list|()
decl_stmt|;
name|physicalLocation
operator|.
name|setValue
argument_list|(
name|location
argument_list|)
expr_stmt|;
name|locationDefinition
operator|.
name|getPhysicalLocation
argument_list|()
operator|.
name|add
argument_list|(
name|physicalLocation
argument_list|)
expr_stmt|;
block|}
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|locationDefinition
argument_list|)
expr_stmt|;
block|}
DECL|method|addNote (ModsDefinition mods, String value)
specifier|private
name|void
name|addNote
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|String
index|[]
name|notes
init|=
name|value
operator|.
name|split
argument_list|(
literal|", "
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|note
range|:
name|notes
control|)
block|{
name|NoteDefinition
name|noteDefinition
init|=
operator|new
name|NoteDefinition
argument_list|()
decl_stmt|;
name|noteDefinition
operator|.
name|setValue
argument_list|(
name|note
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|noteDefinition
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addUrl (ModsDefinition mods, String value)
specifier|private
name|void
name|addUrl
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|String
index|[]
name|urls
init|=
name|value
operator|.
name|split
argument_list|(
literal|", "
argument_list|)
decl_stmt|;
name|LocationDefinition
name|location
init|=
operator|new
name|LocationDefinition
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|url
range|:
name|urls
control|)
block|{
name|UrlDefinition
name|urlDefinition
init|=
operator|new
name|UrlDefinition
argument_list|()
decl_stmt|;
name|urlDefinition
operator|.
name|setValue
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|location
operator|.
name|getUrl
argument_list|()
operator|.
name|add
argument_list|(
name|urlDefinition
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|location
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addJournal (String value, RelatedItemDefinition relatedItem)
specifier|private
name|void
name|addJournal
parameter_list|(
name|String
name|value
parameter_list|,
name|RelatedItemDefinition
name|relatedItem
parameter_list|)
block|{
name|TitleInfoDefinition
name|titleInfo
init|=
operator|new
name|TitleInfoDefinition
argument_list|()
decl_stmt|;
name|StringPlusLanguage
name|title
init|=
operator|new
name|StringPlusLanguage
argument_list|()
decl_stmt|;
name|title
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|StringPlusLanguage
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"title"
argument_list|)
argument_list|,
name|StringPlusLanguage
operator|.
name|class
argument_list|,
name|title
argument_list|)
decl_stmt|;
name|titleInfo
operator|.
name|getTitleOrSubTitleOrPartNumber
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|relatedItem
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|titleInfo
argument_list|)
expr_stmt|;
block|}
DECL|method|addLanguage (ModsDefinition mods, String value)
specifier|private
name|void
name|addLanguage
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|LanguageDefinition
name|language
init|=
operator|new
name|LanguageDefinition
argument_list|()
decl_stmt|;
name|LanguageTermDefinition
name|languageTerm
init|=
operator|new
name|LanguageTermDefinition
argument_list|()
decl_stmt|;
name|languageTerm
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|language
operator|.
name|getLanguageTerm
argument_list|()
operator|.
name|add
argument_list|(
name|languageTerm
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|language
argument_list|)
expr_stmt|;
block|}
DECL|method|addPages (PartDefinition partDefinition, String value)
specifier|private
name|void
name|addPages
parameter_list|(
name|PartDefinition
name|partDefinition
parameter_list|,
name|String
name|value
parameter_list|)
block|{
if|if
condition|(
name|value
operator|.
name|contains
argument_list|(
name|DOUBLE_MINUS
argument_list|)
condition|)
block|{
name|addStartAndEndPage
argument_list|(
name|value
argument_list|,
name|partDefinition
argument_list|,
name|DOUBLE_MINUS
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|value
operator|.
name|contains
argument_list|(
name|MINUS
argument_list|)
condition|)
block|{
name|addStartAndEndPage
argument_list|(
name|value
argument_list|,
name|partDefinition
argument_list|,
name|MINUS
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|BigInteger
name|total
init|=
operator|new
name|BigInteger
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|ExtentDefinition
name|extent
init|=
operator|new
name|ExtentDefinition
argument_list|()
decl_stmt|;
name|extent
operator|.
name|setTotal
argument_list|(
name|total
argument_list|)
expr_stmt|;
name|partDefinition
operator|.
name|getDetailOrExtentOrDate
argument_list|()
operator|.
name|add
argument_list|(
name|extent
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addKeyWords (ModsDefinition mods, String value)
specifier|private
name|void
name|addKeyWords
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|String
index|[]
name|keywords
init|=
name|value
operator|.
name|split
argument_list|(
literal|", "
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|keyword
range|:
name|keywords
control|)
block|{
name|SubjectDefinition
name|subject
init|=
operator|new
name|SubjectDefinition
argument_list|()
decl_stmt|;
name|StringPlusLanguagePlusAuthority
name|topic
init|=
operator|new
name|StringPlusLanguagePlusAuthority
argument_list|()
decl_stmt|;
name|topic
operator|.
name|setValue
argument_list|(
name|keyword
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|?
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"topic"
argument_list|)
argument_list|,
name|StringPlusLanguagePlusAuthority
operator|.
name|class
argument_list|,
name|topic
argument_list|)
decl_stmt|;
name|subject
operator|.
name|getTopicOrGeographicOrTemporal
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|subject
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|handleAuthors (ModsDefinition mods, String value)
specifier|private
name|void
name|handleAuthors
parameter_list|(
name|ModsDefinition
name|mods
parameter_list|,
name|String
name|value
parameter_list|)
block|{
name|String
index|[]
name|authors
init|=
name|value
operator|.
name|split
argument_list|(
literal|"and"
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|author
range|:
name|authors
control|)
block|{
name|NameDefinition
name|name
init|=
operator|new
name|NameDefinition
argument_list|()
decl_stmt|;
name|name
operator|.
name|setAtType
argument_list|(
literal|"personal"
argument_list|)
expr_stmt|;
name|NamePartDefinition
name|namePart
init|=
operator|new
name|NamePartDefinition
argument_list|()
decl_stmt|;
if|if
condition|(
name|author
operator|.
name|contains
argument_list|(
literal|","
argument_list|)
condition|)
block|{
comment|//if author contains ","  then this indicates that the author has a forename and family name
name|int
name|commaIndex
init|=
name|author
operator|.
name|indexOf
argument_list|(
literal|','
argument_list|)
decl_stmt|;
name|String
name|familyName
init|=
name|author
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|commaIndex
argument_list|)
decl_stmt|;
name|namePart
operator|.
name|setAtType
argument_list|(
literal|"family"
argument_list|)
expr_stmt|;
name|namePart
operator|.
name|setValue
argument_list|(
name|familyName
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|NamePartDefinition
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"namePart"
argument_list|)
argument_list|,
name|NamePartDefinition
operator|.
name|class
argument_list|,
name|namePart
argument_list|)
decl_stmt|;
name|name
operator|.
name|getNamePartOrDisplayFormOrAffiliation
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
comment|//now take care of the forenames
name|String
name|forename
init|=
name|author
operator|.
name|substring
argument_list|(
name|commaIndex
operator|+
literal|1
argument_list|,
name|author
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|String
index|[]
name|forenames
init|=
name|forename
operator|.
name|split
argument_list|(
literal|" "
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|given
range|:
name|forenames
control|)
block|{
if|if
condition|(
operator|!
name|given
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|NamePartDefinition
name|namePartDefinition
init|=
operator|new
name|NamePartDefinition
argument_list|()
decl_stmt|;
name|namePartDefinition
operator|.
name|setAtType
argument_list|(
literal|"given"
argument_list|)
expr_stmt|;
name|namePartDefinition
operator|.
name|setValue
argument_list|(
name|given
argument_list|)
expr_stmt|;
name|element
operator|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"namePart"
argument_list|)
argument_list|,
name|NamePartDefinition
operator|.
name|class
argument_list|,
name|namePartDefinition
argument_list|)
expr_stmt|;
name|name
operator|.
name|getNamePartOrDisplayFormOrAffiliation
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
block|}
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|//no "," indicates that there should only be a family name
name|namePart
operator|.
name|setAtType
argument_list|(
literal|"family"
argument_list|)
expr_stmt|;
name|namePart
operator|.
name|setValue
argument_list|(
name|author
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|NamePartDefinition
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"namePart"
argument_list|)
argument_list|,
name|NamePartDefinition
operator|.
name|class
argument_list|,
name|namePart
argument_list|)
decl_stmt|;
name|name
operator|.
name|getNamePartOrDisplayFormOrAffiliation
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|addIdentifier (String key, String value, ModsDefinition mods)
specifier|private
name|void
name|addIdentifier
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|,
name|ModsDefinition
name|mods
parameter_list|)
block|{
if|if
condition|(
literal|"citekey"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|mods
operator|.
name|setID
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
name|IdentifierDefinition
name|identifier
init|=
operator|new
name|IdentifierDefinition
argument_list|()
decl_stmt|;
name|identifier
operator|.
name|setType
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|identifier
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|mods
operator|.
name|getModsGroup
argument_list|()
operator|.
name|add
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
block|}
DECL|method|addStartAndEndPage (String value, PartDefinition partDefinition, String minus)
specifier|private
name|void
name|addStartAndEndPage
parameter_list|(
name|String
name|value
parameter_list|,
name|PartDefinition
name|partDefinition
parameter_list|,
name|String
name|minus
parameter_list|)
block|{
name|int
name|minusIndex
init|=
name|value
operator|.
name|indexOf
argument_list|(
name|minus
argument_list|)
decl_stmt|;
name|String
name|startPage
init|=
name|value
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|minusIndex
argument_list|)
decl_stmt|;
name|String
name|endPage
init|=
literal|""
decl_stmt|;
if|if
condition|(
name|MINUS
operator|.
name|equals
argument_list|(
name|minus
argument_list|)
condition|)
block|{
name|endPage
operator|=
name|value
operator|.
name|substring
argument_list|(
name|minusIndex
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|DOUBLE_MINUS
operator|.
name|equals
argument_list|(
name|minus
argument_list|)
condition|)
block|{
name|endPage
operator|=
name|value
operator|.
name|substring
argument_list|(
name|minusIndex
operator|+
literal|2
argument_list|)
expr_stmt|;
block|}
name|StringPlusLanguage
name|start
init|=
operator|new
name|StringPlusLanguage
argument_list|()
decl_stmt|;
name|start
operator|.
name|setValue
argument_list|(
name|startPage
argument_list|)
expr_stmt|;
name|StringPlusLanguage
name|end
init|=
operator|new
name|StringPlusLanguage
argument_list|()
decl_stmt|;
name|end
operator|.
name|setValue
argument_list|(
name|endPage
argument_list|)
expr_stmt|;
name|ExtentDefinition
name|extent
init|=
operator|new
name|ExtentDefinition
argument_list|()
decl_stmt|;
name|extent
operator|.
name|setStart
argument_list|(
name|start
argument_list|)
expr_stmt|;
name|extent
operator|.
name|setEnd
argument_list|(
name|end
argument_list|)
expr_stmt|;
name|partDefinition
operator|.
name|getDetailOrExtentOrDate
argument_list|()
operator|.
name|add
argument_list|(
name|extent
argument_list|)
expr_stmt|;
block|}
DECL|method|addDetail (String detailName, String value, PartDefinition partDefinition)
specifier|private
name|void
name|addDetail
parameter_list|(
name|String
name|detailName
parameter_list|,
name|String
name|value
parameter_list|,
name|PartDefinition
name|partDefinition
parameter_list|)
block|{
name|DetailDefinition
name|detail
init|=
operator|new
name|DetailDefinition
argument_list|()
decl_stmt|;
name|StringPlusLanguage
name|detailType
init|=
operator|new
name|StringPlusLanguage
argument_list|()
decl_stmt|;
name|detailType
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|detail
operator|.
name|setType
argument_list|(
name|detailName
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|StringPlusLanguage
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"number"
argument_list|)
argument_list|,
name|StringPlusLanguage
operator|.
name|class
argument_list|,
name|detailType
argument_list|)
decl_stmt|;
name|detail
operator|.
name|getNumberOrCaptionOrTitle
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
name|partDefinition
operator|.
name|getDetailOrExtentOrDate
argument_list|()
operator|.
name|add
argument_list|(
name|detail
argument_list|)
expr_stmt|;
block|}
DECL|method|addOriginInformation (String key, String value, OriginInfoDefinition originInfo)
specifier|private
name|void
name|addOriginInformation
parameter_list|(
name|String
name|key
parameter_list|,
name|String
name|value
parameter_list|,
name|OriginInfoDefinition
name|originInfo
parameter_list|)
block|{
if|if
condition|(
name|FieldName
operator|.
name|YEAR
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|addDate
argument_list|(
literal|"dateIssued"
argument_list|,
name|value
argument_list|,
name|originInfo
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"created"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|addDate
argument_list|(
literal|"dateCreated"
argument_list|,
name|value
argument_list|,
name|originInfo
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"modified"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|addDate
argument_list|(
literal|"dateModified"
argument_list|,
name|value
argument_list|,
name|originInfo
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"captured"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|addDate
argument_list|(
literal|"dateCaptured"
argument_list|,
name|value
argument_list|,
name|originInfo
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|FieldName
operator|.
name|PUBLISHER
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|StringPlusLanguagePlusSupplied
name|publisher
init|=
operator|new
name|StringPlusLanguagePlusSupplied
argument_list|()
decl_stmt|;
name|publisher
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|StringPlusLanguagePlusSupplied
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"publisher"
argument_list|)
argument_list|,
name|StringPlusLanguagePlusSupplied
operator|.
name|class
argument_list|,
name|publisher
argument_list|)
decl_stmt|;
name|originInfo
operator|.
name|getPlaceOrPublisherOrDateIssued
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"issuance"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|IssuanceDefinition
name|issuance
init|=
name|IssuanceDefinition
operator|.
name|fromValue
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|JAXBElement
argument_list|<
name|IssuanceDefinition
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"issuance"
argument_list|)
argument_list|,
name|IssuanceDefinition
operator|.
name|class
argument_list|,
name|issuance
argument_list|)
decl_stmt|;
name|originInfo
operator|.
name|getPlaceOrPublisherOrDateIssued
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"address"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|PlaceDefinition
name|placeDefinition
init|=
operator|new
name|PlaceDefinition
argument_list|()
decl_stmt|;
comment|//There can be more than one place, so we split to get all places and add them
name|String
index|[]
name|places
init|=
name|value
operator|.
name|split
argument_list|(
literal|", "
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|place
range|:
name|places
control|)
block|{
name|PlaceTermDefinition
name|placeTerm
init|=
operator|new
name|PlaceTermDefinition
argument_list|()
decl_stmt|;
comment|//There's no possibility to see from a bib entry whether it is code or text, but since it is in the bib entry
comment|//we assume that it is text
name|placeTerm
operator|.
name|setType
argument_list|(
name|CodeOrText
operator|.
name|TEXT
argument_list|)
expr_stmt|;
name|placeTerm
operator|.
name|setValue
argument_list|(
name|place
argument_list|)
expr_stmt|;
name|placeDefinition
operator|.
name|getPlaceTerm
argument_list|()
operator|.
name|add
argument_list|(
name|placeTerm
argument_list|)
expr_stmt|;
block|}
name|JAXBElement
argument_list|<
name|PlaceDefinition
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"place"
argument_list|)
argument_list|,
name|PlaceDefinition
operator|.
name|class
argument_list|,
name|placeDefinition
argument_list|)
decl_stmt|;
name|originInfo
operator|.
name|getPlaceOrPublisherOrDateIssued
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
literal|"edition"
operator|.
name|equals
argument_list|(
name|key
argument_list|)
condition|)
block|{
name|StringPlusLanguagePlusSupplied
name|edition
init|=
operator|new
name|StringPlusLanguagePlusSupplied
argument_list|()
decl_stmt|;
name|edition
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|StringPlusLanguagePlusSupplied
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
literal|"edition"
argument_list|)
argument_list|,
name|StringPlusLanguagePlusSupplied
operator|.
name|class
argument_list|,
name|edition
argument_list|)
decl_stmt|;
name|originInfo
operator|.
name|getPlaceOrPublisherOrDateIssued
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|addDate (String dateName, String value, OriginInfoDefinition originInfo)
specifier|private
name|void
name|addDate
parameter_list|(
name|String
name|dateName
parameter_list|,
name|String
name|value
parameter_list|,
name|OriginInfoDefinition
name|originInfo
parameter_list|)
block|{
name|DateDefinition
name|dateIssued
init|=
operator|new
name|DateDefinition
argument_list|()
decl_stmt|;
name|dateIssued
operator|.
name|setKeyDate
argument_list|(
literal|"yes"
argument_list|)
expr_stmt|;
name|dateIssued
operator|.
name|setValue
argument_list|(
name|value
argument_list|)
expr_stmt|;
name|JAXBElement
argument_list|<
name|DateDefinition
argument_list|>
name|element
init|=
operator|new
name|JAXBElement
argument_list|<>
argument_list|(
operator|new
name|QName
argument_list|(
name|MODS_NAMESPACE_URI
argument_list|,
name|dateName
argument_list|)
argument_list|,
name|DateDefinition
operator|.
name|class
argument_list|,
name|dateIssued
argument_list|)
decl_stmt|;
name|originInfo
operator|.
name|getPlaceOrPublisherOrDateIssued
argument_list|()
operator|.
name|add
argument_list|(
name|element
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

