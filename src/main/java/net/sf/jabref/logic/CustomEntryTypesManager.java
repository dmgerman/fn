begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|EntryTypes
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseMode
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|CustomEntryType
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|EntryType
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|CustomEntryTypesManager
specifier|public
class|class
name|CustomEntryTypesManager
block|{
DECL|field|ALL
specifier|public
specifier|static
specifier|final
name|List
argument_list|<
name|EntryType
argument_list|>
name|ALL
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|/**      * Load all custom entry types from preferences. This method is      * called from JabRef when the program starts.      */
DECL|method|loadCustomEntryTypes (JabRefPreferences prefs)
specifier|public
specifier|static
name|void
name|loadCustomEntryTypes
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|)
block|{
name|int
name|number
init|=
literal|0
decl_stmt|;
name|Optional
argument_list|<
name|CustomEntryType
argument_list|>
name|type
decl_stmt|;
while|while
condition|(
operator|(
name|type
operator|=
name|prefs
operator|.
name|getCustomEntryType
argument_list|(
name|number
argument_list|)
operator|)
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|EntryTypes
operator|.
name|addOrModifyCustomEntryType
argument_list|(
name|type
operator|.
name|get
argument_list|()
argument_list|,
name|prefs
operator|.
name|getDefaultBibDatabaseMode
argument_list|()
argument_list|)
expr_stmt|;
name|ALL
operator|.
name|add
argument_list|(
name|type
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|number
operator|++
expr_stmt|;
block|}
block|}
comment|/**      * Iterate through all entry types, and store those that are      * custom defined to preferences. This method is called from      * JabRefFrame when the program closes.      */
DECL|method|saveCustomEntryTypes (JabRefPreferences prefs)
specifier|public
specifier|static
name|void
name|saveCustomEntryTypes
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|)
block|{
name|Iterator
argument_list|<
name|EntryType
argument_list|>
name|iterator
init|=
name|EntryTypes
operator|.
name|getAllValues
argument_list|(
name|BibDatabaseMode
operator|.
name|BIBTEX
argument_list|)
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|int
name|number
init|=
literal|0
decl_stmt|;
while|while
condition|(
name|iterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|EntryType
name|entryType
init|=
name|iterator
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|entryType
operator|instanceof
name|CustomEntryType
condition|)
block|{
comment|// Store this entry type.
name|prefs
operator|.
name|storeCustomEntryType
argument_list|(
operator|(
name|CustomEntryType
operator|)
name|entryType
argument_list|,
name|number
argument_list|)
expr_stmt|;
name|number
operator|++
expr_stmt|;
block|}
block|}
comment|// Then, if there are more 'old' custom types defined, remove these
comment|// from preferences. This is necessary if the number of custom types
comment|// has decreased.
name|prefs
operator|.
name|purgeCustomEntryTypes
argument_list|(
name|number
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

