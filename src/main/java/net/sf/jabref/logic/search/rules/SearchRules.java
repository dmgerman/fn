begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.search.rules
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|rules
package|;
end_package

begin_class
DECL|class|SearchRules
specifier|public
class|class
name|SearchRules
block|{
comment|/**      * Returns the appropriate search rule that fits best to the given parameter.      */
DECL|method|getSearchRuleByQuery (String query, boolean caseSensitive, boolean regex)
specifier|public
specifier|static
name|SearchRule
name|getSearchRuleByQuery
parameter_list|(
name|String
name|query
parameter_list|,
name|boolean
name|caseSensitive
parameter_list|,
name|boolean
name|regex
parameter_list|)
block|{
comment|// this searches specified fields if specified,
comment|// and all fields otherwise
name|SearchRule
name|searchExpression
init|=
operator|new
name|GrammarBasedSearchRule
argument_list|(
name|caseSensitive
argument_list|,
name|regex
argument_list|)
decl_stmt|;
if|if
condition|(
name|searchExpression
operator|.
name|validateSearchStrings
argument_list|(
name|query
argument_list|)
condition|)
block|{
return|return
name|searchExpression
return|;
block|}
else|else
block|{
return|return
name|getSearchRule
argument_list|(
name|caseSensitive
argument_list|,
name|regex
argument_list|)
return|;
block|}
block|}
DECL|method|getSearchRule (boolean caseSensitive, boolean regex)
specifier|private
specifier|static
name|SearchRule
name|getSearchRule
parameter_list|(
name|boolean
name|caseSensitive
parameter_list|,
name|boolean
name|regex
parameter_list|)
block|{
if|if
condition|(
name|regex
condition|)
block|{
return|return
operator|new
name|RegexBasedSearchRule
argument_list|(
name|caseSensitive
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|ContainBasedSearchRule
argument_list|(
name|caseSensitive
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

