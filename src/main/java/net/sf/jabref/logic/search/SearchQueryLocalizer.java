begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.search
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|SearchQueryLocalizer
specifier|public
class|class
name|SearchQueryLocalizer
block|{
DECL|method|localize (SearchQuery searchQuery)
specifier|public
specifier|static
name|String
name|localize
parameter_list|(
name|SearchQuery
name|searchQuery
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|searchQuery
argument_list|)
expr_stmt|;
return|return
name|String
operator|.
name|format
argument_list|(
literal|"\"%s\" (%s, %s)"
argument_list|,
name|searchQuery
operator|.
name|getQuery
argument_list|()
argument_list|,
name|getLocalizedCaseSensitiveDescription
argument_list|(
name|searchQuery
argument_list|)
argument_list|,
name|getLocalizedRegularExpressionDescription
argument_list|(
name|searchQuery
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getLocalizedCaseSensitiveDescription (SearchQuery searchQuery)
specifier|private
specifier|static
name|String
name|getLocalizedCaseSensitiveDescription
parameter_list|(
name|SearchQuery
name|searchQuery
parameter_list|)
block|{
if|if
condition|(
name|searchQuery
operator|.
name|isCaseSensitive
argument_list|()
condition|)
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"case sensitive"
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"case insensitive"
argument_list|)
return|;
block|}
block|}
DECL|method|getLocalizedRegularExpressionDescription (SearchQuery searchQuery)
specifier|private
specifier|static
name|String
name|getLocalizedRegularExpressionDescription
parameter_list|(
name|SearchQuery
name|searchQuery
parameter_list|)
block|{
if|if
condition|(
name|searchQuery
operator|.
name|isRegularExpression
argument_list|()
condition|)
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"regular expression"
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"plain text"
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

