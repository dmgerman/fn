begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2015 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.logic.search.rules.sets
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|rules
operator|.
name|sets
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|SearchRule
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Vector
import|;
end_import

begin_class
DECL|class|SearchRuleSet
specifier|public
specifier|abstract
class|class
name|SearchRuleSet
implements|implements
name|SearchRule
block|{
DECL|field|ruleSet
specifier|protected
specifier|final
name|List
argument_list|<
name|SearchRule
argument_list|>
name|ruleSet
init|=
operator|new
name|Vector
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|addRule (SearchRule newRule)
specifier|public
name|void
name|addRule
parameter_list|(
name|SearchRule
name|newRule
parameter_list|)
block|{
name|ruleSet
operator|.
name|add
argument_list|(
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|newRule
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|validateSearchStrings (String query)
specifier|public
name|boolean
name|validateSearchStrings
parameter_list|(
name|String
name|query
parameter_list|)
block|{
for|for
control|(
name|SearchRule
name|searchRule
range|:
name|ruleSet
control|)
block|{
if|if
condition|(
operator|!
name|searchRule
operator|.
name|validateSearchStrings
argument_list|(
name|query
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

