begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.search.rules
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|rules
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|BibtexEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|SearchRule
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Inverts the search result.  *<p>  * Example:  * false --> true  * true --> false  */
end_comment

begin_class
DECL|class|InvertSearchRule
specifier|public
class|class
name|InvertSearchRule
implements|implements
name|SearchRule
block|{
DECL|field|otherRule
specifier|private
specifier|final
name|SearchRule
name|otherRule
decl_stmt|;
DECL|method|InvertSearchRule (SearchRule otherRule)
specifier|public
name|InvertSearchRule
parameter_list|(
name|SearchRule
name|otherRule
parameter_list|)
block|{
name|this
operator|.
name|otherRule
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|otherRule
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|applyRule (String query, BibtexEntry bibtexEntry)
specifier|public
name|boolean
name|applyRule
parameter_list|(
name|String
name|query
parameter_list|,
name|BibtexEntry
name|bibtexEntry
parameter_list|)
block|{
return|return
operator|!
name|otherRule
operator|.
name|applyRule
argument_list|(
name|query
argument_list|,
name|bibtexEntry
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|validateSearchStrings (String query)
specifier|public
name|boolean
name|validateSearchStrings
parameter_list|(
name|String
name|query
parameter_list|)
block|{
return|return
name|this
operator|.
name|otherRule
operator|.
name|validateSearchStrings
argument_list|(
name|query
argument_list|)
return|;
block|}
block|}
end_class

end_unit

