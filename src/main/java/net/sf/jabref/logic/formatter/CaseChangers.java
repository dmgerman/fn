begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2015 JabRef contributors and Moritz Ringler, Simon Harrer     Copyright (C) 2015 Ocar Gustafsson, Oliver Kopp      This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|net.sf.jabref.logic.formatter
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|formatter
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|formatter
operator|.
name|casechanger
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * Class with static methods for changing the case of strings and arrays of strings.  *<p>  * This class must detect the words in the title and whether letters are protected for case changes via enclosing them with '{' and '}' brakets.  * Hence, for each letter to be changed, it needs to be known wether it is protected or not.  * This can be done by starting at the letter position and moving forward and backword to see if there is a '{' and '}, respectively.  */
end_comment

begin_class
DECL|class|CaseChangers
specifier|public
class|class
name|CaseChangers
block|{
DECL|field|LOWER
specifier|public
specifier|static
specifier|final
name|LowerCaseChanger
name|LOWER
init|=
operator|new
name|LowerCaseChanger
argument_list|()
decl_stmt|;
DECL|field|UPPER
specifier|public
specifier|static
specifier|final
name|UpperCaseChanger
name|UPPER
init|=
operator|new
name|UpperCaseChanger
argument_list|()
decl_stmt|;
DECL|field|UPPER_FIRST
specifier|public
specifier|static
specifier|final
name|UpperFirstCaseChanger
name|UPPER_FIRST
init|=
operator|new
name|UpperFirstCaseChanger
argument_list|()
decl_stmt|;
DECL|field|UPPER_EACH_FIRST
specifier|public
specifier|static
specifier|final
name|UpperEachFirstCaseChanger
name|UPPER_EACH_FIRST
init|=
operator|new
name|UpperEachFirstCaseChanger
argument_list|()
decl_stmt|;
DECL|field|TITLE
specifier|public
specifier|static
specifier|final
name|TitleCaseChanger
name|TITLE
init|=
operator|new
name|TitleCaseChanger
argument_list|()
decl_stmt|;
DECL|field|ALL
specifier|public
specifier|static
specifier|final
name|List
argument_list|<
name|Formatter
argument_list|>
name|ALL
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|LOWER
argument_list|,
name|UPPER
argument_list|,
name|UPPER_FIRST
argument_list|,
name|UPPER_EACH_FIRST
argument_list|,
name|TITLE
argument_list|)
decl_stmt|;
block|}
end_class

end_unit

