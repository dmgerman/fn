begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.citationstyle
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|citationstyle
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|event
operator|.
name|EntryRemovedEvent
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|event
operator|.
name|EntryChangedEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|eventbus
operator|.
name|Subscribe
import|;
end_import

begin_comment
comment|/**  * Caches the generated Citations for quicker access  * {@link CitationStyleGenerator} generates the citaiton with JavaScript which may take some time  */
end_comment

begin_class
DECL|class|CitationStyleCache
specifier|public
class|class
name|CitationStyleCache
block|{
DECL|field|citationStyle
specifier|private
name|CitationStyle
name|citationStyle
init|=
name|CitationStyle
operator|.
name|getDefault
argument_list|()
decl_stmt|;
DECL|field|citationStylesCache
specifier|private
name|Map
argument_list|<
name|BibEntry
argument_list|,
name|String
argument_list|>
name|citationStylesCache
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|CitationStyleCache (BibDatabaseContext bibDatabaseContext)
specifier|public
name|CitationStyleCache
parameter_list|(
name|BibDatabaseContext
name|bibDatabaseContext
parameter_list|)
block|{
name|this
argument_list|(
name|bibDatabaseContext
argument_list|,
name|CitationStyle
operator|.
name|getDefault
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|CitationStyleCache (BibDatabaseContext bibDatabaseContext, CitationStyle citationStyle)
specifier|public
name|CitationStyleCache
parameter_list|(
name|BibDatabaseContext
name|bibDatabaseContext
parameter_list|,
name|CitationStyle
name|citationStyle
parameter_list|)
block|{
name|this
operator|.
name|setCitationStyle
argument_list|(
name|citationStyle
argument_list|)
expr_stmt|;
name|bibDatabaseContext
operator|.
name|getDatabase
argument_list|()
operator|.
name|registerListener
argument_list|(
operator|new
name|BibDatabaseEntryListener
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * returns the citation for the given BibEntry and the set CitationStyle      */
DECL|method|getCitationFor (BibEntry entry)
specifier|public
name|String
name|getCitationFor
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|String
name|citation
init|=
name|citationStylesCache
operator|.
name|get
argument_list|(
name|entry
argument_list|)
decl_stmt|;
if|if
condition|(
name|citation
operator|==
literal|null
condition|)
block|{
name|citation
operator|=
name|CitationStyleGenerator
operator|.
name|generateCitation
argument_list|(
name|entry
argument_list|,
name|this
operator|.
name|citationStyle
operator|.
name|getSource
argument_list|()
argument_list|,
name|CitationStyleOutputFormat
operator|.
name|HTML
argument_list|)
expr_stmt|;
name|citationStylesCache
operator|.
name|put
argument_list|(
name|entry
argument_list|,
name|citation
argument_list|)
expr_stmt|;
block|}
return|return
name|citation
return|;
block|}
DECL|method|setCitationStyle (CitationStyle citationStyle)
specifier|public
name|void
name|setCitationStyle
parameter_list|(
name|CitationStyle
name|citationStyle
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|citationStyle
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|this
operator|.
name|citationStyle
operator|.
name|equals
argument_list|(
name|citationStyle
argument_list|)
condition|)
block|{
name|this
operator|.
name|citationStyle
operator|=
name|citationStyle
expr_stmt|;
name|this
operator|.
name|citationStylesCache
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|getCitationStyle ()
specifier|public
name|CitationStyle
name|getCitationStyle
parameter_list|()
block|{
return|return
name|citationStyle
return|;
block|}
DECL|class|BibDatabaseEntryListener
specifier|private
class|class
name|BibDatabaseEntryListener
block|{
comment|/**          * removes the outdated citation of the changed entry          */
annotation|@
name|Subscribe
DECL|method|listen (EntryChangedEvent entryChangedEvent)
specifier|public
name|void
name|listen
parameter_list|(
name|EntryChangedEvent
name|entryChangedEvent
parameter_list|)
block|{
name|citationStylesCache
operator|.
name|remove
argument_list|(
name|entryChangedEvent
operator|.
name|getBibEntry
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**          * removes the citation of the removed entry as it's not needed anymore          */
annotation|@
name|Subscribe
DECL|method|listen (EntryRemovedEvent entryRemovedEvent)
specifier|public
name|void
name|listen
parameter_list|(
name|EntryRemovedEvent
name|entryRemovedEvent
parameter_list|)
block|{
name|citationStylesCache
operator|.
name|remove
argument_list|(
name|entryRemovedEvent
operator|.
name|getBibEntry
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

