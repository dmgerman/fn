begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.logging
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|logging
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|logging
operator|.
name|Cache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|Layout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|LogEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|appender
operator|.
name|AbstractAppender
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|plugins
operator|.
name|Plugin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|plugins
operator|.
name|PluginAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|plugins
operator|.
name|PluginElement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|config
operator|.
name|plugins
operator|.
name|PluginFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|logging
operator|.
name|log4j
operator|.
name|core
operator|.
name|layout
operator|.
name|PatternLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_class
annotation|@
name|Plugin
argument_list|(
name|name
operator|=
literal|"GuiAppender"
argument_list|,
name|category
operator|=
literal|"Core"
argument_list|,
name|elementType
operator|=
literal|"appender"
argument_list|,
name|printObject
operator|=
literal|true
argument_list|)
DECL|class|GuiAppender
specifier|public
class|class
name|GuiAppender
extends|extends
name|AbstractAppender
block|{
DECL|field|cache
specifier|public
specifier|static
specifier|final
name|Cache
name|cache
init|=
operator|new
name|Cache
argument_list|()
decl_stmt|;
DECL|method|GuiAppender (String name, Filter filter, Layout<? extends Serializable> layout)
specifier|protected
name|GuiAppender
parameter_list|(
name|String
name|name
parameter_list|,
name|Filter
name|filter
parameter_list|,
name|Layout
argument_list|<
name|?
extends|extends
name|Serializable
argument_list|>
name|layout
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|filter
argument_list|,
name|layout
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PluginFactory
DECL|method|createAppender (@luginAttributeR) String name, @PluginElement(R) Layout<?> layout, @PluginElement(R) Filter filter)
specifier|public
specifier|static
name|GuiAppender
name|createAppender
parameter_list|(
annotation|@
name|PluginAttribute
argument_list|(
literal|"name"
argument_list|)
name|String
name|name
parameter_list|,
annotation|@
name|PluginElement
argument_list|(
literal|"Layout"
argument_list|)
name|Layout
argument_list|<
name|?
argument_list|>
name|layout
parameter_list|,
annotation|@
name|PluginElement
argument_list|(
literal|"Filters"
argument_list|)
name|Filter
name|filter
parameter_list|)
block|{
if|if
condition|(
name|name
operator|==
literal|null
condition|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"No name provided for GuiAppender"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
if|if
condition|(
name|layout
operator|==
literal|null
condition|)
block|{
name|layout
operator|=
name|PatternLayout
operator|.
name|createDefaultLayout
argument_list|()
expr_stmt|;
block|}
return|return
operator|new
name|GuiAppender
argument_list|(
name|name
argument_list|,
name|filter
argument_list|,
name|layout
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|append (LogEvent event)
specifier|public
name|void
name|append
parameter_list|(
name|LogEvent
name|event
parameter_list|)
block|{
name|cache
operator|.
name|add
argument_list|(
operator|new
name|String
argument_list|(
name|this
operator|.
name|getLayout
argument_list|()
operator|.
name|toByteArray
argument_list|(
name|event
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

