begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.journals
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_class
DECL|class|Abbreviations
specifier|public
class|class
name|Abbreviations
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|Abbreviations
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// journal initialization
DECL|field|JOURNALS_FILE_BUILTIN
specifier|public
specifier|static
specifier|final
name|String
name|JOURNALS_FILE_BUILTIN
init|=
literal|"/journals/journalList.txt"
decl_stmt|;
DECL|field|JOURNALS_IEEE_INTERNAL_LIST
specifier|public
specifier|static
specifier|final
name|String
name|JOURNALS_IEEE_INTERNAL_LIST
init|=
literal|"/journals/IEEEJournalList.txt"
decl_stmt|;
DECL|field|journalAbbrev
specifier|public
specifier|static
name|JournalAbbreviationRepository
name|journalAbbrev
decl_stmt|;
DECL|method|initializeJournalNames (JabRefPreferences jabRefPreferences)
specifier|public
specifier|static
name|void
name|initializeJournalNames
parameter_list|(
name|JabRefPreferences
name|jabRefPreferences
parameter_list|)
block|{
comment|// Read internal lists:
name|journalAbbrev
operator|=
operator|new
name|JournalAbbreviationRepository
argument_list|()
expr_stmt|;
name|journalAbbrev
operator|.
name|readJournalListFromResource
argument_list|(
name|JOURNALS_FILE_BUILTIN
argument_list|)
expr_stmt|;
if|if
condition|(
name|jabRefPreferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|USE_IEEE_ABRV
argument_list|)
condition|)
block|{
name|journalAbbrev
operator|.
name|readJournalListFromResource
argument_list|(
name|JOURNALS_IEEE_INTERNAL_LIST
argument_list|)
expr_stmt|;
block|}
comment|// Read external lists, if any (in reverse order, so the upper lists
comment|// override the lower):
name|String
index|[]
name|lists
init|=
name|jabRefPreferences
operator|.
name|getStringArray
argument_list|(
name|JabRefPreferences
operator|.
name|EXTERNAL_JOURNAL_LISTS
argument_list|)
decl_stmt|;
if|if
condition|(
name|lists
operator|!=
literal|null
operator|&&
name|lists
operator|.
name|length
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|int
name|i
init|=
name|lists
operator|.
name|length
operator|-
literal|1
init|;
name|i
operator|>=
literal|0
condition|;
name|i
operator|--
control|)
block|{
name|String
name|filename
init|=
name|lists
index|[
name|i
index|]
decl_stmt|;
try|try
block|{
name|journalAbbrev
operator|.
name|readJournalListFromFile
argument_list|(
operator|new
name|File
argument_list|(
name|filename
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
comment|// The file couldn't be found... should we tell anyone?
name|LOGGER
operator|.
name|info
argument_list|(
literal|"Cannot find external journal list file "
operator|+
name|filename
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|// Read personal list, if set up:
name|String
name|personalJournalList
init|=
name|jabRefPreferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|PERSONAL_JOURNAL_LIST
argument_list|)
decl_stmt|;
if|if
condition|(
name|personalJournalList
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|journalAbbrev
operator|.
name|readJournalListFromFile
argument_list|(
operator|new
name|File
argument_list|(
name|personalJournalList
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|info
argument_list|(
literal|"Personal journal list file '"
operator|+
name|personalJournalList
operator|+
literal|"' not found."
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

