begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.integrity
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
operator|.
name|IntegrityCheck
operator|.
name|Checker
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_class
DECL|class|ISSNChecker
specifier|public
class|class
name|ISSNChecker
implements|implements
name|Checker
block|{
DECL|field|ISSN_PATTERN
specifier|private
specifier|static
specifier|final
name|Pattern
name|ISSN_PATTERN
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"^\\d{4}-\\d{3}[\\dxX]$"
argument_list|)
decl_stmt|;
annotation|@
name|Override
DECL|method|check (BibEntry entry)
specifier|public
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|check
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
if|if
condition|(
operator|!
name|entry
operator|.
name|hasField
argument_list|(
name|FieldName
operator|.
name|ISSN
argument_list|)
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
comment|// Check that the ISSN is on the correct form
name|String
name|issn
init|=
name|entry
operator|.
name|getFieldOptional
argument_list|(
name|FieldName
operator|.
name|ISSN
argument_list|)
operator|.
name|get
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|Matcher
name|issnMatcher
init|=
name|ISSN_PATTERN
operator|.
name|matcher
argument_list|(
name|issn
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|issnMatcher
operator|.
name|matches
argument_list|()
condition|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|IntegrityMessage
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"incorrect format"
argument_list|)
argument_list|,
name|entry
argument_list|,
name|FieldName
operator|.
name|ISSN
argument_list|)
argument_list|)
return|;
block|}
comment|// Check that the control digit is correct, see e.g. https://en.wikipedia.org/wiki/International_Standard_Serial_Number
name|int
name|sum
init|=
literal|0
decl_stmt|;
for|for
control|(
name|int
name|pos
init|=
literal|0
init|;
name|pos
operator|<=
literal|7
condition|;
name|pos
operator|++
control|)
block|{
name|char
name|c
init|=
name|issn
operator|.
name|charAt
argument_list|(
name|pos
argument_list|)
decl_stmt|;
if|if
condition|(
name|pos
operator|!=
literal|4
condition|)
block|{
name|sum
operator|+=
operator|(
name|c
operator|-
literal|'0'
operator|)
operator|*
operator|(
operator|(
literal|8
operator|-
name|pos
operator|)
operator|+
operator|(
name|pos
operator|>
literal|4
condition|?
literal|1
else|:
literal|0
operator|)
operator|)
expr_stmt|;
block|}
block|}
name|char
name|control
init|=
name|issn
operator|.
name|charAt
argument_list|(
literal|8
argument_list|)
decl_stmt|;
if|if
condition|(
operator|(
name|control
operator|==
literal|'x'
operator|)
operator|||
operator|(
name|control
operator|==
literal|'X'
operator|)
condition|)
block|{
name|control
operator|=
literal|'9'
operator|+
literal|1
expr_stmt|;
block|}
if|if
condition|(
operator|(
operator|(
operator|(
operator|(
name|sum
operator|%
literal|11
operator|)
operator|+
name|control
operator|)
operator|-
literal|'0'
operator|)
operator|==
literal|11
operator|)
operator|||
operator|(
operator|(
name|sum
operator|%
literal|11
operator|)
operator|==
literal|0
operator|)
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|IntegrityMessage
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"incorrect control digit"
argument_list|)
argument_list|,
name|entry
argument_list|,
name|FieldName
operator|.
name|ISSN
argument_list|)
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

