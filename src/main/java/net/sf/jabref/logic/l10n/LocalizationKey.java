begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.l10n
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|LocalizationKey
specifier|public
class|class
name|LocalizationKey
block|{
DECL|field|key
specifier|private
specifier|final
name|String
name|key
decl_stmt|;
DECL|method|LocalizationKey (String key)
specifier|public
name|LocalizationKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|this
operator|.
name|key
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
DECL|method|getPropertiesKeyUnescaped ()
specifier|public
name|String
name|getPropertiesKeyUnescaped
parameter_list|()
block|{
comment|// space, #, !, = and : are not allowed in properties file keys
return|return
name|this
operator|.
name|key
operator|.
name|replace
argument_list|(
literal|" "
argument_list|,
literal|"_"
argument_list|)
return|;
block|}
DECL|method|getPropertiesKey ()
specifier|public
name|String
name|getPropertiesKey
parameter_list|()
block|{
comment|// space, #, !, = and : are not allowed in properties file keys (# and ! only at the beginning of the key but easier to escape every instance
return|return
name|this
operator|.
name|key
operator|.
name|replace
argument_list|(
literal|" "
argument_list|,
literal|"_"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"#"
argument_list|,
literal|"\\#"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"!"
argument_list|,
literal|"\\!"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"="
argument_list|,
literal|"\\="
argument_list|)
operator|.
name|replace
argument_list|(
literal|":"
argument_list|,
literal|"\\:"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\\\\"
argument_list|,
literal|"\\"
argument_list|)
return|;
block|}
DECL|method|getTranslationValue ()
specifier|public
name|String
name|getTranslationValue
parameter_list|()
block|{
return|return
name|this
operator|.
name|key
operator|.
name|replace
argument_list|(
literal|"_"
argument_list|,
literal|" "
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\\#"
argument_list|,
literal|"#"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\\!"
argument_list|,
literal|"!"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\\="
argument_list|,
literal|"="
argument_list|)
operator|.
name|replace
argument_list|(
literal|"\\:"
argument_list|,
literal|":"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

