begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.autocompleter
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|autocompleter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_comment
comment|/**  * Delivers possible completions for a given string.  * Stores the full original value of one field of the given BibtexEntries.  *  * @author kahlert, cordes  */
end_comment

begin_class
DECL|class|EntireFieldAutoCompleter
class|class
name|EntireFieldAutoCompleter
extends|extends
name|AbstractAutoCompleter
block|{
DECL|field|fieldName
specifier|private
specifier|final
name|String
name|fieldName
decl_stmt|;
comment|/**      * @see AutoCompleterFactory      */
DECL|method|EntireFieldAutoCompleter (String fieldName, AutoCompletePreferences preferences)
name|EntireFieldAutoCompleter
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|AutoCompletePreferences
name|preferences
parameter_list|)
block|{
name|super
argument_list|(
name|preferences
argument_list|)
expr_stmt|;
name|this
operator|.
name|fieldName
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|isSingleUnitField ()
specifier|public
name|boolean
name|isSingleUnitField
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
comment|/**      * {@inheritDoc}      * Stores the full original value of the given field.      */
annotation|@
name|Override
DECL|method|addBibtexEntry (BibEntry entry)
specifier|public
name|void
name|addBibtexEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
if|if
condition|(
name|entry
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|entry
operator|.
name|getField
argument_list|(
name|fieldName
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|fieldValue
lambda|->
name|addItemToIndex
argument_list|(
name|fieldValue
operator|.
name|trim
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

