begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.importer.fetcher
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|help
operator|.
name|HelpFile
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|FetcherException
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|IdBasedFetcher
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ImportFormatPreferences
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|BibtexParser
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|ISBN
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|Unirest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mashape
operator|.
name|unirest
operator|.
name|http
operator|.
name|exceptions
operator|.
name|UnirestException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|http
operator|.
name|client
operator|.
name|utils
operator|.
name|URIBuilder
import|;
end_import

begin_comment
comment|/**  * Fetcher for ISBN.  */
end_comment

begin_class
DECL|class|IsbnFetcher
specifier|public
class|class
name|IsbnFetcher
implements|implements
name|IdBasedFetcher
block|{
DECL|field|URL_PATTERN
specifier|private
specifier|static
specifier|final
name|String
name|URL_PATTERN
init|=
literal|"http://www.ebook.de/de/tools/isbn2bibtex?"
decl_stmt|;
DECL|field|prefs
specifier|private
name|ImportFormatPreferences
name|prefs
decl_stmt|;
DECL|method|IsbnFetcher (ImportFormatPreferences prefs)
specifier|public
name|IsbnFetcher
parameter_list|(
name|ImportFormatPreferences
name|prefs
parameter_list|)
block|{
name|this
operator|.
name|prefs
operator|=
name|prefs
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"ISBN"
return|;
block|}
annotation|@
name|Override
DECL|method|getHelpPage ()
specifier|public
name|HelpFile
name|getHelpPage
parameter_list|()
block|{
return|return
name|HelpFile
operator|.
name|FETCHER_ISBN_TO_BIBTEX
return|;
block|}
annotation|@
name|Override
DECL|method|performSearchById (String identifier)
specifier|public
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|performSearchById
parameter_list|(
name|String
name|identifier
parameter_list|)
throws|throws
name|FetcherException
block|{
name|ISBN
name|isbn
init|=
operator|new
name|ISBN
argument_list|(
name|identifier
argument_list|)
decl_stmt|;
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|result
init|=
name|Optional
operator|.
name|empty
argument_list|()
decl_stmt|;
if|if
condition|(
name|isbn
operator|.
name|isValidChecksum
argument_list|()
operator|&&
name|isbn
operator|.
name|isValidFormat
argument_list|()
condition|)
block|{
try|try
block|{
comment|//Build the URL. In this case: http://www.ebook.de/de/tools/isbn2bibtex?isbn=identifier
name|URIBuilder
name|uriBuilder
init|=
operator|new
name|URIBuilder
argument_list|(
name|URL_PATTERN
argument_list|)
decl_stmt|;
name|uriBuilder
operator|.
name|addParameter
argument_list|(
literal|"isbn"
argument_list|,
name|identifier
argument_list|)
expr_stmt|;
name|URL
name|url
init|=
name|uriBuilder
operator|.
name|build
argument_list|()
operator|.
name|toURL
argument_list|()
decl_stmt|;
comment|//Downloads the source code of the site and then creates a .bib file out of the String
name|String
name|bibtexString
init|=
name|Unirest
operator|.
name|get
argument_list|(
name|url
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|asString
argument_list|()
operator|.
name|getBody
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|entry
init|=
name|BibtexParser
operator|.
name|singleFromString
argument_list|(
name|bibtexString
argument_list|,
name|prefs
argument_list|)
decl_stmt|;
if|if
condition|(
name|entry
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|result
operator|=
name|postProcessEntry
argument_list|(
name|entry
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|UnirestException
decl||
name|IOException
decl||
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|FetcherException
argument_list|(
literal|"Bad URL when fetching ISBN info"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|result
return|;
block|}
DECL|method|postProcessEntry (BibEntry entry)
specifier|private
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|postProcessEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
if|if
condition|(
name|entry
operator|.
name|hasField
argument_list|(
name|FieldName
operator|.
name|URL
argument_list|)
condition|)
block|{
name|entry
operator|.
name|clearField
argument_list|(
name|FieldName
operator|.
name|URL
argument_list|)
expr_stmt|;
block|}
comment|//Removes every non-digit character in the PAGETOTAL field.
name|Optional
argument_list|<
name|String
argument_list|>
name|pagetotal
init|=
name|entry
operator|.
name|getField
argument_list|(
name|FieldName
operator|.
name|PAGETOTAL
argument_list|)
decl_stmt|;
name|pagetotal
operator|.
name|ifPresent
argument_list|(
name|pg
lambda|->
block|{
name|entry
operator|.
name|setField
argument_list|(
name|FieldName
operator|.
name|PAGETOTAL
argument_list|,
name|pg
operator|.
name|replaceAll
argument_list|(
literal|"[\\D]"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|of
argument_list|(
name|entry
argument_list|)
return|;
block|}
block|}
end_class

end_unit

