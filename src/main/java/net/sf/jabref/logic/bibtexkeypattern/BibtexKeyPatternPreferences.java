begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.logic.bibtexkeypattern
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|bibtexkeypattern
package|;
end_package

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|BibtexKeyPatternPreferences
specifier|public
class|class
name|BibtexKeyPatternPreferences
block|{
DECL|field|defaultLabelPattern
specifier|private
specifier|final
name|String
name|defaultLabelPattern
decl_stmt|;
DECL|field|keyPatternRegex
specifier|private
specifier|final
name|String
name|keyPatternRegex
decl_stmt|;
DECL|field|keyPatternReplacement
specifier|private
specifier|final
name|String
name|keyPatternReplacement
decl_stmt|;
DECL|field|alwaysAddLetter
specifier|private
specifier|final
name|boolean
name|alwaysAddLetter
decl_stmt|;
DECL|field|firstLetterA
specifier|private
specifier|final
name|boolean
name|firstLetterA
decl_stmt|;
DECL|field|enforceLegalKey
specifier|private
specifier|final
name|boolean
name|enforceLegalKey
decl_stmt|;
DECL|method|BibtexKeyPatternPreferences (String defaultLabelPattern, String keyPatternRegex, String keyPatternReplacement, boolean alwaysAddLetter, boolean firstLetterA, boolean enforceLegalKey)
specifier|public
name|BibtexKeyPatternPreferences
parameter_list|(
name|String
name|defaultLabelPattern
parameter_list|,
name|String
name|keyPatternRegex
parameter_list|,
name|String
name|keyPatternReplacement
parameter_list|,
name|boolean
name|alwaysAddLetter
parameter_list|,
name|boolean
name|firstLetterA
parameter_list|,
name|boolean
name|enforceLegalKey
parameter_list|)
block|{
name|this
operator|.
name|defaultLabelPattern
operator|=
name|defaultLabelPattern
expr_stmt|;
name|this
operator|.
name|keyPatternRegex
operator|=
name|keyPatternRegex
expr_stmt|;
name|this
operator|.
name|keyPatternReplacement
operator|=
name|keyPatternReplacement
expr_stmt|;
name|this
operator|.
name|alwaysAddLetter
operator|=
name|alwaysAddLetter
expr_stmt|;
name|this
operator|.
name|firstLetterA
operator|=
name|firstLetterA
expr_stmt|;
name|this
operator|.
name|enforceLegalKey
operator|=
name|enforceLegalKey
expr_stmt|;
block|}
DECL|method|fromPreferences (JabRefPreferences jabRefPreferences)
specifier|public
specifier|static
name|BibtexKeyPatternPreferences
name|fromPreferences
parameter_list|(
name|JabRefPreferences
name|jabRefPreferences
parameter_list|)
block|{
return|return
operator|new
name|BibtexKeyPatternPreferences
argument_list|(
name|jabRefPreferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|DEFAULT_LABEL_PATTERN
argument_list|)
argument_list|,
name|jabRefPreferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|KEY_PATTERN_REGEX
argument_list|)
argument_list|,
name|jabRefPreferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|KEY_PATTERN_REPLACEMENT
argument_list|)
argument_list|,
name|jabRefPreferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|KEY_GEN_ALWAYS_ADD_LETTER
argument_list|)
argument_list|,
name|jabRefPreferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|KEY_GEN_FIRST_LETTER_A
argument_list|)
argument_list|,
name|jabRefPreferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|ENFORCE_LEGAL_BIBTEX_KEY
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getKeyPatternRegex ()
specifier|public
name|String
name|getKeyPatternRegex
parameter_list|()
block|{
return|return
name|keyPatternRegex
return|;
block|}
DECL|method|getKeyPatternReplacement ()
specifier|public
name|String
name|getKeyPatternReplacement
parameter_list|()
block|{
return|return
name|keyPatternReplacement
return|;
block|}
DECL|method|isAlwaysAddLetter ()
specifier|public
name|boolean
name|isAlwaysAddLetter
parameter_list|()
block|{
return|return
name|alwaysAddLetter
return|;
block|}
DECL|method|isFirstLetterA ()
specifier|public
name|boolean
name|isFirstLetterA
parameter_list|()
block|{
return|return
name|firstLetterA
return|;
block|}
DECL|method|isEnforceLegalKey ()
specifier|public
name|boolean
name|isEnforceLegalKey
parameter_list|()
block|{
return|return
name|enforceLegalKey
return|;
block|}
DECL|method|getDefaultLabelPattern ()
specifier|public
name|String
name|getDefaultLabelPattern
parameter_list|()
block|{
return|return
name|defaultLabelPattern
return|;
block|}
block|}
end_class

end_unit

