begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2003-2015 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.  */
end_comment

begin_package
DECL|package|net.sf.jabref.sql
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|sql
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBinding
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|ButtonBarBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|FormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_comment
comment|/**  * Dialog box for collecting database connection strings from the user  *  * @author pattonlk  */
end_comment

begin_class
DECL|class|DBConnectDialog
specifier|public
class|class
name|DBConnectDialog
extends|extends
name|JDialog
block|{
comment|// input fields
DECL|field|cmbServerType
specifier|private
specifier|final
name|JComboBox
argument_list|<
name|String
argument_list|>
name|cmbServerType
init|=
operator|new
name|JComboBox
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|txtServerHostname
specifier|private
specifier|final
name|JTextField
name|txtServerHostname
init|=
operator|new
name|JTextField
argument_list|(
literal|40
argument_list|)
decl_stmt|;
DECL|field|txtDatabase
specifier|private
specifier|final
name|JTextField
name|txtDatabase
init|=
operator|new
name|JTextField
argument_list|(
literal|40
argument_list|)
decl_stmt|;
DECL|field|txtUsername
specifier|private
specifier|final
name|JTextField
name|txtUsername
init|=
operator|new
name|JTextField
argument_list|(
literal|40
argument_list|)
decl_stmt|;
DECL|field|pwdPassword
specifier|private
specifier|final
name|JPasswordField
name|pwdPassword
init|=
operator|new
name|JPasswordField
argument_list|(
literal|40
argument_list|)
decl_stmt|;
DECL|field|dbStrings
specifier|private
name|DBStrings
name|dbStrings
init|=
operator|new
name|DBStrings
argument_list|()
decl_stmt|;
DECL|field|connectedToDB
specifier|private
name|boolean
name|connectedToDB
decl_stmt|;
comment|/** Creates a new instance of DBConnectDialog */
DECL|method|DBConnectDialog (JFrame parent, DBStrings dbs)
specifier|public
name|DBConnectDialog
parameter_list|(
name|JFrame
name|parent
parameter_list|,
name|DBStrings
name|dbs
parameter_list|)
block|{
name|super
argument_list|(
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|parent
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Connect to SQL database"
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|setResizable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|setLocationRelativeTo
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|dbStrings
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|dbs
argument_list|)
expr_stmt|;
comment|// build collections of components
name|ArrayList
argument_list|<
name|JLabel
argument_list|>
name|lhs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|JLabel
name|lblServerType
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|lhs
operator|.
name|add
argument_list|(
name|lblServerType
argument_list|)
expr_stmt|;
name|JLabel
name|lblServerHostname
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|lhs
operator|.
name|add
argument_list|(
name|lblServerHostname
argument_list|)
expr_stmt|;
name|JLabel
name|lblDatabase
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|lhs
operator|.
name|add
argument_list|(
name|lblDatabase
argument_list|)
expr_stmt|;
name|JLabel
name|lblUsername
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|lhs
operator|.
name|add
argument_list|(
name|lblUsername
argument_list|)
expr_stmt|;
name|JLabel
name|lblPassword
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|lhs
operator|.
name|add
argument_list|(
name|lblPassword
argument_list|)
expr_stmt|;
name|ArrayList
argument_list|<
name|JComponent
argument_list|>
name|rhs
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|rhs
operator|.
name|add
argument_list|(
name|cmbServerType
argument_list|)
expr_stmt|;
name|rhs
operator|.
name|add
argument_list|(
name|txtServerHostname
argument_list|)
expr_stmt|;
name|rhs
operator|.
name|add
argument_list|(
name|txtDatabase
argument_list|)
expr_stmt|;
name|rhs
operator|.
name|add
argument_list|(
name|txtUsername
argument_list|)
expr_stmt|;
name|rhs
operator|.
name|add
argument_list|(
name|pwdPassword
argument_list|)
expr_stmt|;
comment|// setup label text
name|lblServerType
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Server type"
operator|+
literal|':'
argument_list|)
argument_list|)
expr_stmt|;
name|lblServerHostname
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Server hostname"
operator|+
literal|':'
argument_list|)
argument_list|)
expr_stmt|;
name|lblDatabase
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Database"
argument_list|)
operator|+
literal|':'
argument_list|)
expr_stmt|;
name|lblUsername
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Username"
argument_list|)
operator|+
literal|':'
argument_list|)
expr_stmt|;
name|lblPassword
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Password"
argument_list|)
operator|+
literal|':'
argument_list|)
expr_stmt|;
comment|// set label text alignment
for|for
control|(
name|JLabel
name|label
range|:
name|lhs
control|)
block|{
name|label
operator|.
name|setHorizontalAlignment
argument_list|(
name|SwingConstants
operator|.
name|RIGHT
argument_list|)
expr_stmt|;
block|}
comment|// set button text
name|JButton
name|btnConnect
init|=
operator|new
name|JButton
argument_list|()
decl_stmt|;
name|btnConnect
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Connect"
argument_list|)
argument_list|)
expr_stmt|;
name|JButton
name|btnCancel
init|=
operator|new
name|JButton
argument_list|()
decl_stmt|;
name|btnCancel
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
comment|// init input fields to current DB strings
name|String
name|srvSel
init|=
name|dbStrings
operator|.
name|getServerType
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|srv
init|=
name|dbStrings
operator|.
name|getServerTypes
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|aSrv
range|:
name|srv
control|)
block|{
name|cmbServerType
operator|.
name|addItem
argument_list|(
name|aSrv
argument_list|)
expr_stmt|;
block|}
name|cmbServerType
operator|.
name|setSelectedItem
argument_list|(
name|srvSel
argument_list|)
expr_stmt|;
name|txtServerHostname
operator|.
name|setText
argument_list|(
name|dbStrings
operator|.
name|getServerHostname
argument_list|()
argument_list|)
expr_stmt|;
name|txtDatabase
operator|.
name|setText
argument_list|(
name|dbStrings
operator|.
name|getDatabase
argument_list|()
argument_list|)
expr_stmt|;
name|txtUsername
operator|.
name|setText
argument_list|(
name|dbStrings
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|pwdPassword
operator|.
name|setText
argument_list|(
name|dbStrings
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
comment|// construct dialog
name|FormBuilder
name|builder
init|=
name|FormBuilder
operator|.
name|create
argument_list|()
operator|.
name|layout
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"right:pref, 4dlu, fill:pref"
argument_list|,
literal|"pref, 4dlu, pref, 4dlu, pref, 4dlu, pref, 4dlu, pref"
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|getPanel
argument_list|()
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
comment|// add labels and input fields
name|builder
operator|.
name|add
argument_list|(
name|lblServerType
argument_list|)
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|cmbServerType
argument_list|)
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|lblServerHostname
argument_list|)
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|txtServerHostname
argument_list|)
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|lblDatabase
argument_list|)
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|txtDatabase
argument_list|)
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|lblUsername
argument_list|)
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|txtUsername
argument_list|)
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|lblPassword
argument_list|)
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|pwdPassword
argument_list|)
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|9
argument_list|)
expr_stmt|;
comment|// add the panel to the CENTER of your dialog:
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|builder
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
comment|// add buttons are added in a similar way:
name|ButtonBarBuilder
name|bb
init|=
operator|new
name|ButtonBarBuilder
argument_list|()
decl_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|btnConnect
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|btnCancel
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
comment|// add the buttons to the SOUTH of your dialog:
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|bb
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
name|ActionListener
name|connectAction
init|=
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|Optional
argument_list|<
name|String
argument_list|>
name|errorMessage
init|=
name|checkInput
argument_list|()
decl_stmt|;
if|if
condition|(
name|errorMessage
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
literal|null
argument_list|,
name|errorMessage
operator|.
name|get
argument_list|()
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Input error"
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|storeSettings
argument_list|()
expr_stmt|;
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setConnectToDB
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
decl_stmt|;
name|btnConnect
operator|.
name|addActionListener
argument_list|(
name|connectAction
argument_list|)
expr_stmt|;
name|txtDatabase
operator|.
name|addActionListener
argument_list|(
name|connectAction
argument_list|)
expr_stmt|;
name|txtServerHostname
operator|.
name|addActionListener
argument_list|(
name|connectAction
argument_list|)
expr_stmt|;
name|txtUsername
operator|.
name|addActionListener
argument_list|(
name|connectAction
argument_list|)
expr_stmt|;
name|pwdPassword
operator|.
name|addActionListener
argument_list|(
name|connectAction
argument_list|)
expr_stmt|;
name|AbstractAction
name|cancelAction
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|setVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
name|setConnectToDB
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|btnCancel
operator|.
name|addActionListener
argument_list|(
name|cancelAction
argument_list|)
expr_stmt|;
comment|// Key bindings:
name|ActionMap
name|am
init|=
name|builder
operator|.
name|getPanel
argument_list|()
operator|.
name|getActionMap
argument_list|()
decl_stmt|;
name|InputMap
name|im
init|=
name|builder
operator|.
name|getPanel
argument_list|()
operator|.
name|getInputMap
argument_list|(
name|JComponent
operator|.
name|WHEN_IN_FOCUSED_WINDOW
argument_list|)
decl_stmt|;
name|im
operator|.
name|put
argument_list|(
name|Globals
operator|.
name|getKeyPrefs
argument_list|()
operator|.
name|getKey
argument_list|(
name|KeyBinding
operator|.
name|CLOSE_DIALOG
argument_list|)
argument_list|,
literal|"close"
argument_list|)
expr_stmt|;
name|am
operator|.
name|put
argument_list|(
literal|"close"
argument_list|,
name|cancelAction
argument_list|)
expr_stmt|;
block|}
comment|/**      * Checks the user input, and ensures that required fields have entries      *      * @return      *      Appropriate error message to be displayed to user      */
DECL|method|checkInput ()
specifier|private
name|Optional
argument_list|<
name|String
argument_list|>
name|checkInput
parameter_list|()
block|{
name|String
index|[]
name|fields
init|=
block|{
name|Localization
operator|.
name|lang
argument_list|(
literal|"Server hostname"
argument_list|)
block|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Database"
argument_list|)
block|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Username"
argument_list|)
block|}
decl_stmt|;
name|String
index|[]
name|errors
init|=
operator|new
name|String
index|[
name|fields
operator|.
name|length
index|]
decl_stmt|;
name|int
name|cnt
init|=
literal|0
decl_stmt|;
if|if
condition|(
name|txtServerHostname
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|errors
index|[
name|cnt
index|]
operator|=
name|fields
index|[
literal|0
index|]
expr_stmt|;
name|cnt
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|txtDatabase
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|errors
index|[
name|cnt
index|]
operator|=
name|fields
index|[
literal|1
index|]
expr_stmt|;
name|cnt
operator|++
expr_stmt|;
block|}
if|if
condition|(
name|txtUsername
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|errors
index|[
name|cnt
index|]
operator|=
name|fields
index|[
literal|2
index|]
expr_stmt|;
name|cnt
operator|++
expr_stmt|;
block|}
name|StringBuilder
name|errMsg
init|=
operator|new
name|StringBuilder
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify the"
argument_list|)
argument_list|)
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
decl_stmt|;
switch|switch
condition|(
name|cnt
condition|)
block|{
case|case
literal|0
case|:
name|errMsg
operator|=
operator|new
name|StringBuilder
argument_list|()
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|errMsg
operator|.
name|append
argument_list|(
name|errors
index|[
literal|0
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|'.'
argument_list|)
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|errMsg
operator|.
name|append
argument_list|(
name|errors
index|[
literal|0
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|" and "
argument_list|)
operator|.
name|append
argument_list|(
name|errors
index|[
literal|1
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|'.'
argument_list|)
expr_stmt|;
break|break;
default|default:
comment|// Will be 3 at most
name|errMsg
operator|.
name|append
argument_list|(
name|errors
index|[
literal|0
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|", "
argument_list|)
operator|.
name|append
argument_list|(
name|errors
index|[
literal|1
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|", and "
argument_list|)
operator|.
name|append
argument_list|(
name|errors
index|[
literal|2
index|]
argument_list|)
operator|.
name|append
argument_list|(
literal|'.'
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|errMsg
operator|.
name|toString
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
else|else
block|{
return|return
name|Optional
operator|.
name|of
argument_list|(
name|errMsg
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
block|}
comment|/**      * Save user input.      */
DECL|method|storeSettings ()
specifier|private
name|void
name|storeSettings
parameter_list|()
block|{
name|dbStrings
operator|.
name|setServerType
argument_list|(
name|cmbServerType
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|dbStrings
operator|.
name|setServerHostname
argument_list|(
name|txtServerHostname
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|dbStrings
operator|.
name|setDatabase
argument_list|(
name|txtDatabase
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
name|dbStrings
operator|.
name|setUsername
argument_list|(
name|txtUsername
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
comment|// Store these settings so they appear as default next time:
name|dbStrings
operator|.
name|storeToPreferences
argument_list|()
expr_stmt|;
name|char
index|[]
name|pwd
init|=
name|pwdPassword
operator|.
name|getPassword
argument_list|()
decl_stmt|;
name|String
name|tmp
init|=
operator|new
name|String
argument_list|(
name|pwd
argument_list|)
decl_stmt|;
name|dbStrings
operator|.
name|setPassword
argument_list|(
name|tmp
argument_list|)
expr_stmt|;
name|Arrays
operator|.
name|fill
argument_list|(
name|pwd
argument_list|,
literal|'0'
argument_list|)
expr_stmt|;
block|}
DECL|method|getDBStrings ()
specifier|public
name|DBStrings
name|getDBStrings
parameter_list|()
block|{
return|return
name|dbStrings
return|;
block|}
DECL|method|setDBStrings (DBStrings dbStrings)
specifier|public
name|void
name|setDBStrings
parameter_list|(
name|DBStrings
name|dbStrings
parameter_list|)
block|{
name|this
operator|.
name|dbStrings
operator|=
name|dbStrings
expr_stmt|;
block|}
DECL|method|isConnectedToDB ()
specifier|public
name|boolean
name|isConnectedToDB
parameter_list|()
block|{
return|return
name|connectedToDB
return|;
block|}
DECL|method|setConnectToDB (boolean connectToDB)
specifier|private
name|void
name|setConnectToDB
parameter_list|(
name|boolean
name|connectToDB
parameter_list|)
block|{
name|this
operator|.
name|connectedToDB
operator|=
name|connectToDB
expr_stmt|;
block|}
block|}
end_class

end_unit

