begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|spl
package|package
name|spl
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|zip
operator|.
name|GZIPOutputStream
import|;
end_import

begin_comment
comment|/**  * Created by IntelliJ IDEA.  * User: Christoph Arbeit  * Date: 09.09.2010  * Time: 10:43:01  * To change this template use File | Settings | File Templates.  */
end_comment

begin_class
DECL|class|Tools
class|class
name|Tools
block|{
DECL|field|WEBSERVICE_APP_ID
specifier|public
specifier|static
specifier|final
name|int
name|WEBSERVICE_APP_ID
init|=
literal|9
decl_stmt|;
DECL|field|WEBSERVICE_VERSION_SHORT
specifier|public
specifier|static
name|String
name|WEBSERVICE_VERSION_SHORT
init|=
literal|"0.1"
decl_stmt|;
DECL|method|zip (File file)
specifier|public
specifier|static
name|byte
index|[]
name|zip
parameter_list|(
name|File
name|file
parameter_list|)
block|{
try|try
block|{
name|FileInputStream
name|fileInputStream
init|=
operator|new
name|FileInputStream
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|ByteArrayOutputStream
name|bos
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|GZIPOutputStream
name|out
init|=
operator|new
name|GZIPOutputStream
argument_list|(
name|bos
argument_list|)
decl_stmt|;
name|byte
index|[]
name|buf
init|=
operator|new
name|byte
index|[
literal|1024
index|]
decl_stmt|;
name|int
name|len
decl_stmt|;
while|while
condition|(
operator|(
name|len
operator|=
name|fileInputStream
operator|.
name|read
argument_list|(
name|buf
argument_list|)
operator|)
operator|>
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
name|buf
argument_list|,
literal|0
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
name|fileInputStream
operator|.
name|close
argument_list|()
expr_stmt|;
name|out
operator|.
name|finish
argument_list|()
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|bos
operator|.
name|close
argument_list|()
expr_stmt|;
return|return
name|bos
operator|.
name|toByteArray
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
comment|//Todo logging
return|return
literal|null
return|;
block|}
block|}
DECL|method|getStackTraceAsString (Exception exception)
specifier|public
specifier|static
name|String
name|getStackTraceAsString
parameter_list|(
name|Exception
name|exception
parameter_list|)
block|{
name|StringWriter
name|sw
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|pw
init|=
operator|new
name|PrintWriter
argument_list|(
name|sw
argument_list|)
decl_stmt|;
name|pw
operator|.
name|print
argument_list|(
literal|" [ "
argument_list|)
expr_stmt|;
name|pw
operator|.
name|print
argument_list|(
name|exception
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|pw
operator|.
name|print
argument_list|(
literal|" ] "
argument_list|)
expr_stmt|;
name|pw
operator|.
name|print
argument_list|(
name|exception
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
name|exception
operator|.
name|printStackTrace
argument_list|(
name|pw
argument_list|)
expr_stmt|;
return|return
name|sw
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|centerRelativeToWindow (java.awt.Dialog diag, java.awt.Container win)
specifier|public
specifier|static
name|void
name|centerRelativeToWindow
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|Dialog
name|diag
parameter_list|,
name|java
operator|.
name|awt
operator|.
name|Container
name|win
parameter_list|)
block|{
name|int
name|x
decl_stmt|;
name|int
name|y
decl_stmt|;
name|Point
name|topLeft
init|=
name|win
operator|.
name|getLocationOnScreen
argument_list|()
decl_stmt|;
name|Dimension
name|parentSize
init|=
name|win
operator|.
name|getSize
argument_list|()
decl_stmt|;
name|Dimension
name|mySize
init|=
name|diag
operator|.
name|getSize
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentSize
operator|.
name|width
operator|>
name|mySize
operator|.
name|width
condition|)
block|{
name|x
operator|=
operator|(
name|parentSize
operator|.
name|width
operator|-
name|mySize
operator|.
name|width
operator|)
operator|/
literal|2
operator|+
name|topLeft
operator|.
name|x
expr_stmt|;
block|}
else|else
block|{
name|x
operator|=
name|topLeft
operator|.
name|x
expr_stmt|;
block|}
if|if
condition|(
name|parentSize
operator|.
name|height
operator|>
name|mySize
operator|.
name|height
condition|)
block|{
name|y
operator|=
operator|(
name|parentSize
operator|.
name|height
operator|-
name|mySize
operator|.
name|height
operator|)
operator|/
literal|2
operator|+
name|topLeft
operator|.
name|y
expr_stmt|;
block|}
else|else
block|{
name|y
operator|=
name|topLeft
operator|.
name|y
expr_stmt|;
block|}
name|diag
operator|.
name|setLocation
argument_list|(
name|x
argument_list|,
name|y
argument_list|)
expr_stmt|;
block|}
DECL|method|getLink (String link, URL mindmapUrl)
specifier|public
specifier|static
name|String
name|getLink
parameter_list|(
name|String
name|link
parameter_list|,
name|URL
name|mindmapUrl
parameter_list|)
block|{
if|if
condition|(
name|link
operator|==
literal|null
operator|||
name|link
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
if|if
condition|(
operator|!
name|Tools
operator|.
name|isAbsolutePath
argument_list|(
name|link
argument_list|)
condition|)
block|{
try|try
block|{
if|if
condition|(
name|link
operator|.
name|startsWith
argument_list|(
literal|"\\\\"
argument_list|)
condition|)
block|{
name|link
operator|=
name|link
operator|.
name|replace
argument_list|(
literal|"\\\\"
argument_list|,
literal|"file://"
argument_list|)
expr_stmt|;
name|link
operator|=
name|link
operator|.
name|replace
argument_list|(
literal|'\\'
argument_list|,
literal|'/'
argument_list|)
operator|.
name|replaceAll
argument_list|(
literal|" "
argument_list|,
literal|"%20"
argument_list|)
expr_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|link
argument_list|)
decl_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|url
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|file
operator|.
name|getPath
argument_list|()
return|;
block|}
elseif|else
if|if
condition|(
name|mindmapUrl
operator|!=
literal|null
condition|)
block|{
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|mindmapUrl
argument_list|,
name|link
argument_list|)
decl_stmt|;
name|File
name|file
init|=
operator|new
name|File
argument_list|(
name|url
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|file
operator|.
name|getPath
argument_list|()
return|;
block|}
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
return|return
name|link
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
return|return
name|link
return|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
return|return
name|link
return|;
block|}
block|}
else|else
block|{
return|return
name|link
return|;
block|}
return|return
name|link
return|;
block|}
DECL|method|isAbsolutePath (String path)
specifier|private
specifier|static
name|boolean
name|isAbsolutePath
parameter_list|(
name|String
name|path
parameter_list|)
block|{
comment|// On Windows, we cannot just ask if the file name starts with file
comment|// separator.
comment|// If path contains ":" at the second position, then it is not relative,
comment|// I guess.
comment|// However, if it starts with separator, then it is absolute too.
comment|// Possible problems: Not tested on Macintosh, but should work.
comment|// Koh, 1.4.2004: Resolved problem: I tested on Mac OS X 10.3.3 and
comment|// worked.
name|String
name|osNameStart
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|)
decl_stmt|;
name|String
name|fileSeparator
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"file.separator"
argument_list|)
decl_stmt|;
if|if
condition|(
name|osNameStart
operator|.
name|equals
argument_list|(
literal|"Win"
argument_list|)
condition|)
block|{
comment|//Todo SciPlore
return|return
name|path
operator|.
name|length
argument_list|()
operator|>
literal|1
operator|&&
name|path
operator|.
name|substring
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
operator|.
name|equals
argument_list|(
literal|":"
argument_list|)
operator|||
name|path
operator|.
name|startsWith
argument_list|(
name|fileSeparator
argument_list|)
operator|&&
operator|!
name|path
operator|.
name|startsWith
argument_list|(
literal|"\\\\"
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|osNameStart
operator|.
name|equals
argument_list|(
literal|"Mac"
argument_list|)
condition|)
block|{
comment|//Koh:Panther (or Java 1.4.2) may change file path rule
return|return
name|path
operator|.
name|startsWith
argument_list|(
name|fileSeparator
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|path
operator|.
name|startsWith
argument_list|(
name|fileSeparator
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

