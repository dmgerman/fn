begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.preftabs
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preftabs
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|event
operator|.
name|EventHandler
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|RadioButton
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TextField
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|GridPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Pane
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|groups
operator|.
name|GroupViewMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|GroupsPrefsTab
class|class
name|GroupsPrefsTab
extends|extends
name|Pane
implements|implements
name|PrefsTab
block|{
DECL|field|hideNonHits
specifier|private
specifier|final
name|CheckBox
name|hideNonHits
init|=
operator|new
name|CheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Hide non-hits"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|grayOut
specifier|private
specifier|final
name|CheckBox
name|grayOut
init|=
operator|new
name|CheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Gray out non-hits"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|autoAssignGroup
specifier|private
specifier|final
name|CheckBox
name|autoAssignGroup
init|=
operator|new
name|CheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Automatically assign new entry to selected groups"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|multiSelectionModeIntersection
specifier|private
specifier|final
name|RadioButton
name|multiSelectionModeIntersection
init|=
operator|new
name|RadioButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Intersection"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|multiSelectionModeUnion
specifier|private
specifier|final
name|RadioButton
name|multiSelectionModeUnion
init|=
operator|new
name|RadioButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Union"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|groupingField
specifier|private
specifier|final
name|TextField
name|groupingField
init|=
operator|new
name|TextField
argument_list|()
decl_stmt|;
DECL|field|keywordSeparator
specifier|private
specifier|final
name|TextField
name|keywordSeparator
init|=
operator|new
name|TextField
argument_list|()
decl_stmt|;
DECL|field|builder
specifier|private
specifier|final
name|GridPane
name|builder
init|=
operator|new
name|GridPane
argument_list|()
decl_stmt|;
DECL|field|prefs
specifier|private
specifier|final
name|JabRefPreferences
name|prefs
decl_stmt|;
DECL|method|GroupsPrefsTab (JabRefPreferences prefs)
specifier|public
name|GroupsPrefsTab
parameter_list|(
name|JabRefPreferences
name|prefs
parameter_list|)
block|{
name|this
operator|.
name|prefs
operator|=
name|prefs
expr_stmt|;
name|keywordSeparator
operator|.
name|setOnAction
argument_list|(
operator|new
name|EventHandler
argument_list|<
name|ActionEvent
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|handle
parameter_list|(
name|ActionEvent
name|event
parameter_list|)
block|{
name|keywordSeparator
operator|.
name|selectAll
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|multiSelectionModeIntersection
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Display only entries belonging to all selected groups."
argument_list|)
argument_list|)
expr_stmt|;
name|multiSelectionModeIntersection
operator|.
name|setFont
argument_list|(
name|FontSize
operator|.
name|smallFont
argument_list|)
expr_stmt|;
name|multiSelectionModeUnion
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Display all entries belonging to one or more of the selected groups."
argument_list|)
argument_list|)
expr_stmt|;
name|multiSelectionModeUnion
operator|.
name|setFont
argument_list|(
name|FontSize
operator|.
name|smallFont
argument_list|)
expr_stmt|;
name|Label
name|view
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"View"
argument_list|)
operator|+
literal|"  ---------------------------------------"
argument_list|)
decl_stmt|;
name|view
operator|.
name|setFont
argument_list|(
name|FontSize
operator|.
name|bigFont
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|view
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|hideNonHits
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|grayOut
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|multiSelectionModeIntersection
argument_list|,
literal|2
argument_list|,
literal|4
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|multiSelectionModeUnion
argument_list|,
literal|2
argument_list|,
literal|5
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoAssignGroup
argument_list|,
literal|2
argument_list|,
literal|6
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
literal|""
argument_list|)
argument_list|,
literal|1
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|Label
name|dynamicGroups
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Dynamic groups"
argument_list|)
operator|+
literal|"  --------------------------"
argument_list|)
decl_stmt|;
name|dynamicGroups
operator|.
name|setFont
argument_list|(
name|FontSize
operator|.
name|bigFont
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|dynamicGroups
argument_list|,
literal|1
argument_list|,
literal|8
argument_list|)
expr_stmt|;
name|Label
name|defaultGrouping
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Default grouping field"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
name|defaultGrouping
operator|.
name|setFont
argument_list|(
name|FontSize
operator|.
name|smallFont
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|defaultGrouping
argument_list|,
literal|1
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|groupingField
argument_list|,
literal|2
argument_list|,
literal|9
argument_list|)
expr_stmt|;
name|Label
name|label
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"When adding/removing keywords, separate them by"
argument_list|)
operator|+
literal|":"
argument_list|)
decl_stmt|;
name|label
operator|.
name|setFont
argument_list|(
name|FontSize
operator|.
name|smallFont
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|label
argument_list|,
literal|1
argument_list|,
literal|10
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|keywordSeparator
argument_list|,
literal|2
argument_list|,
literal|10
argument_list|)
expr_stmt|;
block|}
DECL|method|getBuilder ()
specifier|public
name|Node
name|getBuilder
parameter_list|()
block|{
return|return
name|builder
return|;
block|}
annotation|@
name|Override
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|grayOut
operator|.
name|setSelected
argument_list|(
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|GRAY_OUT_NON_HITS
argument_list|)
argument_list|)
expr_stmt|;
name|groupingField
operator|.
name|setText
argument_list|(
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|GROUPS_DEFAULT_FIELD
argument_list|)
argument_list|)
expr_stmt|;
name|keywordSeparator
operator|.
name|setText
argument_list|(
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|KEYWORD_SEPARATOR
argument_list|)
argument_list|)
expr_stmt|;
name|autoAssignGroup
operator|.
name|setSelected
argument_list|(
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|AUTO_ASSIGN_GROUP
argument_list|)
argument_list|)
expr_stmt|;
name|GroupViewMode
name|mode
init|=
name|prefs
operator|.
name|getGroupViewMode
argument_list|()
decl_stmt|;
if|if
condition|(
name|mode
operator|==
name|GroupViewMode
operator|.
name|INTERSECTION
condition|)
block|{
name|multiSelectionModeIntersection
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|mode
operator|==
name|GroupViewMode
operator|.
name|UNION
condition|)
block|{
name|multiSelectionModeUnion
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|prefs
operator|.
name|putBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|GRAY_OUT_NON_HITS
argument_list|,
name|grayOut
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|GROUPS_DEFAULT_FIELD
argument_list|,
name|groupingField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|putBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|AUTO_ASSIGN_GROUP
argument_list|,
name|autoAssignGroup
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|put
argument_list|(
name|JabRefPreferences
operator|.
name|KEYWORD_SEPARATOR
argument_list|,
name|keywordSeparator
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|multiSelectionModeIntersection
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|prefs
operator|.
name|setGroupViewMode
argument_list|(
name|GroupViewMode
operator|.
name|INTERSECTION
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|multiSelectionModeUnion
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|prefs
operator|.
name|setGroupViewMode
argument_list|(
name|GroupViewMode
operator|.
name|UNION
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|validateSettings ()
specifier|public
name|boolean
name|validateSettings
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Groups"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

