begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.autocompleter
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|autocompleter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringTokenizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|Field
import|;
end_import

begin_comment
comment|/**  * Stores all words in the given field which are separated by SEPARATING_CHARS.  */
end_comment

begin_class
DECL|class|WordSuggestionProvider
specifier|public
class|class
name|WordSuggestionProvider
extends|extends
name|StringSuggestionProvider
implements|implements
name|AutoCompleteSuggestionProvider
argument_list|<
name|String
argument_list|>
block|{
DECL|field|SEPARATING_CHARS
specifier|private
specifier|static
specifier|final
name|String
name|SEPARATING_CHARS
init|=
literal|";,\n "
decl_stmt|;
DECL|field|field
specifier|private
specifier|final
name|Field
name|field
decl_stmt|;
DECL|method|WordSuggestionProvider (Field field)
specifier|public
name|WordSuggestionProvider
parameter_list|(
name|Field
name|field
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|indexEntry (BibEntry entry)
specifier|public
name|void
name|indexEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
if|if
condition|(
name|entry
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|entry
operator|.
name|getField
argument_list|(
name|field
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|fieldValue
lambda|->
block|{
name|StringTokenizer
name|tok
init|=
operator|new
name|StringTokenizer
argument_list|(
name|fieldValue
argument_list|,
name|SEPARATING_CHARS
argument_list|)
decl_stmt|;
while|while
condition|(
name|tok
operator|.
name|hasMoreTokens
argument_list|()
condition|)
block|{
name|addPossibleSuggestions
argument_list|(
name|tok
operator|.
name|nextToken
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

