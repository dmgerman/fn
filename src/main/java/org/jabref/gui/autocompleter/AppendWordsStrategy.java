begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.autocompleter
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|autocompleter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_class
DECL|class|AppendWordsStrategy
specifier|public
class|class
name|AppendWordsStrategy
implements|implements
name|AutoCompletionStrategy
block|{
DECL|method|getDelimiter ()
specifier|protected
name|String
name|getDelimiter
parameter_list|()
block|{
return|return
literal|" "
return|;
block|}
annotation|@
name|Override
DECL|method|analyze (String input)
specifier|public
name|AutoCompletionInput
name|analyze
parameter_list|(
name|String
name|input
parameter_list|)
block|{
return|return
name|determinePrefixAndReturnRemainder
argument_list|(
name|input
argument_list|,
name|getDelimiter
argument_list|()
argument_list|)
return|;
block|}
DECL|method|determinePrefixAndReturnRemainder (String input, String delimiter)
specifier|private
name|AutoCompletionInput
name|determinePrefixAndReturnRemainder
parameter_list|(
name|String
name|input
parameter_list|,
name|String
name|delimiter
parameter_list|)
block|{
name|int
name|index
init|=
name|input
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
operator|.
name|lastIndexOf
argument_list|(
name|delimiter
argument_list|)
decl_stmt|;
if|if
condition|(
name|index
operator|>=
literal|0
condition|)
block|{
name|String
name|prefix
init|=
name|input
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|index
operator|+
name|delimiter
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
name|String
name|rest
init|=
name|input
operator|.
name|substring
argument_list|(
name|index
operator|+
name|delimiter
operator|.
name|length
argument_list|()
argument_list|)
decl_stmt|;
return|return
operator|new
name|AutoCompletionInput
argument_list|(
name|prefix
argument_list|,
name|rest
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|AutoCompletionInput
argument_list|(
literal|""
argument_list|,
name|input
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

