begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.autocompleter
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|autocompleter
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|util
operator|.
name|StringConverter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|Author
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|AuthorList
import|;
end_import

begin_class
DECL|class|PersonNameStringConverter
specifier|public
class|class
name|PersonNameStringConverter
extends|extends
name|StringConverter
argument_list|<
name|Author
argument_list|>
block|{
DECL|field|autoCompFF
specifier|private
specifier|final
name|boolean
name|autoCompFF
decl_stmt|;
DECL|field|autoCompLF
specifier|private
specifier|final
name|boolean
name|autoCompLF
decl_stmt|;
DECL|field|autoCompleteFirstNameMode
specifier|private
specifier|final
name|AutoCompleteFirstNameMode
name|autoCompleteFirstNameMode
decl_stmt|;
DECL|method|PersonNameStringConverter (boolean autoCompFF, boolean autoCompLF, AutoCompleteFirstNameMode autoCompleteFirstNameMode)
specifier|public
name|PersonNameStringConverter
parameter_list|(
name|boolean
name|autoCompFF
parameter_list|,
name|boolean
name|autoCompLF
parameter_list|,
name|AutoCompleteFirstNameMode
name|autoCompleteFirstNameMode
parameter_list|)
block|{
name|this
operator|.
name|autoCompFF
operator|=
name|autoCompFF
expr_stmt|;
name|this
operator|.
name|autoCompLF
operator|=
name|autoCompLF
expr_stmt|;
name|this
operator|.
name|autoCompleteFirstNameMode
operator|=
name|autoCompleteFirstNameMode
expr_stmt|;
block|}
DECL|method|PersonNameStringConverter (AutoCompletePreferences preferences)
specifier|public
name|PersonNameStringConverter
parameter_list|(
name|AutoCompletePreferences
name|preferences
parameter_list|)
block|{
if|if
condition|(
name|preferences
operator|.
name|getOnlyCompleteFirstLast
argument_list|()
condition|)
block|{
name|autoCompFF
operator|=
literal|true
expr_stmt|;
name|autoCompLF
operator|=
literal|false
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|preferences
operator|.
name|getOnlyCompleteLastFirst
argument_list|()
condition|)
block|{
name|autoCompFF
operator|=
literal|false
expr_stmt|;
name|autoCompLF
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|autoCompFF
operator|=
literal|true
expr_stmt|;
name|autoCompLF
operator|=
literal|true
expr_stmt|;
block|}
name|autoCompleteFirstNameMode
operator|=
name|preferences
operator|.
name|getFirstNameMode
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString (Author author)
specifier|public
name|String
name|toString
parameter_list|(
name|Author
name|author
parameter_list|)
block|{
if|if
condition|(
name|autoCompLF
condition|)
block|{
switch|switch
condition|(
name|autoCompleteFirstNameMode
condition|)
block|{
case|case
name|ONLY_ABBREVIATED
case|:
return|return
name|author
operator|.
name|getLastFirst
argument_list|(
literal|true
argument_list|)
return|;
case|case
name|ONLY_FULL
case|:
return|return
name|author
operator|.
name|getLastFirst
argument_list|(
literal|false
argument_list|)
return|;
case|case
name|BOTH
case|:
return|return
name|author
operator|.
name|getLastFirst
argument_list|(
literal|true
argument_list|)
return|;
default|default:
break|break;
block|}
block|}
if|if
condition|(
name|autoCompFF
condition|)
block|{
switch|switch
condition|(
name|autoCompleteFirstNameMode
condition|)
block|{
case|case
name|ONLY_ABBREVIATED
case|:
return|return
name|author
operator|.
name|getFirstLast
argument_list|(
literal|true
argument_list|)
return|;
case|case
name|ONLY_FULL
case|:
return|return
name|author
operator|.
name|getFirstLast
argument_list|(
literal|false
argument_list|)
return|;
case|case
name|BOTH
case|:
return|return
name|author
operator|.
name|getFirstLast
argument_list|(
literal|true
argument_list|)
return|;
default|default:
break|break;
block|}
block|}
return|return
name|author
operator|.
name|getLastFirst
argument_list|(
literal|false
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|fromString (String string)
specifier|public
name|Author
name|fromString
parameter_list|(
name|String
name|string
parameter_list|)
block|{
return|return
name|AuthorList
operator|.
name|parse
argument_list|(
name|string
argument_list|)
operator|.
name|getAuthor
argument_list|(
literal|0
argument_list|)
return|;
block|}
block|}
end_class

end_unit

