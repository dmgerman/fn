begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.actions
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|InvocationTargetException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Method
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonBase
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckMenuItem
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Menu
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|MenuItem
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Tooltip
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBindingRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ContextMenuContent
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|commands
operator|.
name|Command
import|;
end_import

begin_import
import|import
name|org
operator|.
name|controlsfx
operator|.
name|control
operator|.
name|action
operator|.
name|ActionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fxmisc
operator|.
name|easybind
operator|.
name|EasyBind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Helper class to create and style controls according to an {@link Action}.  */
end_comment

begin_class
DECL|class|ActionFactory
specifier|public
class|class
name|ActionFactory
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ActionFactory
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|keyBindingRepository
specifier|private
specifier|final
name|KeyBindingRepository
name|keyBindingRepository
decl_stmt|;
DECL|method|ActionFactory (KeyBindingRepository keyBindingRepository)
specifier|public
name|ActionFactory
parameter_list|(
name|KeyBindingRepository
name|keyBindingRepository
parameter_list|)
block|{
name|this
operator|.
name|keyBindingRepository
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|keyBindingRepository
argument_list|)
expr_stmt|;
block|}
comment|/**      * For some reason the graphic is not set correctly by the {@link ActionUtils} class, so we have to fix this by hand      */
DECL|method|setGraphic (MenuItem node, Action action)
specifier|private
specifier|static
name|void
name|setGraphic
parameter_list|(
name|MenuItem
name|node
parameter_list|,
name|Action
name|action
parameter_list|)
block|{
name|node
operator|.
name|graphicProperty
argument_list|()
operator|.
name|unbind
argument_list|()
expr_stmt|;
name|action
operator|.
name|getIcon
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|icon
lambda|->
name|node
operator|.
name|setGraphic
argument_list|(
name|icon
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/*      * Returns MenuItemContainer node associated with this menu item      * which can contain:      *   1. label node of type Label for displaying menu item text,      *   2. right node of type Label for displaying accelerator text,      *      or an arrow if it's a Menu,      *   3. graphic node for displaying menu item icon, and      *   4. left node for displaying either radio button or check box.      *      * This is basically rewritten impl_styleableGetNode() which      * should not be used since it's marked as deprecated.      */
DECL|method|getAssociatedNode (MenuItem menuItem)
specifier|private
specifier|static
name|Label
name|getAssociatedNode
parameter_list|(
name|MenuItem
name|menuItem
parameter_list|)
block|{
name|ContextMenuContent
operator|.
name|MenuItemContainer
name|container
init|=
operator|(
name|ContextMenuContent
operator|.
name|MenuItemContainer
operator|)
name|menuItem
operator|.
name|getStyleableNode
argument_list|()
decl_stmt|;
if|if
condition|(
name|container
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
comment|// We have to use reflection to get the associated label
try|try
block|{
name|Method
name|getLabel
init|=
name|ContextMenuContent
operator|.
name|MenuItemContainer
operator|.
name|class
operator|.
name|getDeclaredMethod
argument_list|(
literal|"getLabel"
argument_list|)
decl_stmt|;
name|getLabel
operator|.
name|setAccessible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
operator|(
name|Label
operator|)
name|getLabel
operator|.
name|invoke
argument_list|(
name|container
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IllegalAccessException
decl||
name|InvocationTargetException
decl||
name|NoSuchMethodException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Could not get label of menu item"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
return|return
literal|null
return|;
block|}
DECL|method|configureMenuItem (Action action, Command command, MenuItem menuItem)
specifier|public
name|MenuItem
name|configureMenuItem
parameter_list|(
name|Action
name|action
parameter_list|,
name|Command
name|command
parameter_list|,
name|MenuItem
name|menuItem
parameter_list|)
block|{
name|ActionUtils
operator|.
name|configureMenuItem
argument_list|(
operator|new
name|JabRefAction
argument_list|(
name|action
argument_list|,
name|command
argument_list|,
name|keyBindingRepository
argument_list|,
name|Sources
operator|.
name|FromMenu
argument_list|)
argument_list|,
name|menuItem
argument_list|)
expr_stmt|;
name|setGraphic
argument_list|(
name|menuItem
argument_list|,
name|action
argument_list|)
expr_stmt|;
comment|// Show tooltips
if|if
condition|(
name|command
operator|instanceof
name|SimpleCommand
condition|)
block|{
name|EasyBind
operator|.
name|subscribe
argument_list|(
operator|(
operator|(
name|SimpleCommand
operator|)
name|command
operator|)
operator|.
name|statusMessageProperty
argument_list|()
argument_list|,
name|message
lambda|->
block|{
name|Label
name|label
init|=
name|getAssociatedNode
argument_list|(
name|menuItem
argument_list|)
decl_stmt|;
if|if
condition|(
name|label
operator|!=
literal|null
condition|)
block|{
name|label
operator|.
name|setMouseTransparent
argument_list|(
literal|false
argument_list|)
expr_stmt|;
if|if
condition|(
name|StringUtil
operator|.
name|isBlank
argument_list|(
name|message
argument_list|)
condition|)
block|{
name|label
operator|.
name|setTooltip
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|label
operator|.
name|setTooltip
argument_list|(
operator|new
name|Tooltip
argument_list|(
name|message
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
return|return
name|menuItem
return|;
block|}
DECL|method|createMenuItem (Action action, Command command)
specifier|public
name|MenuItem
name|createMenuItem
parameter_list|(
name|Action
name|action
parameter_list|,
name|Command
name|command
parameter_list|)
block|{
name|MenuItem
name|menuItem
init|=
operator|new
name|MenuItem
argument_list|()
decl_stmt|;
name|configureMenuItem
argument_list|(
name|action
argument_list|,
name|command
argument_list|,
name|menuItem
argument_list|)
expr_stmt|;
return|return
name|menuItem
return|;
block|}
DECL|method|createCheckMenuItem (Action action, Command command, boolean selected)
specifier|public
name|CheckMenuItem
name|createCheckMenuItem
parameter_list|(
name|Action
name|action
parameter_list|,
name|Command
name|command
parameter_list|,
name|boolean
name|selected
parameter_list|)
block|{
name|CheckMenuItem
name|checkMenuItem
init|=
name|ActionUtils
operator|.
name|createCheckMenuItem
argument_list|(
operator|new
name|JabRefAction
argument_list|(
name|action
argument_list|,
name|command
argument_list|,
name|keyBindingRepository
argument_list|,
name|Sources
operator|.
name|FromMenu
argument_list|)
argument_list|)
decl_stmt|;
name|checkMenuItem
operator|.
name|setSelected
argument_list|(
name|selected
argument_list|)
expr_stmt|;
name|setGraphic
argument_list|(
name|checkMenuItem
argument_list|,
name|action
argument_list|)
expr_stmt|;
return|return
name|checkMenuItem
return|;
block|}
DECL|method|createMenu (Action action)
specifier|public
name|Menu
name|createMenu
parameter_list|(
name|Action
name|action
parameter_list|)
block|{
name|Menu
name|menu
init|=
name|ActionUtils
operator|.
name|createMenu
argument_list|(
operator|new
name|JabRefAction
argument_list|(
name|action
argument_list|,
name|keyBindingRepository
argument_list|)
argument_list|)
decl_stmt|;
comment|// For some reason the graphic is not set correctly, so let's fix this
name|setGraphic
argument_list|(
name|menu
argument_list|,
name|action
argument_list|)
expr_stmt|;
return|return
name|menu
return|;
block|}
DECL|method|createSubMenu (Action action, MenuItem... children)
specifier|public
name|Menu
name|createSubMenu
parameter_list|(
name|Action
name|action
parameter_list|,
name|MenuItem
modifier|...
name|children
parameter_list|)
block|{
name|Menu
name|menu
init|=
name|createMenu
argument_list|(
name|action
argument_list|)
decl_stmt|;
name|menu
operator|.
name|getItems
argument_list|()
operator|.
name|addAll
argument_list|(
name|children
argument_list|)
expr_stmt|;
return|return
name|menu
return|;
block|}
DECL|method|createIconButton (Action action, Command command)
specifier|public
name|Button
name|createIconButton
parameter_list|(
name|Action
name|action
parameter_list|,
name|Command
name|command
parameter_list|)
block|{
name|Button
name|button
init|=
name|ActionUtils
operator|.
name|createButton
argument_list|(
operator|new
name|JabRefAction
argument_list|(
name|action
argument_list|,
name|command
argument_list|,
name|keyBindingRepository
argument_list|,
name|Sources
operator|.
name|FromButton
argument_list|)
argument_list|,
name|ActionUtils
operator|.
name|ActionTextBehavior
operator|.
name|HIDE
argument_list|)
decl_stmt|;
name|button
operator|.
name|getStyleClass
argument_list|()
operator|.
name|setAll
argument_list|(
literal|"icon-button"
argument_list|)
expr_stmt|;
comment|// For some reason the graphic is not set correctly, so let's fix this
name|button
operator|.
name|graphicProperty
argument_list|()
operator|.
name|unbind
argument_list|()
expr_stmt|;
name|action
operator|.
name|getIcon
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|icon
lambda|->
name|button
operator|.
name|setGraphic
argument_list|(
name|icon
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|button
return|;
block|}
DECL|method|configureIconButton (Action action, Command command, ButtonBase button)
specifier|public
name|ButtonBase
name|configureIconButton
parameter_list|(
name|Action
name|action
parameter_list|,
name|Command
name|command
parameter_list|,
name|ButtonBase
name|button
parameter_list|)
block|{
name|ActionUtils
operator|.
name|configureButton
argument_list|(
operator|new
name|JabRefAction
argument_list|(
name|action
argument_list|,
name|command
argument_list|,
name|keyBindingRepository
argument_list|,
name|Sources
operator|.
name|FromButton
argument_list|)
argument_list|,
name|button
argument_list|,
name|ActionUtils
operator|.
name|ActionTextBehavior
operator|.
name|HIDE
argument_list|)
expr_stmt|;
name|button
operator|.
name|getStyleClass
argument_list|()
operator|.
name|add
argument_list|(
literal|"icon-button"
argument_list|)
expr_stmt|;
comment|// For some reason the graphic is not set correctly, so let's fix this
comment|// ToDO: Find a way to reuse JabRefIconView
name|button
operator|.
name|graphicProperty
argument_list|()
operator|.
name|unbind
argument_list|()
expr_stmt|;
name|action
operator|.
name|getIcon
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|icon
lambda|->
name|button
operator|.
name|setGraphic
argument_list|(
name|icon
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|button
return|;
block|}
block|}
end_class

end_unit

