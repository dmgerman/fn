begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.actions
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ActionMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|InputMap
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextArea
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ScrollPaneConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BackgroundTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|xmp
operator|.
name|XmpUtilWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|ButtonBarBuilder
import|;
end_import

begin_class
DECL|class|WriteXMPAction
specifier|public
class|class
name|WriteXMPAction
extends|extends
name|SimpleCommand
block|{
DECL|field|basePanel
specifier|private
specifier|final
name|BasePanel
name|basePanel
decl_stmt|;
DECL|field|optionsDialog
specifier|private
name|OptionsDialog
name|optionsDialog
decl_stmt|;
DECL|field|entries
specifier|private
name|Collection
argument_list|<
name|BibEntry
argument_list|>
name|entries
decl_stmt|;
DECL|field|database
specifier|private
name|BibDatabase
name|database
decl_stmt|;
DECL|field|shouldContinue
specifier|private
name|boolean
name|shouldContinue
init|=
literal|true
decl_stmt|;
DECL|field|skipped
specifier|private
name|int
name|skipped
decl_stmt|;
DECL|field|entriesChanged
specifier|private
name|int
name|entriesChanged
decl_stmt|;
DECL|field|errors
specifier|private
name|int
name|errors
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|method|WriteXMPAction (BasePanel basePanel)
specifier|public
name|WriteXMPAction
parameter_list|(
name|BasePanel
name|basePanel
parameter_list|)
block|{
name|this
operator|.
name|basePanel
operator|=
name|basePanel
expr_stmt|;
name|dialogService
operator|=
name|basePanel
operator|.
name|frame
argument_list|()
operator|.
name|getDialogService
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute ()
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|init
argument_list|()
expr_stmt|;
name|BackgroundTask
operator|.
name|wrap
argument_list|(
name|this
operator|::
name|writeXMP
argument_list|)
operator|.
name|executeWith
argument_list|(
name|Globals
operator|.
name|TASK_EXECUTOR
argument_list|)
expr_stmt|;
block|}
DECL|method|init ()
specifier|public
name|void
name|init
parameter_list|()
block|{
name|database
operator|=
name|basePanel
operator|.
name|getDatabase
argument_list|()
expr_stmt|;
comment|// Get entries and check if it makes sense to perform this operation
name|entries
operator|=
name|basePanel
operator|.
name|getSelectedEntries
argument_list|()
expr_stmt|;
if|if
condition|(
name|entries
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|entries
operator|=
name|database
operator|.
name|getEntries
argument_list|()
expr_stmt|;
if|if
condition|(
name|entries
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Write XMP-metadata"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"This operation requires one or more entries to be selected."
argument_list|)
argument_list|)
expr_stmt|;
name|shouldContinue
operator|=
literal|false
expr_stmt|;
return|return;
block|}
else|else
block|{
name|boolean
name|confirm
init|=
name|dialogService
operator|.
name|showConfirmationDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Write XMP-metadata"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Write XMP-metadata for all PDFs in current library?"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|confirm
condition|)
block|{
name|shouldContinue
operator|=
literal|false
expr_stmt|;
return|return;
block|}
block|}
block|}
name|errors
operator|=
name|entriesChanged
operator|=
name|skipped
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|optionsDialog
operator|==
literal|null
condition|)
block|{
name|optionsDialog
operator|=
operator|new
name|OptionsDialog
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|optionsDialog
operator|.
name|open
argument_list|()
expr_stmt|;
name|basePanel
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Writing XMP-metadata..."
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|writeXMP ()
specifier|private
name|void
name|writeXMP
parameter_list|()
block|{
if|if
condition|(
operator|!
name|shouldContinue
condition|)
block|{
return|return;
block|}
for|for
control|(
name|BibEntry
name|entry
range|:
name|entries
control|)
block|{
comment|// Make a list of all PDFs linked from this entry:
name|List
argument_list|<
name|Path
argument_list|>
name|files
init|=
name|entry
operator|.
name|getFiles
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|file
lambda|->
name|file
operator|.
name|getFileType
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"pdf"
argument_list|)
argument_list|)
operator|.
name|map
argument_list|(
name|file
lambda|->
name|file
operator|.
name|findIn
argument_list|(
name|basePanel
operator|.
name|getBibDatabaseContext
argument_list|()
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getFileDirectoryPreferences
argument_list|()
argument_list|)
argument_list|)
operator|.
name|filter
argument_list|(
name|Optional
operator|::
name|isPresent
argument_list|)
operator|.
name|map
argument_list|(
name|Optional
operator|::
name|get
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
name|entry
operator|.
name|getCiteKeyOptional
argument_list|()
operator|.
name|orElse
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"undefined"
argument_list|)
argument_list|)
operator|+
literal|"\n"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|files
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|skipped
operator|++
expr_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"  "
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"Skipped - No PDF linked"
argument_list|)
operator|+
literal|".\n"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
for|for
control|(
name|Path
name|file
range|:
name|files
control|)
block|{
if|if
condition|(
name|Files
operator|.
name|exists
argument_list|(
name|file
argument_list|)
condition|)
block|{
try|try
block|{
name|XmpUtilWriter
operator|.
name|writeXmp
argument_list|(
name|file
argument_list|,
name|entry
argument_list|,
name|database
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getXMPPreferences
argument_list|()
argument_list|)
expr_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"  "
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"OK"
argument_list|)
operator|+
literal|".\n"
argument_list|)
argument_list|)
expr_stmt|;
name|entriesChanged
operator|++
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
block|{
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"  "
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error while writing"
argument_list|)
operator|+
literal|" '"
operator|+
name|file
operator|.
name|toString
argument_list|()
operator|+
literal|"':\n"
argument_list|)
expr_stmt|;
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"    "
operator|+
name|e
operator|.
name|getLocalizedMessage
argument_list|()
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|errors
operator|++
expr_stmt|;
block|}
block|}
else|else
block|{
name|skipped
operator|++
expr_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
block|{
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"  "
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"Skipped - PDF does not exist"
argument_list|)
operator|+
literal|":\n"
argument_list|)
expr_stmt|;
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"    "
operator|+
name|file
operator|.
name|toString
argument_list|()
operator|+
literal|"\n"
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|optionsDialog
operator|.
name|isCanceled
argument_list|()
condition|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"\n"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"Operation canceled."
argument_list|)
operator|+
literal|"\n"
argument_list|)
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
block|{
name|optionsDialog
operator|.
name|getProgressArea
argument_list|()
operator|.
name|append
argument_list|(
literal|"\n"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"Finished writing XMP for %0 file (%1 skipped, %2 errors)."
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|entriesChanged
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|skipped
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|errors
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|optionsDialog
operator|.
name|done
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|shouldContinue
condition|)
block|{
return|return;
block|}
name|basePanel
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Finished writing XMP for %0 file (%1 skipped, %2 errors)."
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|entriesChanged
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|skipped
argument_list|)
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|errors
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|class|OptionsDialog
class|class
name|OptionsDialog
extends|extends
name|JabRefDialog
block|{
DECL|field|okButton
specifier|private
specifier|final
name|JButton
name|okButton
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"OK"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|cancelButton
specifier|private
specifier|final
name|JButton
name|cancelButton
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
decl_stmt|;
DECL|field|isCancelled
specifier|private
name|boolean
name|isCancelled
decl_stmt|;
DECL|field|progressArea
specifier|private
specifier|final
name|JTextArea
name|progressArea
decl_stmt|;
DECL|method|OptionsDialog (JFrame parent)
specifier|public
name|OptionsDialog
parameter_list|(
name|JFrame
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Writing XMP-metadata for selected entries..."
argument_list|)
argument_list|,
literal|false
argument_list|,
name|WriteXMPAction
operator|.
name|OptionsDialog
operator|.
name|class
argument_list|)
expr_stmt|;
name|okButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|okButton
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|dispose
argument_list|()
argument_list|)
expr_stmt|;
name|AbstractAction
name|cancel
init|=
operator|new
name|AbstractAction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|isCancelled
operator|=
literal|true
expr_stmt|;
block|}
block|}
decl_stmt|;
name|cancelButton
operator|.
name|addActionListener
argument_list|(
name|cancel
argument_list|)
expr_stmt|;
name|InputMap
name|im
init|=
name|cancelButton
operator|.
name|getInputMap
argument_list|(
name|JComponent
operator|.
name|WHEN_IN_FOCUSED_WINDOW
argument_list|)
decl_stmt|;
name|ActionMap
name|am
init|=
name|cancelButton
operator|.
name|getActionMap
argument_list|()
decl_stmt|;
name|im
operator|.
name|put
argument_list|(
name|Globals
operator|.
name|getKeyPrefs
argument_list|()
operator|.
name|getKey
argument_list|(
name|KeyBinding
operator|.
name|CLOSE
argument_list|)
argument_list|,
literal|"close"
argument_list|)
expr_stmt|;
name|am
operator|.
name|put
argument_list|(
literal|"close"
argument_list|,
name|cancel
argument_list|)
expr_stmt|;
name|progressArea
operator|=
operator|new
name|JTextArea
argument_list|(
literal|15
argument_list|,
literal|60
argument_list|)
expr_stmt|;
name|JScrollPane
name|scrollPane
init|=
operator|new
name|JScrollPane
argument_list|(
name|progressArea
argument_list|,
name|ScrollPaneConstants
operator|.
name|VERTICAL_SCROLLBAR_ALWAYS
argument_list|,
name|ScrollPaneConstants
operator|.
name|HORIZONTAL_SCROLLBAR_NEVER
argument_list|)
decl_stmt|;
name|Dimension
name|d
init|=
name|progressArea
operator|.
name|getPreferredSize
argument_list|()
decl_stmt|;
name|d
operator|.
name|height
operator|+=
name|scrollPane
operator|.
name|getHorizontalScrollBar
argument_list|()
operator|.
name|getHeight
argument_list|()
operator|+
literal|15
expr_stmt|;
name|d
operator|.
name|width
operator|+=
name|scrollPane
operator|.
name|getVerticalScrollBar
argument_list|()
operator|.
name|getWidth
argument_list|()
operator|+
literal|15
expr_stmt|;
name|progressArea
operator|.
name|setBackground
argument_list|(
name|Color
operator|.
name|WHITE
argument_list|)
expr_stmt|;
name|progressArea
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|progressArea
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|progressArea
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|JPanel
name|tmpPanel
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|tmpPanel
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|3
argument_list|,
literal|2
argument_list|,
literal|3
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|tmpPanel
operator|.
name|add
argument_list|(
name|scrollPane
argument_list|)
expr_stmt|;
comment|// progressArea.setPreferredSize(new Dimension(300, 300));
name|ButtonBarBuilder
name|bb
init|=
operator|new
name|ButtonBarBuilder
argument_list|()
decl_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|okButton
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addRelatedGap
argument_list|()
expr_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|cancelButton
argument_list|)
expr_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|JPanel
name|bbPanel
init|=
name|bb
operator|.
name|getPanel
argument_list|()
decl_stmt|;
name|bbPanel
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|0
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|tmpPanel
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|bbPanel
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|pack
argument_list|()
expr_stmt|;
name|this
operator|.
name|setResizable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|done ()
specifier|public
name|void
name|done
parameter_list|()
block|{
name|okButton
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|cancelButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|open ()
specifier|public
name|void
name|open
parameter_list|()
block|{
name|progressArea
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|isCancelled
operator|=
literal|false
expr_stmt|;
name|okButton
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cancelButton
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|okButton
operator|.
name|requestFocus
argument_list|()
expr_stmt|;
name|optionsDialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|isCanceled ()
specifier|public
name|boolean
name|isCanceled
parameter_list|()
block|{
return|return
name|isCancelled
return|;
block|}
DECL|method|getProgressArea ()
specifier|public
name|JTextArea
name|getProgressArea
parameter_list|()
block|{
return|return
name|progressArea
return|;
block|}
block|}
block|}
end_class

end_unit

