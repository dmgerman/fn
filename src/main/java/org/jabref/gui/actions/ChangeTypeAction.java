begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.actions
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|undo
operator|.
name|UndoManager
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|MenuItem
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|UndoableChangeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|EntryType
import|;
end_import

begin_class
DECL|class|ChangeTypeAction
specifier|public
class|class
name|ChangeTypeAction
extends|extends
name|AbstractAction
block|{
DECL|field|type
specifier|private
specifier|final
name|String
name|type
decl_stmt|;
DECL|field|panel
specifier|private
specifier|final
name|BasePanel
name|panel
decl_stmt|;
DECL|method|ChangeTypeAction (EntryType type, BasePanel bp)
specifier|public
name|ChangeTypeAction
parameter_list|(
name|EntryType
name|type
parameter_list|,
name|BasePanel
name|bp
parameter_list|)
block|{
name|super
argument_list|(
name|type
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
operator|.
name|getName
argument_list|()
expr_stmt|;
name|panel
operator|=
name|bp
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent evt)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|evt
parameter_list|)
block|{
name|panel
operator|.
name|changeTypeOfSelectedEntries
argument_list|(
name|type
argument_list|)
expr_stmt|;
block|}
DECL|method|as (EntryType type, BibEntry entry, UndoManager undoManager)
specifier|public
specifier|static
name|MenuItem
name|as
parameter_list|(
name|EntryType
name|type
parameter_list|,
name|BibEntry
name|entry
parameter_list|,
name|UndoManager
name|undoManager
parameter_list|)
block|{
return|return
name|as
argument_list|(
name|type
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|entry
argument_list|)
argument_list|,
name|undoManager
argument_list|)
return|;
block|}
DECL|method|as (EntryType type, List<BibEntry> entries, UndoManager undoManager)
specifier|public
specifier|static
name|MenuItem
name|as
parameter_list|(
name|EntryType
name|type
parameter_list|,
name|List
argument_list|<
name|BibEntry
argument_list|>
name|entries
parameter_list|,
name|UndoManager
name|undoManager
parameter_list|)
block|{
name|MenuItem
name|menuItem
init|=
operator|new
name|MenuItem
argument_list|(
name|type
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|menuItem
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
block|{
name|NamedCompound
name|compound
init|=
operator|new
name|NamedCompound
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Change entry type"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|BibEntry
name|entry
range|:
name|entries
control|)
block|{
name|entry
operator|.
name|setType
argument_list|(
name|type
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|change
lambda|->
name|compound
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoableChangeType
argument_list|(
name|change
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|undoManager
operator|.
name|addEdit
argument_list|(
name|compound
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
return|return
name|menuItem
return|;
block|}
block|}
end_class

end_unit

