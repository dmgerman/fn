begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.actions
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|EntryTypeView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|plaintextimport
operator|.
name|TextInputDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|UpdateField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|UpdateFieldPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|EntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|NewEntryFromPlainTextAction
specifier|public
class|class
name|NewEntryFromPlainTextAction
extends|extends
name|SimpleCommand
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|NewEntryFromPlainTextAction
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|prefs
specifier|private
specifier|final
name|UpdateFieldPreferences
name|prefs
decl_stmt|;
DECL|field|jabRefFrame
specifier|private
specifier|final
name|JabRefFrame
name|jabRefFrame
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|JabRefPreferences
name|preferences
decl_stmt|;
DECL|method|NewEntryFromPlainTextAction (JabRefFrame jabRefFrame, UpdateFieldPreferences prefs, DialogService dialogService, JabRefPreferences preferences)
specifier|public
name|NewEntryFromPlainTextAction
parameter_list|(
name|JabRefFrame
name|jabRefFrame
parameter_list|,
name|UpdateFieldPreferences
name|prefs
parameter_list|,
name|DialogService
name|dialogService
parameter_list|,
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
name|this
operator|.
name|jabRefFrame
operator|=
name|jabRefFrame
expr_stmt|;
name|this
operator|.
name|prefs
operator|=
name|prefs
expr_stmt|;
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute ()
specifier|public
name|void
name|execute
parameter_list|()
block|{
if|if
condition|(
name|jabRefFrame
operator|.
name|getBasePanelCount
argument_list|()
operator|<=
literal|0
condition|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Action 'New entry' must be disabled when no database is open."
argument_list|)
expr_stmt|;
return|return;
block|}
name|EntryTypeView
name|typeChoiceDialog
init|=
operator|new
name|EntryTypeView
argument_list|(
name|jabRefFrame
operator|.
name|getCurrentBasePanel
argument_list|()
argument_list|,
name|dialogService
argument_list|,
name|preferences
argument_list|)
decl_stmt|;
name|EntryType
name|selectedType
init|=
name|typeChoiceDialog
operator|.
name|showAndWait
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
decl_stmt|;
if|if
condition|(
name|selectedType
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|BibEntry
name|bibEntry
init|=
operator|new
name|BibEntry
argument_list|(
name|selectedType
argument_list|)
decl_stmt|;
name|TextInputDialog
name|tidialog
init|=
operator|new
name|TextInputDialog
argument_list|(
name|jabRefFrame
argument_list|,
name|bibEntry
argument_list|)
decl_stmt|;
name|tidialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|tidialog
operator|.
name|okPressed
argument_list|()
condition|)
block|{
name|UpdateField
operator|.
name|setAutomaticFields
argument_list|(
name|bibEntry
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|,
name|prefs
argument_list|)
expr_stmt|;
name|jabRefFrame
operator|.
name|getCurrentBasePanel
argument_list|()
operator|.
name|insertEntry
argument_list|(
name|bibEntry
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

