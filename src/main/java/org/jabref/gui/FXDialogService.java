begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|FileSystem
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|FileSystems
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Consumer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|concurrent
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|print
operator|.
name|PrinterJob
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Group
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Alert
operator|.
name|AlertType
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonBar
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonType
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ChoiceDialog
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|DialogPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TextInputDialog
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Pane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Region
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|DirectoryChooser
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|FileChooser
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|Stage
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|util
operator|.
name|Duration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|icon
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|DirectoryDialogConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileDialogConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|ZipFileChooser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jfoenix
operator|.
name|controls
operator|.
name|JFXSnackbar
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jfoenix
operator|.
name|controls
operator|.
name|JFXSnackbar
operator|.
name|SnackbarEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jfoenix
operator|.
name|controls
operator|.
name|JFXSnackbarLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|controlsfx
operator|.
name|dialog
operator|.
name|ExceptionDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|controlsfx
operator|.
name|dialog
operator|.
name|ProgressDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * This class provides methods to create default  * JavaFX dialogs which will also work on top of Swing  * windows. The created dialogs are instances of the  * {@link FXDialog} class. The available dialogs in this class  * are useful for displaying small information graphic dialogs  * rather than complex windows. For more complex dialogs it is  * advised to rather create a new sub class of {@link FXDialog}.  */
end_comment

begin_class
DECL|class|FXDialogService
specifier|public
class|class
name|FXDialogService
implements|implements
name|DialogService
block|{
DECL|field|TOAST_MESSAGE_DISPLAY_TIME
specifier|private
specifier|static
specifier|final
name|Duration
name|TOAST_MESSAGE_DISPLAY_TIME
init|=
name|Duration
operator|.
name|millis
argument_list|(
literal|3000
argument_list|)
decl_stmt|;
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|FXDialogService
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|mainWindow
specifier|private
specifier|final
name|Window
name|mainWindow
decl_stmt|;
DECL|field|statusLine
specifier|private
specifier|final
name|JFXSnackbar
name|statusLine
decl_stmt|;
comment|/**      * @deprecated try not to initialize a new dialog service but reuse the one constructed in {@link org.jabref.gui.JabRefFrame}.      */
annotation|@
name|Deprecated
DECL|method|FXDialogService ()
specifier|public
name|FXDialogService
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|FXDialogService (Window mainWindow)
specifier|public
name|FXDialogService
parameter_list|(
name|Window
name|mainWindow
parameter_list|)
block|{
name|this
operator|.
name|mainWindow
operator|=
name|mainWindow
expr_stmt|;
name|this
operator|.
name|statusLine
operator|=
operator|new
name|JFXSnackbar
argument_list|()
expr_stmt|;
block|}
DECL|method|FXDialogService (Window mainWindow, Pane mainPane)
specifier|public
name|FXDialogService
parameter_list|(
name|Window
name|mainWindow
parameter_list|,
name|Pane
name|mainPane
parameter_list|)
block|{
name|this
operator|.
name|mainWindow
operator|=
name|mainWindow
expr_stmt|;
name|this
operator|.
name|statusLine
operator|=
operator|new
name|JFXSnackbar
argument_list|(
name|mainPane
argument_list|)
expr_stmt|;
block|}
DECL|method|createDialog (AlertType type, String title, String content)
specifier|private
specifier|static
name|FXDialog
name|createDialog
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
operator|new
name|FXDialog
argument_list|(
name|type
argument_list|,
name|title
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|alert
operator|.
name|setHeaderText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|alert
operator|.
name|setContentText
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|setMinHeight
argument_list|(
name|Region
operator|.
name|USE_PREF_SIZE
argument_list|)
expr_stmt|;
return|return
name|alert
return|;
block|}
DECL|method|createDialogWithOptOut (AlertType type, String title, String content, String optOutMessage, Consumer<Boolean> optOutAction)
specifier|private
specifier|static
name|FXDialog
name|createDialogWithOptOut
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|optOutMessage
parameter_list|,
name|Consumer
argument_list|<
name|Boolean
argument_list|>
name|optOutAction
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
operator|new
name|FXDialog
argument_list|(
name|type
argument_list|,
name|title
argument_list|,
literal|true
argument_list|)
decl_stmt|;
comment|// Need to force the alert to layout in order to grab the graphic as we are replacing the dialog pane with a custom pane
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|applyCss
argument_list|()
expr_stmt|;
name|Node
name|graphic
init|=
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|getGraphic
argument_list|()
decl_stmt|;
comment|// Create a new dialog pane that has a checkbox instead of the hide/show details button
comment|// Use the supplied callback for the action of the checkbox
name|alert
operator|.
name|setDialogPane
argument_list|(
operator|new
name|DialogPane
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|Node
name|createDetailsButton
parameter_list|()
block|{
name|CheckBox
name|optOut
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
name|optOut
operator|.
name|setText
argument_list|(
name|optOutMessage
argument_list|)
expr_stmt|;
name|optOut
operator|.
name|setOnAction
argument_list|(
name|e
lambda|->
name|optOutAction
operator|.
name|accept
argument_list|(
name|optOut
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|optOut
return|;
block|}
block|}
argument_list|)
expr_stmt|;
comment|// Fool the dialog into thinking there is some expandable content; a group won't take up any space if it has no children
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|setExpandableContent
argument_list|(
operator|new
name|Group
argument_list|()
argument_list|)
expr_stmt|;
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|setExpanded
argument_list|(
literal|true
argument_list|)
expr_stmt|;
comment|// Reset the dialog graphic using the default style
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|setGraphic
argument_list|(
name|graphic
argument_list|)
expr_stmt|;
name|alert
operator|.
name|setHeaderText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|alert
operator|.
name|setContentText
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|setMinHeight
argument_list|(
name|Region
operator|.
name|USE_PREF_SIZE
argument_list|)
expr_stmt|;
return|return
name|alert
return|;
block|}
annotation|@
name|Override
DECL|method|showChoiceDialogAndWait (String title, String content, String okButtonLabel, T defaultChoice, Collection<T> choices)
specifier|public
parameter_list|<
name|T
parameter_list|>
name|Optional
argument_list|<
name|T
argument_list|>
name|showChoiceDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|okButtonLabel
parameter_list|,
name|T
name|defaultChoice
parameter_list|,
name|Collection
argument_list|<
name|T
argument_list|>
name|choices
parameter_list|)
block|{
name|ChoiceDialog
argument_list|<
name|T
argument_list|>
name|choiceDialog
init|=
operator|new
name|ChoiceDialog
argument_list|<>
argument_list|(
name|defaultChoice
argument_list|,
name|choices
argument_list|)
decl_stmt|;
name|ButtonType
name|okButtonType
init|=
operator|new
name|ButtonType
argument_list|(
name|okButtonLabel
argument_list|,
name|ButtonBar
operator|.
name|ButtonData
operator|.
name|OK_DONE
argument_list|)
decl_stmt|;
name|choiceDialog
operator|.
name|getDialogPane
argument_list|()
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
name|ButtonType
operator|.
name|CANCEL
argument_list|,
name|okButtonType
argument_list|)
expr_stmt|;
name|choiceDialog
operator|.
name|setHeaderText
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|choiceDialog
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|choiceDialog
operator|.
name|setContentText
argument_list|(
name|content
argument_list|)
expr_stmt|;
return|return
name|choiceDialog
operator|.
name|showAndWait
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showInputDialogAndWait (String title, String content)
specifier|public
name|Optional
argument_list|<
name|String
argument_list|>
name|showInputDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|TextInputDialog
name|inputDialog
init|=
operator|new
name|TextInputDialog
argument_list|()
decl_stmt|;
name|inputDialog
operator|.
name|setHeaderText
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|inputDialog
operator|.
name|setContentText
argument_list|(
name|content
argument_list|)
expr_stmt|;
return|return
name|inputDialog
operator|.
name|showAndWait
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showInformationDialogAndWait (String title, String content)
specifier|public
name|void
name|showInformationDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|AlertType
operator|.
name|INFORMATION
argument_list|,
name|title
argument_list|,
name|content
argument_list|)
decl_stmt|;
name|alert
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|showWarningDialogAndWait (String title, String content)
specifier|public
name|void
name|showWarningDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|AlertType
operator|.
name|WARNING
argument_list|,
name|title
argument_list|,
name|content
argument_list|)
decl_stmt|;
name|alert
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|showErrorDialogAndWait (String title, String content)
specifier|public
name|void
name|showErrorDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|AlertType
operator|.
name|ERROR
argument_list|,
name|title
argument_list|,
name|content
argument_list|)
decl_stmt|;
name|alert
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|showErrorDialogAndWait (String message, Throwable exception)
specifier|public
name|void
name|showErrorDialogAndWait
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|exception
parameter_list|)
block|{
name|ExceptionDialog
name|exceptionDialog
init|=
operator|new
name|ExceptionDialog
argument_list|(
name|exception
argument_list|)
decl_stmt|;
name|exceptionDialog
operator|.
name|setHeaderText
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|exceptionDialog
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|showErrorDialogAndWait (String title, String content, Throwable exception)
specifier|public
name|void
name|showErrorDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|Throwable
name|exception
parameter_list|)
block|{
name|ExceptionDialog
name|exceptionDialog
init|=
operator|new
name|ExceptionDialog
argument_list|(
name|exception
argument_list|)
decl_stmt|;
name|exceptionDialog
operator|.
name|setHeaderText
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|exceptionDialog
operator|.
name|setContentText
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|exceptionDialog
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|showErrorDialogAndWait (String message)
specifier|public
name|void
name|showErrorDialogAndWait
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|AlertType
operator|.
name|ERROR
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error Occurred"
argument_list|)
argument_list|,
name|message
argument_list|)
decl_stmt|;
name|alert
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|showConfirmationDialogAndWait (String title, String content)
specifier|public
name|boolean
name|showConfirmationDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|AlertType
operator|.
name|CONFIRMATION
argument_list|,
name|title
argument_list|,
name|content
argument_list|)
decl_stmt|;
return|return
name|alert
operator|.
name|showAndWait
argument_list|()
operator|.
name|filter
argument_list|(
name|buttonType
lambda|->
name|buttonType
operator|==
name|ButtonType
operator|.
name|OK
argument_list|)
operator|.
name|isPresent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showConfirmationDialogAndWait (String title, String content, String okButtonLabel)
specifier|public
name|boolean
name|showConfirmationDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|okButtonLabel
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|AlertType
operator|.
name|CONFIRMATION
argument_list|,
name|title
argument_list|,
name|content
argument_list|)
decl_stmt|;
name|ButtonType
name|okButtonType
init|=
operator|new
name|ButtonType
argument_list|(
name|okButtonLabel
argument_list|,
name|ButtonBar
operator|.
name|ButtonData
operator|.
name|OK_DONE
argument_list|)
decl_stmt|;
name|alert
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
name|ButtonType
operator|.
name|CANCEL
argument_list|,
name|okButtonType
argument_list|)
expr_stmt|;
return|return
name|alert
operator|.
name|showAndWait
argument_list|()
operator|.
name|filter
argument_list|(
name|buttonType
lambda|->
name|buttonType
operator|==
name|okButtonType
argument_list|)
operator|.
name|isPresent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showConfirmationDialogAndWait (String title, String content, String okButtonLabel, String cancelButtonLabel)
specifier|public
name|boolean
name|showConfirmationDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|okButtonLabel
parameter_list|,
name|String
name|cancelButtonLabel
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|AlertType
operator|.
name|CONFIRMATION
argument_list|,
name|title
argument_list|,
name|content
argument_list|)
decl_stmt|;
name|ButtonType
name|okButtonType
init|=
operator|new
name|ButtonType
argument_list|(
name|okButtonLabel
argument_list|,
name|ButtonBar
operator|.
name|ButtonData
operator|.
name|OK_DONE
argument_list|)
decl_stmt|;
name|ButtonType
name|cancelButtonType
init|=
operator|new
name|ButtonType
argument_list|(
name|cancelButtonLabel
argument_list|,
name|ButtonBar
operator|.
name|ButtonData
operator|.
name|NO
argument_list|)
decl_stmt|;
name|alert
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
name|okButtonType
argument_list|,
name|cancelButtonType
argument_list|)
expr_stmt|;
return|return
name|alert
operator|.
name|showAndWait
argument_list|()
operator|.
name|filter
argument_list|(
name|buttonType
lambda|->
name|buttonType
operator|==
name|okButtonType
argument_list|)
operator|.
name|isPresent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showConfirmationDialogWithOptOutAndWait (String title, String content, String optOutMessage, Consumer<Boolean> optOutAction)
specifier|public
name|boolean
name|showConfirmationDialogWithOptOutAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|optOutMessage
parameter_list|,
name|Consumer
argument_list|<
name|Boolean
argument_list|>
name|optOutAction
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialogWithOptOut
argument_list|(
name|AlertType
operator|.
name|CONFIRMATION
argument_list|,
name|title
argument_list|,
name|content
argument_list|,
name|optOutMessage
argument_list|,
name|optOutAction
argument_list|)
decl_stmt|;
name|alert
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
name|ButtonType
operator|.
name|YES
argument_list|,
name|ButtonType
operator|.
name|NO
argument_list|)
expr_stmt|;
return|return
name|alert
operator|.
name|showAndWait
argument_list|()
operator|.
name|filter
argument_list|(
name|buttonType
lambda|->
name|buttonType
operator|==
name|ButtonType
operator|.
name|YES
argument_list|)
operator|.
name|isPresent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showConfirmationDialogWithOptOutAndWait (String title, String content, String okButtonLabel, String cancelButtonLabel, String optOutMessage, Consumer<Boolean> optOutAction)
specifier|public
name|boolean
name|showConfirmationDialogWithOptOutAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|String
name|okButtonLabel
parameter_list|,
name|String
name|cancelButtonLabel
parameter_list|,
name|String
name|optOutMessage
parameter_list|,
name|Consumer
argument_list|<
name|Boolean
argument_list|>
name|optOutAction
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialogWithOptOut
argument_list|(
name|AlertType
operator|.
name|CONFIRMATION
argument_list|,
name|title
argument_list|,
name|content
argument_list|,
name|optOutMessage
argument_list|,
name|optOutAction
argument_list|)
decl_stmt|;
name|ButtonType
name|okButtonType
init|=
operator|new
name|ButtonType
argument_list|(
name|okButtonLabel
argument_list|,
name|ButtonBar
operator|.
name|ButtonData
operator|.
name|YES
argument_list|)
decl_stmt|;
name|ButtonType
name|cancelButtonType
init|=
operator|new
name|ButtonType
argument_list|(
name|cancelButtonLabel
argument_list|,
name|ButtonBar
operator|.
name|ButtonData
operator|.
name|NO
argument_list|)
decl_stmt|;
name|alert
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
name|okButtonType
argument_list|,
name|cancelButtonType
argument_list|)
expr_stmt|;
return|return
name|alert
operator|.
name|showAndWait
argument_list|()
operator|.
name|filter
argument_list|(
name|buttonType
lambda|->
name|buttonType
operator|==
name|okButtonType
argument_list|)
operator|.
name|isPresent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showCustomButtonDialogAndWait (AlertType type, String title, String content, ButtonType... buttonTypes)
specifier|public
name|Optional
argument_list|<
name|ButtonType
argument_list|>
name|showCustomButtonDialogAndWait
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|ButtonType
modifier|...
name|buttonTypes
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
name|createDialog
argument_list|(
name|type
argument_list|,
name|title
argument_list|,
name|content
argument_list|)
decl_stmt|;
name|alert
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
name|buttonTypes
argument_list|)
expr_stmt|;
return|return
name|alert
operator|.
name|showAndWait
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showCustomDialogAndWait (String title, DialogPane contentPane, ButtonType... buttonTypes)
specifier|public
name|Optional
argument_list|<
name|ButtonType
argument_list|>
name|showCustomDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|DialogPane
name|contentPane
parameter_list|,
name|ButtonType
modifier|...
name|buttonTypes
parameter_list|)
block|{
name|FXDialog
name|alert
init|=
operator|new
name|FXDialog
argument_list|(
name|AlertType
operator|.
name|NONE
argument_list|,
name|title
argument_list|)
decl_stmt|;
name|alert
operator|.
name|setDialogPane
argument_list|(
name|contentPane
argument_list|)
expr_stmt|;
name|alert
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
name|buttonTypes
argument_list|)
expr_stmt|;
name|alert
operator|.
name|getDialogPane
argument_list|()
operator|.
name|setMinHeight
argument_list|(
name|Region
operator|.
name|USE_PREF_SIZE
argument_list|)
expr_stmt|;
name|alert
operator|.
name|setResizable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|alert
operator|.
name|showAndWait
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showCustomDialogAndWait (Dialog<R> dialog)
specifier|public
parameter_list|<
name|R
parameter_list|>
name|Optional
argument_list|<
name|R
argument_list|>
name|showCustomDialogAndWait
parameter_list|(
name|Dialog
argument_list|<
name|R
argument_list|>
name|dialog
parameter_list|)
block|{
return|return
name|dialog
operator|.
name|showAndWait
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|showProgressDialogAndWait (String title, String content, Task<V> task)
specifier|public
parameter_list|<
name|V
parameter_list|>
name|void
name|showProgressDialogAndWait
parameter_list|(
name|String
name|title
parameter_list|,
name|String
name|content
parameter_list|,
name|Task
argument_list|<
name|V
argument_list|>
name|task
parameter_list|)
block|{
name|ProgressDialog
name|progressDialog
init|=
operator|new
name|ProgressDialog
argument_list|(
name|task
argument_list|)
decl_stmt|;
name|progressDialog
operator|.
name|setHeaderText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|progressDialog
operator|.
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
name|progressDialog
operator|.
name|setContentText
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|progressDialog
operator|.
name|setGraphic
argument_list|(
literal|null
argument_list|)
expr_stmt|;
operator|(
operator|(
name|Stage
operator|)
name|progressDialog
operator|.
name|getDialogPane
argument_list|()
operator|.
name|getScene
argument_list|()
operator|.
name|getWindow
argument_list|()
operator|)
operator|.
name|getIcons
argument_list|()
operator|.
name|add
argument_list|(
name|IconTheme
operator|.
name|getJabRefImageFX
argument_list|()
argument_list|)
expr_stmt|;
name|progressDialog
operator|.
name|setOnCloseRequest
argument_list|(
name|evt
lambda|->
name|task
operator|.
name|cancel
argument_list|()
argument_list|)
expr_stmt|;
name|DialogPane
name|dialogPane
init|=
name|progressDialog
operator|.
name|getDialogPane
argument_list|()
decl_stmt|;
name|dialogPane
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|add
argument_list|(
name|ButtonType
operator|.
name|CANCEL
argument_list|)
expr_stmt|;
name|Button
name|cancelButton
init|=
operator|(
name|Button
operator|)
name|dialogPane
operator|.
name|lookupButton
argument_list|(
name|ButtonType
operator|.
name|CANCEL
argument_list|)
decl_stmt|;
name|cancelButton
operator|.
name|setOnAction
argument_list|(
name|evt
lambda|->
block|{
name|task
operator|.
name|cancel
argument_list|()
expr_stmt|;
name|progressDialog
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|progressDialog
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|notify (String message)
specifier|public
name|void
name|notify
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|LOGGER
operator|.
name|info
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|statusLine
operator|.
name|fireEvent
argument_list|(
operator|new
name|SnackbarEvent
argument_list|(
operator|new
name|JFXSnackbarLayout
argument_list|(
name|message
argument_list|)
argument_list|,
name|TOAST_MESSAGE_DISPLAY_TIME
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|showFileSaveDialog (FileDialogConfiguration fileDialogConfiguration)
specifier|public
name|Optional
argument_list|<
name|Path
argument_list|>
name|showFileSaveDialog
parameter_list|(
name|FileDialogConfiguration
name|fileDialogConfiguration
parameter_list|)
block|{
name|FileChooser
name|chooser
init|=
name|getConfiguredFileChooser
argument_list|(
name|fileDialogConfiguration
argument_list|)
decl_stmt|;
name|File
name|file
init|=
name|chooser
operator|.
name|showSaveDialog
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|Optional
operator|.
name|ofNullable
argument_list|(
name|chooser
operator|.
name|getSelectedExtensionFilter
argument_list|()
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|fileDialogConfiguration
operator|::
name|setSelectedExtensionFilter
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|file
argument_list|)
operator|.
name|map
argument_list|(
name|File
operator|::
name|toPath
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|showFileOpenDialog (FileDialogConfiguration fileDialogConfiguration)
specifier|public
name|Optional
argument_list|<
name|Path
argument_list|>
name|showFileOpenDialog
parameter_list|(
name|FileDialogConfiguration
name|fileDialogConfiguration
parameter_list|)
block|{
name|FileChooser
name|chooser
init|=
name|getConfiguredFileChooser
argument_list|(
name|fileDialogConfiguration
argument_list|)
decl_stmt|;
name|File
name|file
init|=
name|chooser
operator|.
name|showOpenDialog
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
name|Optional
operator|.
name|ofNullable
argument_list|(
name|chooser
operator|.
name|getSelectedExtensionFilter
argument_list|()
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|fileDialogConfiguration
operator|::
name|setSelectedExtensionFilter
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|file
argument_list|)
operator|.
name|map
argument_list|(
name|File
operator|::
name|toPath
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|showDirectorySelectionDialog (DirectoryDialogConfiguration directoryDialogConfiguration)
specifier|public
name|Optional
argument_list|<
name|Path
argument_list|>
name|showDirectorySelectionDialog
parameter_list|(
name|DirectoryDialogConfiguration
name|directoryDialogConfiguration
parameter_list|)
block|{
name|DirectoryChooser
name|chooser
init|=
name|getConfiguredDirectoryChooser
argument_list|(
name|directoryDialogConfiguration
argument_list|)
decl_stmt|;
name|File
name|file
init|=
name|chooser
operator|.
name|showDialog
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|file
argument_list|)
operator|.
name|map
argument_list|(
name|File
operator|::
name|toPath
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|showFileOpenDialogAndGetMultipleFiles (FileDialogConfiguration fileDialogConfiguration)
specifier|public
name|List
argument_list|<
name|Path
argument_list|>
name|showFileOpenDialogAndGetMultipleFiles
parameter_list|(
name|FileDialogConfiguration
name|fileDialogConfiguration
parameter_list|)
block|{
name|FileChooser
name|chooser
init|=
name|getConfiguredFileChooser
argument_list|(
name|fileDialogConfiguration
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|chooser
operator|.
name|showOpenMultipleDialog
argument_list|(
name|mainWindow
argument_list|)
decl_stmt|;
return|return
name|files
operator|!=
literal|null
condition|?
name|files
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|File
operator|::
name|toPath
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
else|:
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
DECL|method|getConfiguredDirectoryChooser (DirectoryDialogConfiguration directoryDialogConfiguration)
specifier|private
name|DirectoryChooser
name|getConfiguredDirectoryChooser
parameter_list|(
name|DirectoryDialogConfiguration
name|directoryDialogConfiguration
parameter_list|)
block|{
name|DirectoryChooser
name|chooser
init|=
operator|new
name|DirectoryChooser
argument_list|()
decl_stmt|;
name|directoryDialogConfiguration
operator|.
name|getInitialDirectory
argument_list|()
operator|.
name|map
argument_list|(
name|Path
operator|::
name|toFile
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|chooser
operator|::
name|setInitialDirectory
argument_list|)
expr_stmt|;
return|return
name|chooser
return|;
block|}
DECL|method|getConfiguredFileChooser (FileDialogConfiguration fileDialogConfiguration)
specifier|private
name|FileChooser
name|getConfiguredFileChooser
parameter_list|(
name|FileDialogConfiguration
name|fileDialogConfiguration
parameter_list|)
block|{
name|FileChooser
name|chooser
init|=
operator|new
name|FileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|getExtensionFilters
argument_list|()
operator|.
name|addAll
argument_list|(
name|fileDialogConfiguration
operator|.
name|getExtensionFilters
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setSelectedExtensionFilter
argument_list|(
name|fileDialogConfiguration
operator|.
name|getDefaultExtension
argument_list|()
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setInitialFileName
argument_list|(
name|fileDialogConfiguration
operator|.
name|getInitialFileName
argument_list|()
argument_list|)
expr_stmt|;
name|fileDialogConfiguration
operator|.
name|getInitialDirectory
argument_list|()
operator|.
name|map
argument_list|(
name|Path
operator|::
name|toFile
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|chooser
operator|::
name|setInitialDirectory
argument_list|)
expr_stmt|;
return|return
name|chooser
return|;
block|}
annotation|@
name|Override
DECL|method|showPrintDialog (PrinterJob job)
specifier|public
name|boolean
name|showPrintDialog
parameter_list|(
name|PrinterJob
name|job
parameter_list|)
block|{
return|return
name|job
operator|.
name|showPrintDialog
argument_list|(
name|mainWindow
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|showFileOpenFromArchiveDialog (Path archivePath)
specifier|public
name|Optional
argument_list|<
name|Path
argument_list|>
name|showFileOpenFromArchiveDialog
parameter_list|(
name|Path
name|archivePath
parameter_list|)
throws|throws
name|IOException
block|{
try|try
init|(
name|FileSystem
name|zipFile
init|=
name|FileSystems
operator|.
name|newFileSystem
argument_list|(
name|archivePath
argument_list|,
literal|null
argument_list|)
init|)
block|{
return|return
operator|new
name|ZipFileChooser
argument_list|(
name|zipFile
argument_list|)
operator|.
name|showAndWait
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|NoClassDefFoundError
name|exc
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Could not instantiate ZIP-archive reader."
argument_list|,
name|exc
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

