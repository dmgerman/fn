begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.collab
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|collab
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonBar
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonType
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ListView
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ScrollPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|SplitPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|BorderPane
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BaseDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fxmisc
operator|.
name|easybind
operator|.
name|EasyBind
import|;
end_import

begin_class
DECL|class|ChangeDisplayDialog
class|class
name|ChangeDisplayDialog
extends|extends
name|BaseDialog
argument_list|<
name|Boolean
argument_list|>
block|{
DECL|field|tree
specifier|private
specifier|final
name|ListView
argument_list|<
name|DatabaseChangeViewModel
argument_list|>
name|tree
decl_stmt|;
DECL|field|infoPanel
specifier|private
specifier|final
name|BorderPane
name|infoPanel
init|=
operator|new
name|BorderPane
argument_list|()
decl_stmt|;
DECL|field|cb
specifier|private
specifier|final
name|CheckBox
name|cb
init|=
operator|new
name|CheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Accept change"
argument_list|)
argument_list|)
decl_stmt|;
DECL|method|ChangeDisplayDialog (BibDatabaseContext database, List<DatabaseChangeViewModel> changes)
specifier|public
name|ChangeDisplayDialog
parameter_list|(
name|BibDatabaseContext
name|database
parameter_list|,
name|List
argument_list|<
name|DatabaseChangeViewModel
argument_list|>
name|changes
parameter_list|)
block|{
name|this
operator|.
name|setTitle
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"External changes"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getDialogPane
argument_list|()
operator|.
name|setPrefSize
argument_list|(
literal|800
argument_list|,
literal|600
argument_list|)
expr_stmt|;
name|tree
operator|=
operator|new
name|ListView
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|(
name|changes
argument_list|)
argument_list|)
expr_stmt|;
name|tree
operator|.
name|setPrefWidth
argument_list|(
literal|190
argument_list|)
expr_stmt|;
name|EasyBind
operator|.
name|subscribe
argument_list|(
name|tree
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|selectedItemProperty
argument_list|()
argument_list|,
name|this
operator|::
name|selectedChangeChanged
argument_list|)
expr_stmt|;
name|SplitPane
name|pane
init|=
operator|new
name|SplitPane
argument_list|()
decl_stmt|;
name|pane
operator|.
name|setDividerPositions
argument_list|(
literal|0.25
argument_list|)
expr_stmt|;
name|pane
operator|.
name|getItems
argument_list|()
operator|.
name|addAll
argument_list|(
operator|new
name|ScrollPane
argument_list|(
name|tree
argument_list|)
argument_list|,
name|infoPanel
argument_list|)
expr_stmt|;
name|getDialogPane
argument_list|()
operator|.
name|setContent
argument_list|(
name|pane
argument_list|)
expr_stmt|;
name|infoPanel
operator|.
name|setBottom
argument_list|(
name|cb
argument_list|)
expr_stmt|;
name|Label
name|rootInfo
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Select the tree nodes to view and accept or reject changes"
argument_list|)
operator|+
literal|'.'
argument_list|)
decl_stmt|;
name|infoPanel
operator|.
name|setCenter
argument_list|(
name|rootInfo
argument_list|)
expr_stmt|;
name|getDialogPane
argument_list|()
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|setAll
argument_list|(
operator|new
name|ButtonType
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Accept changes"
argument_list|)
argument_list|,
name|ButtonBar
operator|.
name|ButtonData
operator|.
name|APPLY
argument_list|)
argument_list|,
name|ButtonType
operator|.
name|CANCEL
argument_list|)
expr_stmt|;
name|setResultConverter
argument_list|(
name|button
lambda|->
block|{
if|if
condition|(
name|button
operator|==
name|ButtonType
operator|.
name|CANCEL
condition|)
block|{
return|return
literal|false
return|;
block|}
else|else
block|{
comment|// Perform all accepted changes
name|NamedCompound
name|ce
init|=
operator|new
name|NamedCompound
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Merged external changes"
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|DatabaseChangeViewModel
name|change
range|:
name|changes
control|)
block|{
if|if
condition|(
name|change
operator|.
name|isAccepted
argument_list|()
condition|)
block|{
name|change
operator|.
name|makeChange
argument_list|(
name|database
argument_list|,
name|ce
argument_list|)
expr_stmt|;
block|}
block|}
name|ce
operator|.
name|end
argument_list|()
expr_stmt|;
comment|//TODO: panel.getUndoManager().addEdit(ce);
return|return
literal|true
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|EasyBind
operator|.
name|subscribe
argument_list|(
name|cb
operator|.
name|selectedProperty
argument_list|()
argument_list|,
name|selected
lambda|->
block|{
if|if
condition|(
name|selected
operator|!=
literal|null
operator|&&
name|tree
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|tree
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|setAccepted
argument_list|(
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|selectedChangeChanged (DatabaseChangeViewModel currentChange)
specifier|private
name|void
name|selectedChangeChanged
parameter_list|(
name|DatabaseChangeViewModel
name|currentChange
parameter_list|)
block|{
if|if
condition|(
name|currentChange
operator|!=
literal|null
condition|)
block|{
name|infoPanel
operator|.
name|setCenter
argument_list|(
name|currentChange
operator|.
name|description
argument_list|()
argument_list|)
expr_stmt|;
name|cb
operator|.
name|setSelected
argument_list|(
name|currentChange
operator|.
name|isAccepted
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

