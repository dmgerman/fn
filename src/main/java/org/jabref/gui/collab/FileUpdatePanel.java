begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.collab
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|collab
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|embed
operator|.
name|swing
operator|.
name|SwingNode
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|SidePaneComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|SidePaneManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|SidePaneType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_class
DECL|class|FileUpdatePanel
specifier|public
class|class
name|FileUpdatePanel
extends|extends
name|SidePaneComponent
implements|implements
name|ActionListener
implements|,
name|ChangeScanner
operator|.
name|DisplayResultCallback
block|{
DECL|field|manager
specifier|private
specifier|final
name|SidePaneManager
name|manager
decl_stmt|;
DECL|field|scanner
specifier|private
name|ChangeScanner
name|scanner
decl_stmt|;
DECL|field|file
specifier|private
name|File
name|file
decl_stmt|;
DECL|field|panel
specifier|private
name|BasePanel
name|panel
decl_stmt|;
DECL|method|FileUpdatePanel (SidePaneManager manager)
specifier|public
name|FileUpdatePanel
parameter_list|(
name|SidePaneManager
name|manager
parameter_list|)
block|{
name|super
argument_list|(
name|manager
argument_list|,
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|SAVE
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"File changed"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|manager
operator|=
name|manager
expr_stmt|;
block|}
DECL|method|showForFile (BasePanel panel, File file, ChangeScanner scanner)
specifier|public
name|void
name|showForFile
parameter_list|(
name|BasePanel
name|panel
parameter_list|,
name|File
name|file
parameter_list|,
name|ChangeScanner
name|scanner
parameter_list|)
block|{
name|this
operator|.
name|file
operator|=
name|file
expr_stmt|;
name|this
operator|.
name|panel
operator|=
name|panel
expr_stmt|;
name|this
operator|.
name|scanner
operator|=
name|scanner
expr_stmt|;
name|this
operator|.
name|show
argument_list|()
expr_stmt|;
block|}
comment|/**      * We include a getter for the BasePanel this component refers to, because this      * component needs to be closed if the BasePanel is closed.      * @return the base panel this component refers to.      */
DECL|method|getPanel ()
specifier|public
name|BasePanel
name|getPanel
parameter_list|()
block|{
return|return
name|panel
return|;
block|}
annotation|@
name|Override
DECL|method|getResizePolicy ()
specifier|public
name|Priority
name|getResizePolicy
parameter_list|()
block|{
return|return
name|Priority
operator|.
name|NEVER
return|;
block|}
annotation|@
name|Override
DECL|method|getToggleCommand ()
specifier|public
name|ToggleCommand
name|getToggleCommand
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
DECL|method|getToggleAction ()
specifier|public
name|Action
name|getToggleAction
parameter_list|()
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
annotation|@
name|Override
DECL|method|createContentPane ()
specifier|protected
name|Node
name|createContentPane
parameter_list|()
block|{
name|JPanel
name|main
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|main
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|JLabel
name|message
init|=
operator|new
name|JLabel
argument_list|(
literal|"<html><center>"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"The file<BR>'%0'<BR>has been modified<BR>externally!"
argument_list|,
name|file
operator|.
name|getName
argument_list|()
argument_list|)
operator|+
literal|"</center></html>"
argument_list|,
name|SwingConstants
operator|.
name|CENTER
argument_list|)
decl_stmt|;
name|main
operator|.
name|add
argument_list|(
name|message
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|JButton
name|reviewChanges
init|=
operator|new
name|JButton
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Review changes"
argument_list|)
argument_list|)
decl_stmt|;
name|reviewChanges
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|main
operator|.
name|add
argument_list|(
name|reviewChanges
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|main
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|SwingNode
name|swingNode
init|=
operator|new
name|SwingNode
argument_list|()
decl_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
name|swingNode
operator|.
name|setContent
argument_list|(
name|main
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|swingNode
return|;
block|}
annotation|@
name|Override
DECL|method|getType ()
specifier|public
name|SidePaneType
name|getType
parameter_list|()
block|{
return|return
name|SidePaneType
operator|.
name|FILE_UPDATE_NOTIFICATION
return|;
block|}
comment|/**      * actionPerformed      *      * @param e      *            ActionEvent      */
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
comment|// ChangeScanner scanner = new ChangeScanner(frame, panel); //,
comment|// panel.database(), panel.metaData());
comment|// try {
name|scanner
operator|.
name|displayResult
argument_list|(
name|this
argument_list|)
expr_stmt|;
comment|// scanner.changeScan(panel.file());
comment|// } catch (IOException ex) {
comment|// ex.printStackTrace();
comment|// }
block|}
comment|/**      * Callback method for signalling that the change scanner has displayed the      * scan results to the user.      * @param resolved true if there were no changes, or if the user has resolved them.      */
annotation|@
name|Override
DECL|method|scanResultsResolved (boolean resolved)
specifier|public
name|void
name|scanResultsResolved
parameter_list|(
name|boolean
name|resolved
parameter_list|)
block|{
if|if
condition|(
name|resolved
condition|)
block|{
name|manager
operator|.
name|hide
argument_list|(
name|this
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|panel
operator|.
name|markExternalChangesAsResolved
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

