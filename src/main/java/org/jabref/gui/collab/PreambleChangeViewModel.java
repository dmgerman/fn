begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.collab
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|collab
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|VBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|UndoablePreambleChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|bibtex
operator|.
name|comparator
operator|.
name|PreambleDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_class
DECL|class|PreambleChangeViewModel
class|class
name|PreambleChangeViewModel
extends|extends
name|DatabaseChangeViewModel
block|{
DECL|field|change
specifier|private
specifier|final
name|PreambleDiff
name|change
decl_stmt|;
DECL|method|PreambleChangeViewModel (PreambleDiff change)
specifier|public
name|PreambleChangeViewModel
parameter_list|(
name|PreambleDiff
name|change
parameter_list|)
block|{
name|super
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Changed preamble"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|change
operator|=
name|change
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|makeChange (BibDatabaseContext database, NamedCompound undoEdit)
specifier|public
name|void
name|makeChange
parameter_list|(
name|BibDatabaseContext
name|database
parameter_list|,
name|NamedCompound
name|undoEdit
parameter_list|)
block|{
name|database
operator|.
name|getDatabase
argument_list|()
operator|.
name|setPreamble
argument_list|(
name|change
operator|.
name|getNewPreamble
argument_list|()
argument_list|)
expr_stmt|;
name|undoEdit
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoablePreambleChange
argument_list|(
name|database
operator|.
name|getDatabase
argument_list|()
argument_list|,
name|change
operator|.
name|getOriginalPreamble
argument_list|()
argument_list|,
name|change
operator|.
name|getNewPreamble
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|description ()
specifier|public
name|Node
name|description
parameter_list|()
block|{
name|VBox
name|container
init|=
operator|new
name|VBox
argument_list|()
decl_stmt|;
name|Label
name|header
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Changed preamble"
argument_list|)
argument_list|)
decl_stmt|;
name|header
operator|.
name|getStyleClass
argument_list|()
operator|.
name|add
argument_list|(
literal|"sectionHeader"
argument_list|)
expr_stmt|;
name|container
operator|.
name|getChildren
argument_list|()
operator|.
name|add
argument_list|(
name|header
argument_list|)
expr_stmt|;
if|if
condition|(
name|StringUtil
operator|.
name|isNotBlank
argument_list|(
name|change
operator|.
name|getOriginalPreamble
argument_list|()
argument_list|)
condition|)
block|{
name|container
operator|.
name|getChildren
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Current value"
argument_list|)
operator|+
literal|": "
operator|+
name|change
operator|.
name|getOriginalPreamble
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|StringUtil
operator|.
name|isNotBlank
argument_list|(
name|change
operator|.
name|getNewPreamble
argument_list|()
argument_list|)
condition|)
block|{
name|container
operator|.
name|getChildren
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Value set externally"
argument_list|)
operator|+
literal|": "
operator|+
name|change
operator|.
name|getNewPreamble
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|container
operator|.
name|getChildren
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Value cleared externally"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|container
return|;
block|}
block|}
end_class

end_unit

