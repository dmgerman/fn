begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.preview
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preview
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ContextMenu
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|MenuItem
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|SeparatorMenuItem
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|ClipboardContent
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|DataFormat
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|Dragboard
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|KeyEvent
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|TransferMode
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|VBox
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiles
operator|.
name|ExternalFilesEntryLinker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
operator|.
name|ExternalFileTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|icon
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBindingRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|citationstyle
operator|.
name|PreviewLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|PreviewPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|PreviewPanel
specifier|public
class|class
name|PreviewPanel
extends|extends
name|VBox
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PreviewPanel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|fileLinker
specifier|private
specifier|final
name|ExternalFilesEntryLinker
name|fileLinker
decl_stmt|;
DECL|field|keyBindingRepository
specifier|private
specifier|final
name|KeyBindingRepository
name|keyBindingRepository
decl_stmt|;
DECL|field|previewView
specifier|private
specifier|final
name|PreviewViewer
name|previewView
decl_stmt|;
DECL|field|entry
specifier|private
name|BibEntry
name|entry
decl_stmt|;
DECL|field|basePanel
specifier|private
name|BasePanel
name|basePanel
decl_stmt|;
DECL|field|dialogService
specifier|private
name|DialogService
name|dialogService
decl_stmt|;
DECL|method|PreviewPanel (BibDatabaseContext database, BasePanel basePanel, DialogService dialogService, ExternalFileTypes externalFileTypes, KeyBindingRepository keyBindingRepository, PreviewPreferences preferences)
specifier|public
name|PreviewPanel
parameter_list|(
name|BibDatabaseContext
name|database
parameter_list|,
name|BasePanel
name|basePanel
parameter_list|,
name|DialogService
name|dialogService
parameter_list|,
name|ExternalFileTypes
name|externalFileTypes
parameter_list|,
name|KeyBindingRepository
name|keyBindingRepository
parameter_list|,
name|PreviewPreferences
name|preferences
parameter_list|)
block|{
name|this
operator|.
name|basePanel
operator|=
name|basePanel
expr_stmt|;
name|this
operator|.
name|keyBindingRepository
operator|=
name|keyBindingRepository
expr_stmt|;
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|fileLinker
operator|=
operator|new
name|ExternalFilesEntryLinker
argument_list|(
name|externalFileTypes
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getFilePreferences
argument_list|()
argument_list|,
name|database
argument_list|)
expr_stmt|;
name|previewView
operator|=
operator|new
name|PreviewViewer
argument_list|(
name|database
argument_list|,
name|dialogService
argument_list|,
name|Globals
operator|.
name|stateManager
argument_list|)
expr_stmt|;
name|previewView
operator|.
name|setLayout
argument_list|(
name|preferences
operator|.
name|getCurrentPreviewStyle
argument_list|()
argument_list|)
expr_stmt|;
name|previewView
operator|.
name|setContextMenu
argument_list|(
name|createPopupMenu
argument_list|()
argument_list|)
expr_stmt|;
name|previewView
operator|.
name|setOnDragDetected
argument_list|(
name|event
lambda|->
block|{
name|previewView
operator|.
name|startFullDrag
argument_list|()
expr_stmt|;
name|Dragboard
name|dragboard
init|=
name|previewView
operator|.
name|startDragAndDrop
argument_list|(
name|TransferMode
operator|.
name|COPY
argument_list|)
decl_stmt|;
name|ClipboardContent
name|content
init|=
operator|new
name|ClipboardContent
argument_list|()
decl_stmt|;
name|content
operator|.
name|putHtml
argument_list|(
name|previewView
operator|.
name|getSelectionHtmlContent
argument_list|()
argument_list|)
expr_stmt|;
name|dragboard
operator|.
name|setContent
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|event
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|previewView
operator|.
name|setOnDragOver
argument_list|(
name|event
lambda|->
block|{
if|if
condition|(
name|event
operator|.
name|getDragboard
argument_list|()
operator|.
name|hasFiles
argument_list|()
condition|)
block|{
name|event
operator|.
name|acceptTransferModes
argument_list|(
name|TransferMode
operator|.
name|COPY
argument_list|,
name|TransferMode
operator|.
name|MOVE
argument_list|,
name|TransferMode
operator|.
name|LINK
argument_list|)
expr_stmt|;
block|}
name|event
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|previewView
operator|.
name|setOnDragDropped
argument_list|(
name|event
lambda|->
block|{
name|boolean
name|success
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|getDragboard
argument_list|()
operator|.
name|hasContent
argument_list|(
name|DataFormat
operator|.
name|FILES
argument_list|)
condition|)
block|{
name|List
argument_list|<
name|Path
argument_list|>
name|files
init|=
name|event
operator|.
name|getDragboard
argument_list|()
operator|.
name|getFiles
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|File
operator|::
name|toPath
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|event
operator|.
name|getTransferMode
argument_list|()
operator|==
name|TransferMode
operator|.
name|MOVE
condition|)
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Mode MOVE"
argument_list|)
expr_stmt|;
comment|//shift on win or no modifier
name|fileLinker
operator|.
name|moveFilesToFileDirAndAddToEntry
argument_list|(
name|entry
argument_list|,
name|files
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getTransferMode
argument_list|()
operator|==
name|TransferMode
operator|.
name|LINK
condition|)
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Node LINK"
argument_list|)
expr_stmt|;
comment|//alt on win
name|fileLinker
operator|.
name|addFilesToEntry
argument_list|(
name|entry
argument_list|,
name|files
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|event
operator|.
name|getTransferMode
argument_list|()
operator|==
name|TransferMode
operator|.
name|COPY
condition|)
block|{
name|LOGGER
operator|.
name|debug
argument_list|(
literal|"Mode Copy"
argument_list|)
expr_stmt|;
comment|//ctrl on win, no modifier on Xubuntu
name|fileLinker
operator|.
name|copyFilesToFileDirAndAddToEntry
argument_list|(
name|entry
argument_list|,
name|files
argument_list|)
expr_stmt|;
block|}
name|success
operator|=
literal|true
expr_stmt|;
block|}
name|event
operator|.
name|setDropCompleted
argument_list|(
name|success
argument_list|)
expr_stmt|;
name|event
operator|.
name|consume
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|this
operator|.
name|getChildren
argument_list|()
operator|.
name|add
argument_list|(
name|previewView
argument_list|)
expr_stmt|;
name|createKeyBindings
argument_list|()
expr_stmt|;
name|updateLayout
argument_list|(
name|preferences
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|close ()
specifier|public
name|void
name|close
parameter_list|()
block|{
name|basePanel
operator|.
name|closeBottomPane
argument_list|()
expr_stmt|;
block|}
DECL|method|updateLayout (PreviewPreferences previewPreferences)
specifier|public
name|void
name|updateLayout
parameter_list|(
name|PreviewPreferences
name|previewPreferences
parameter_list|)
block|{
name|updateLayout
argument_list|(
name|previewPreferences
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|updateLayout (PreviewPreferences previewPreferences, boolean init)
specifier|private
name|void
name|updateLayout
parameter_list|(
name|PreviewPreferences
name|previewPreferences
parameter_list|,
name|boolean
name|init
parameter_list|)
block|{
name|PreviewLayout
name|currentPreviewStyle
init|=
name|previewPreferences
operator|.
name|getCurrentPreviewStyle
argument_list|()
decl_stmt|;
name|previewView
operator|.
name|setLayout
argument_list|(
name|currentPreviewStyle
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|init
condition|)
block|{
name|dialogService
operator|.
name|notify
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Preview style changed to: %0"
argument_list|,
name|currentPreviewStyle
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createKeyBindings ()
specifier|private
name|void
name|createKeyBindings
parameter_list|()
block|{
name|previewView
operator|.
name|addEventFilter
argument_list|(
name|KeyEvent
operator|.
name|KEY_PRESSED
argument_list|,
name|event
lambda|->
block|{
name|Optional
argument_list|<
name|KeyBinding
argument_list|>
name|keyBinding
init|=
name|keyBindingRepository
operator|.
name|mapToKeyBinding
argument_list|(
name|event
argument_list|)
decl_stmt|;
if|if
condition|(
name|keyBinding
operator|.
name|isPresent
argument_list|()
condition|)
block|{
switch|switch
condition|(
name|keyBinding
operator|.
name|get
argument_list|()
condition|)
block|{
case|case
name|COPY_PREVIEW
case|:
name|previewView
operator|.
name|copyPreviewToClipBoard
argument_list|()
expr_stmt|;
name|event
operator|.
name|consume
argument_list|()
expr_stmt|;
break|break;
case|case
name|CLOSE
case|:
name|close
argument_list|()
expr_stmt|;
name|event
operator|.
name|consume
argument_list|()
expr_stmt|;
break|break;
default|default:
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|createPopupMenu ()
specifier|private
name|ContextMenu
name|createPopupMenu
parameter_list|()
block|{
name|MenuItem
name|copyPreview
init|=
operator|new
name|MenuItem
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Copy preview"
argument_list|)
argument_list|,
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|COPY
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
decl_stmt|;
name|copyPreview
operator|.
name|setAccelerator
argument_list|(
name|keyBindingRepository
operator|.
name|getKeyCombination
argument_list|(
name|KeyBinding
operator|.
name|COPY_PREVIEW
argument_list|)
argument_list|)
expr_stmt|;
name|copyPreview
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
name|previewView
operator|.
name|copyPreviewToClipBoard
argument_list|()
argument_list|)
expr_stmt|;
name|MenuItem
name|printEntryPreview
init|=
operator|new
name|MenuItem
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Print entry preview"
argument_list|)
argument_list|,
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|PRINTED
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
decl_stmt|;
name|printEntryPreview
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
name|previewView
operator|.
name|print
argument_list|()
argument_list|)
expr_stmt|;
name|MenuItem
name|previousPreviewLayout
init|=
operator|new
name|MenuItem
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Previous preview layout"
argument_list|)
argument_list|)
decl_stmt|;
name|previousPreviewLayout
operator|.
name|setAccelerator
argument_list|(
name|keyBindingRepository
operator|.
name|getKeyCombination
argument_list|(
name|KeyBinding
operator|.
name|PREVIOUS_PREVIEW_LAYOUT
argument_list|)
argument_list|)
expr_stmt|;
name|previousPreviewLayout
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
name|basePanel
operator|.
name|previousPreviewStyle
argument_list|()
argument_list|)
expr_stmt|;
name|MenuItem
name|nextPreviewLayout
init|=
operator|new
name|MenuItem
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Next preview layout"
argument_list|)
argument_list|)
decl_stmt|;
name|nextPreviewLayout
operator|.
name|setAccelerator
argument_list|(
name|keyBindingRepository
operator|.
name|getKeyCombination
argument_list|(
name|KeyBinding
operator|.
name|NEXT_PREVIEW_LAYOUT
argument_list|)
argument_list|)
expr_stmt|;
name|nextPreviewLayout
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
name|basePanel
operator|.
name|nextPreviewStyle
argument_list|()
argument_list|)
expr_stmt|;
name|ContextMenu
name|menu
init|=
operator|new
name|ContextMenu
argument_list|()
decl_stmt|;
name|menu
operator|.
name|getItems
argument_list|()
operator|.
name|add
argument_list|(
name|copyPreview
argument_list|)
expr_stmt|;
name|menu
operator|.
name|getItems
argument_list|()
operator|.
name|add
argument_list|(
name|printEntryPreview
argument_list|)
expr_stmt|;
name|menu
operator|.
name|getItems
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|SeparatorMenuItem
argument_list|()
argument_list|)
expr_stmt|;
name|menu
operator|.
name|getItems
argument_list|()
operator|.
name|add
argument_list|(
name|nextPreviewLayout
argument_list|)
expr_stmt|;
name|menu
operator|.
name|getItems
argument_list|()
operator|.
name|add
argument_list|(
name|previousPreviewLayout
argument_list|)
expr_stmt|;
return|return
name|menu
return|;
block|}
DECL|method|setEntry (BibEntry entry)
specifier|public
name|void
name|setEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|this
operator|.
name|entry
operator|=
name|entry
expr_stmt|;
name|previewView
operator|.
name|setEntry
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
DECL|method|print ()
specifier|public
name|void
name|print
parameter_list|()
block|{
name|previewView
operator|.
name|print
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

