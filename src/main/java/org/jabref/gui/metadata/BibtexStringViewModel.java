begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.metadata
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|metadata
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ReadOnlyBooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleStringProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|StringProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|CompositeValidator
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|FunctionBasedValidator
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|ValidationMessage
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|ValidationStatus
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|Validator
import|;
end_import

begin_class
DECL|class|BibtexStringViewModel
specifier|public
class|class
name|BibtexStringViewModel
block|{
DECL|field|IS_NUMBER
specifier|private
specifier|final
specifier|static
name|Pattern
name|IS_NUMBER
init|=
name|Pattern
operator|.
name|compile
argument_list|(
literal|"-?\\d+(\\.\\d+)?"
argument_list|)
decl_stmt|;
DECL|field|labelProperty
specifier|private
specifier|final
name|StringProperty
name|labelProperty
init|=
operator|new
name|SimpleStringProperty
argument_list|()
decl_stmt|;
DECL|field|contentProperty
specifier|private
specifier|final
name|StringProperty
name|contentProperty
init|=
operator|new
name|SimpleStringProperty
argument_list|()
decl_stmt|;
DECL|field|labelValidator
specifier|private
specifier|final
name|Validator
name|labelValidator
decl_stmt|;
DECL|field|contentValidator
specifier|private
specifier|final
name|Validator
name|contentValidator
decl_stmt|;
DECL|field|combinedValidator
specifier|private
specifier|final
name|CompositeValidator
name|combinedValidator
decl_stmt|;
DECL|method|BibtexStringViewModel (String label, String content)
specifier|public
name|BibtexStringViewModel
parameter_list|(
name|String
name|label
parameter_list|,
name|String
name|content
parameter_list|)
block|{
name|this
operator|.
name|labelProperty
operator|.
name|setValue
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|this
operator|.
name|contentProperty
operator|.
name|setValue
argument_list|(
name|content
argument_list|)
expr_stmt|;
name|labelValidator
operator|=
operator|new
name|FunctionBasedValidator
argument_list|<>
argument_list|(
name|this
operator|.
name|labelProperty
argument_list|,
name|BibtexStringViewModel
operator|::
name|validateLabel
argument_list|)
expr_stmt|;
name|contentValidator
operator|=
operator|new
name|FunctionBasedValidator
argument_list|<>
argument_list|(
name|this
operator|.
name|contentProperty
argument_list|,
name|BibtexStringViewModel
operator|::
name|validateContent
argument_list|)
expr_stmt|;
name|combinedValidator
operator|=
operator|new
name|CompositeValidator
argument_list|(
name|labelValidator
argument_list|,
name|contentValidator
argument_list|)
expr_stmt|;
block|}
DECL|method|labelValidation ()
specifier|public
name|ValidationStatus
name|labelValidation
parameter_list|()
block|{
return|return
name|labelValidator
operator|.
name|getValidationStatus
argument_list|()
return|;
block|}
DECL|method|contentValidation ()
specifier|public
name|ValidationStatus
name|contentValidation
parameter_list|()
block|{
return|return
name|contentValidator
operator|.
name|getValidationStatus
argument_list|()
return|;
block|}
DECL|method|combinedValidationValidProperty ()
specifier|public
name|ReadOnlyBooleanProperty
name|combinedValidationValidProperty
parameter_list|()
block|{
return|return
name|combinedValidator
operator|.
name|getValidationStatus
argument_list|()
operator|.
name|validProperty
argument_list|()
return|;
block|}
DECL|method|labelProperty ()
specifier|public
name|StringProperty
name|labelProperty
parameter_list|()
block|{
return|return
name|this
operator|.
name|labelProperty
return|;
block|}
DECL|method|contentProperty ()
specifier|public
name|StringProperty
name|contentProperty
parameter_list|()
block|{
return|return
name|this
operator|.
name|contentProperty
return|;
block|}
DECL|method|setLabel (String label)
specifier|public
name|void
name|setLabel
parameter_list|(
name|String
name|label
parameter_list|)
block|{
name|this
operator|.
name|labelProperty
operator|.
name|setValue
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
DECL|method|setContent (String content)
specifier|public
name|void
name|setContent
parameter_list|(
name|String
name|content
parameter_list|)
block|{
name|this
operator|.
name|contentProperty
operator|.
name|setValue
argument_list|(
name|content
argument_list|)
expr_stmt|;
block|}
DECL|method|validateLabel (String input)
specifier|private
specifier|static
name|ValidationMessage
name|validateLabel
parameter_list|(
name|String
name|input
parameter_list|)
block|{
if|if
condition|(
name|input
operator|==
literal|null
condition|)
block|{
return|return
name|ValidationMessage
operator|.
name|error
argument_list|(
literal|"May not be null"
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|input
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|ValidationMessage
operator|.
name|error
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please enter the string's label"
argument_list|)
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|IS_NUMBER
operator|.
name|matcher
argument_list|(
name|input
argument_list|)
operator|.
name|matches
argument_list|()
condition|)
block|{
return|return
name|ValidationMessage
operator|.
name|error
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"The label of the string cannot be a number."
argument_list|)
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|input
operator|.
name|contains
argument_list|(
literal|"#"
argument_list|)
condition|)
block|{
return|return
name|ValidationMessage
operator|.
name|error
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"The label of the string cannot contain the '#' character."
argument_list|)
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|input
operator|.
name|contains
argument_list|(
literal|" "
argument_list|)
condition|)
block|{
return|return
name|ValidationMessage
operator|.
name|error
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"The label of the string cannot contain spaces."
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
comment|// everything is ok
block|}
block|}
DECL|method|validateContent (String input)
specifier|private
specifier|static
name|ValidationMessage
name|validateContent
parameter_list|(
name|String
name|input
parameter_list|)
block|{
if|if
condition|(
name|input
operator|==
literal|null
condition|)
block|{
return|return
name|ValidationMessage
operator|.
name|error
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Must not be empty!"
argument_list|)
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|input
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
name|ValidationMessage
operator|.
name|error
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Must not be empty!"
argument_list|)
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|null
return|;
comment|// everything is ok
block|}
block|}
block|}
end_class

end_unit

