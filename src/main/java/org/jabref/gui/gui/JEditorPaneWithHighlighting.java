begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.gui
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Matcher
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JEditorPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|BadLocationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|DefaultHighlighter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|Highlighter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|LayeredHighlighter
operator|.
name|LayerPainter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|fieldeditors
operator|.
name|JTextAreaWithHighlighting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|search
operator|.
name|SearchQueryHighlightListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
DECL|class|JEditorPaneWithHighlighting
specifier|public
class|class
name|JEditorPaneWithHighlighting
extends|extends
name|JEditorPane
implements|implements
name|SearchQueryHighlightListener
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|JTextAreaWithHighlighting
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|highlightPattern (Optional<Pattern> highlightPattern)
specifier|public
name|void
name|highlightPattern
parameter_list|(
name|Optional
argument_list|<
name|Pattern
argument_list|>
name|highlightPattern
parameter_list|)
block|{
name|Highlighter
name|highlighter
init|=
name|getHighlighter
argument_list|()
decl_stmt|;
name|highlighter
operator|.
name|removeAllHighlights
argument_list|()
expr_stmt|;
if|if
condition|(
operator|(
name|highlightPattern
operator|==
literal|null
operator|)
operator|||
operator|!
name|highlightPattern
operator|.
name|isPresent
argument_list|()
condition|)
block|{
return|return;
block|}
name|String
name|text
init|=
name|getDocumentText
argument_list|()
decl_stmt|;
name|Matcher
name|matcher
init|=
name|highlightPattern
operator|.
name|get
argument_list|()
operator|.
name|matcher
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|LayerPainter
name|painter
init|=
name|DefaultHighlighter
operator|.
name|DefaultPainter
decl_stmt|;
while|while
condition|(
name|matcher
operator|.
name|find
argument_list|()
condition|)
block|{
try|try
block|{
name|highlighter
operator|.
name|addHighlight
argument_list|(
name|matcher
operator|.
name|start
argument_list|()
argument_list|,
name|matcher
operator|.
name|end
argument_list|()
argument_list|,
name|painter
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BadLocationException
name|ble
parameter_list|)
block|{
comment|// should not occur if matcher works right
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Highlighting not possible, bad location"
argument_list|,
name|ble
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|getDocumentText ()
specifier|private
name|String
name|getDocumentText
parameter_list|()
block|{
name|Document
name|doc
init|=
name|getDocument
argument_list|()
decl_stmt|;
name|String
name|text
decl_stmt|;
try|try
block|{
name|text
operator|=
name|doc
operator|.
name|getText
argument_list|(
literal|0
argument_list|,
name|doc
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error while getting document text"
argument_list|)
expr_stmt|;
name|text
operator|=
literal|""
expr_stmt|;
block|}
return|return
name|text
return|;
block|}
block|}
end_class

end_unit

