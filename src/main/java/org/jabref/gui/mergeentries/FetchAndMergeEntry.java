begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.mergeentries
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|mergeentries
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BackgroundTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|TaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|EntryBasedFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|IdBasedFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|WebFetchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Class for fetching and merging bibliographic information  */
end_comment

begin_class
DECL|class|FetchAndMergeEntry
specifier|public
class|class
name|FetchAndMergeEntry
block|{
comment|// A list of all field which are supported
DECL|field|SUPPORTED_FIELDS
specifier|public
specifier|static
name|List
argument_list|<
name|String
argument_list|>
name|SUPPORTED_FIELDS
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|FieldName
operator|.
name|DOI
argument_list|,
name|FieldName
operator|.
name|EPRINT
argument_list|,
name|FieldName
operator|.
name|ISBN
argument_list|)
decl_stmt|;
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|FetchAndMergeEntry
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|panel
specifier|private
specifier|final
name|BasePanel
name|panel
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|taskExecutor
specifier|private
specifier|final
name|TaskExecutor
name|taskExecutor
decl_stmt|;
DECL|method|FetchAndMergeEntry (BasePanel panel, TaskExecutor taskExecutor)
specifier|public
name|FetchAndMergeEntry
parameter_list|(
name|BasePanel
name|panel
parameter_list|,
name|TaskExecutor
name|taskExecutor
parameter_list|)
block|{
name|this
operator|.
name|dialogService
operator|=
name|panel
operator|.
name|frame
argument_list|()
operator|.
name|getDialogService
argument_list|()
expr_stmt|;
name|this
operator|.
name|panel
operator|=
name|panel
expr_stmt|;
name|this
operator|.
name|taskExecutor
operator|=
name|taskExecutor
expr_stmt|;
block|}
DECL|method|fetchAndMerge (BibEntry entry)
specifier|public
name|void
name|fetchAndMerge
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|fetchAndMerge
argument_list|(
name|entry
argument_list|,
name|SUPPORTED_FIELDS
argument_list|)
expr_stmt|;
block|}
DECL|method|fetchAndMerge (BibEntry entry, String field)
specifier|public
name|void
name|fetchAndMerge
parameter_list|(
name|BibEntry
name|entry
parameter_list|,
name|String
name|field
parameter_list|)
block|{
name|fetchAndMerge
argument_list|(
name|entry
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|field
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|fetchAndMerge (BibEntry entry, List<String> fields)
specifier|public
name|void
name|fetchAndMerge
parameter_list|(
name|BibEntry
name|entry
parameter_list|,
name|List
argument_list|<
name|String
argument_list|>
name|fields
parameter_list|)
block|{
for|for
control|(
name|String
name|field
range|:
name|fields
control|)
block|{
name|Optional
argument_list|<
name|String
argument_list|>
name|fieldContent
init|=
name|entry
operator|.
name|getField
argument_list|(
name|field
argument_list|)
decl_stmt|;
if|if
condition|(
name|fieldContent
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|Optional
argument_list|<
name|IdBasedFetcher
argument_list|>
name|fetcher
init|=
name|WebFetchers
operator|.
name|getIdBasedFetcherForField
argument_list|(
name|field
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getImportFormatPreferences
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|fetcher
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|BackgroundTask
operator|.
name|wrap
argument_list|(
parameter_list|()
lambda|->
name|fetcher
operator|.
name|get
argument_list|()
operator|.
name|performSearchById
argument_list|(
name|fieldContent
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
operator|.
name|onSuccess
argument_list|(
name|fetchedEntry
lambda|->
block|{
name|String
name|type
operator|=
name|FieldName
operator|.
name|getDisplayName
argument_list|(
name|field
argument_list|)
argument_list|;
if|if
condition|(
name|fetchedEntry
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|MergeFetchedEntryDialog
name|dialog
init|=
operator|new
name|MergeFetchedEntryDialog
argument_list|(
name|panel
argument_list|,
name|entry
argument_list|,
name|fetchedEntry
operator|.
name|get
argument_list|()
argument_list|,
name|type
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|panel
operator|.
name|frame
argument_list|()
operator|.
name|setStatus
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Cannot get info based on given %0: %1"
argument_list|,
name|type
argument_list|,
name|fieldContent
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|)
operator|.
name|onFailure
argument_list|(
name|exception
lambda|->
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error while fetching bibliographic information"
argument_list|,
name|exception
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|exception
argument_list|)
expr_stmt|;
block|}
argument_list|)
operator|.
name|executeWith
argument_list|(
name|Globals
operator|.
name|TASK_EXECUTOR
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|dialogService
operator|.
name|notify
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"No %0 found"
argument_list|,
name|FieldName
operator|.
name|getDisplayName
argument_list|(
name|field
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

begin_function
unit|}      public
DECL|method|fetchAndMerge (BibEntry entry, EntryBasedFetcher fetcher)
name|void
name|fetchAndMerge
parameter_list|(
name|BibEntry
name|entry
parameter_list|,
name|EntryBasedFetcher
name|fetcher
parameter_list|)
block|{
name|BackgroundTask
operator|.
name|wrap
argument_list|(
parameter_list|()
lambda|->
name|fetcher
operator|.
name|performSearch
argument_list|(
name|entry
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|findFirst
argument_list|()
argument_list|)
operator|.
name|onSuccess
argument_list|(
name|fetchedEntry
lambda|->
block|{
lambda|if (fetchedEntry.isPresent(
argument_list|)
block|)
block|{
name|MergeFetchedEntryDialog
name|dialog
init|=
operator|new
name|MergeFetchedEntryDialog
argument_list|(
name|panel
argument_list|,
name|entry
argument_list|,
name|fetchedEntry
operator|.
name|get
argument_list|()
argument_list|,
name|fetcher
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
end_function

begin_else
else|else
block|{
name|dialogService
operator|.
name|notify
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Could not find any bibliographic information."
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_else

begin_expr_stmt
unit|})
operator|.
name|onFailure
argument_list|(
name|exception
lambda|->
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error while fetching entry with "
operator|+
name|fetcher
operator|.
name|getName
argument_list|()
argument_list|,
name|exception
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Error while fetching from %0"
argument_list|,
name|fetcher
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
argument_list|)
operator|.
name|executeWith
argument_list|(
name|taskExecutor
argument_list|)
expr_stmt|;
end_expr_stmt

unit|} }
end_unit

