begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.mergeentries
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|mergeentries
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractAction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JSeparator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|NamedCompound
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|UndoableChangeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|UndoableFieldChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|WindowLocation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|InternalBibtexFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|ButtonBarBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|ColumnSpec
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|RowSpec
import|;
end_import

begin_comment
comment|/**  * Dialog for merging Bibtex entry with fetched data  */
end_comment

begin_class
DECL|class|MergeFetchedEntryDialog
specifier|public
class|class
name|MergeFetchedEntryDialog
extends|extends
name|JabRefDialog
block|{
DECL|field|MARGIN
specifier|private
specifier|static
specifier|final
name|String
name|MARGIN
init|=
literal|"5px"
decl_stmt|;
DECL|field|panel
specifier|private
specifier|final
name|BasePanel
name|panel
decl_stmt|;
DECL|field|cc
specifier|private
specifier|final
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
DECL|field|originalEntry
specifier|private
specifier|final
name|BibEntry
name|originalEntry
decl_stmt|;
DECL|field|fetchedEntry
specifier|private
specifier|final
name|BibEntry
name|fetchedEntry
decl_stmt|;
DECL|field|ce
specifier|private
name|NamedCompound
name|ce
decl_stmt|;
DECL|field|mergeEntries
specifier|private
name|MergeEntries
name|mergeEntries
decl_stmt|;
DECL|field|type
specifier|private
specifier|final
name|String
name|type
decl_stmt|;
DECL|method|MergeFetchedEntryDialog (BasePanel panel, BibEntry originalEntry, BibEntry fetchedEntry, String type)
specifier|public
name|MergeFetchedEntryDialog
parameter_list|(
name|BasePanel
name|panel
parameter_list|,
name|BibEntry
name|originalEntry
parameter_list|,
name|BibEntry
name|fetchedEntry
parameter_list|,
name|String
name|type
parameter_list|)
block|{
name|super
argument_list|(
name|panel
operator|.
name|frame
argument_list|()
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Merge entry with %0 information"
argument_list|,
name|type
argument_list|)
argument_list|,
literal|true
argument_list|,
name|MergeFetchedEntryDialog
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|panel
operator|=
name|panel
expr_stmt|;
name|this
operator|.
name|originalEntry
operator|=
name|originalEntry
expr_stmt|;
name|this
operator|.
name|fetchedEntry
operator|=
name|fetchedEntry
expr_stmt|;
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
comment|// Start setting up the dialog
name|init
argument_list|()
expr_stmt|;
block|}
comment|/**      * Sets up the dialog      */
DECL|method|init ()
specifier|private
name|void
name|init
parameter_list|()
block|{
name|mergeEntries
operator|=
operator|new
name|MergeEntries
argument_list|(
name|this
operator|.
name|originalEntry
argument_list|,
name|this
operator|.
name|fetchedEntry
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Original entry"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Entry from %0"
argument_list|,
name|type
argument_list|)
argument_list|,
name|panel
operator|.
name|getBibDatabaseContext
argument_list|()
operator|.
name|getMode
argument_list|()
argument_list|)
expr_stmt|;
comment|// Create undo-compound
name|ce
operator|=
operator|new
name|NamedCompound
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Merge entry with %0 information"
argument_list|,
name|type
argument_list|)
argument_list|)
expr_stmt|;
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"fill:700px:grow"
argument_list|,
literal|"fill:400px:grow, 4px, p, 5px, p"
argument_list|)
decl_stmt|;
name|this
operator|.
name|setLayout
argument_list|(
name|layout
argument_list|)
expr_stmt|;
name|this
operator|.
name|add
argument_list|(
name|mergeEntries
operator|.
name|getMergeEntryPanel
argument_list|()
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|add
argument_list|(
operator|new
name|JSeparator
argument_list|()
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create buttons
name|ButtonBarBuilder
name|bb
init|=
operator|new
name|ButtonBarBuilder
argument_list|()
decl_stmt|;
name|bb
operator|.
name|addGlue
argument_list|()
expr_stmt|;
name|JButton
name|cancel
init|=
operator|new
name|JButton
argument_list|(
operator|new
name|CancelAction
argument_list|()
argument_list|)
decl_stmt|;
name|JButton
name|replaceEntry
init|=
operator|new
name|JButton
argument_list|(
operator|new
name|ReplaceAction
argument_list|()
argument_list|)
decl_stmt|;
name|bb
operator|.
name|addButton
argument_list|(
name|replaceEntry
argument_list|,
name|cancel
argument_list|)
expr_stmt|;
name|this
operator|.
name|add
argument_list|(
name|bb
operator|.
name|getPanel
argument_list|()
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
comment|// Add some margin around the layout
name|layout
operator|.
name|appendRow
argument_list|(
name|RowSpec
operator|.
name|decode
argument_list|(
name|MARGIN
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|appendColumn
argument_list|(
name|ColumnSpec
operator|.
name|decode
argument_list|(
name|MARGIN
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|insertRow
argument_list|(
literal|1
argument_list|,
name|RowSpec
operator|.
name|decode
argument_list|(
name|MARGIN
argument_list|)
argument_list|)
expr_stmt|;
name|layout
operator|.
name|insertColumn
argument_list|(
literal|1
argument_list|,
name|ColumnSpec
operator|.
name|decode
argument_list|(
name|MARGIN
argument_list|)
argument_list|)
expr_stmt|;
name|WindowLocation
name|pw
init|=
operator|new
name|WindowLocation
argument_list|(
name|this
argument_list|,
name|JabRefPreferences
operator|.
name|MERGEENTRIES_POS_X
argument_list|,
name|JabRefPreferences
operator|.
name|MERGEENTRIES_POS_Y
argument_list|,
name|JabRefPreferences
operator|.
name|MERGEENTRIES_SIZE_X
argument_list|,
name|JabRefPreferences
operator|.
name|MERGEENTRIES_SIZE_Y
argument_list|)
decl_stmt|;
name|pw
operator|.
name|displayWindowAtStoredLocation
argument_list|()
expr_stmt|;
block|}
DECL|class|CancelAction
specifier|private
class|class
name|CancelAction
extends|extends
name|AbstractAction
block|{
DECL|method|CancelAction ()
name|CancelAction
parameter_list|()
block|{
name|putValue
argument_list|(
name|Action
operator|.
name|NAME
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|panel
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Canceled merging entries"
argument_list|)
argument_list|)
expr_stmt|;
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
DECL|class|ReplaceAction
specifier|private
class|class
name|ReplaceAction
extends|extends
name|AbstractAction
block|{
DECL|method|ReplaceAction ()
name|ReplaceAction
parameter_list|()
block|{
name|putValue
argument_list|(
name|Action
operator|.
name|NAME
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Replace original entry"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|actionPerformed (ActionEvent e)
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|BibEntry
name|mergedEntry
init|=
name|mergeEntries
operator|.
name|getMergeEntry
argument_list|()
decl_stmt|;
comment|// Updated the original entry with the new fields
name|Set
argument_list|<
name|String
argument_list|>
name|jointFields
init|=
operator|new
name|TreeSet
argument_list|<>
argument_list|(
name|mergedEntry
operator|.
name|getFieldNames
argument_list|()
argument_list|)
decl_stmt|;
name|Set
argument_list|<
name|String
argument_list|>
name|originalFields
init|=
operator|new
name|TreeSet
argument_list|<>
argument_list|(
name|originalEntry
operator|.
name|getFieldNames
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|edited
init|=
literal|false
decl_stmt|;
comment|// entry type
name|String
name|oldType
init|=
name|originalEntry
operator|.
name|getType
argument_list|()
decl_stmt|;
name|String
name|newType
init|=
name|mergedEntry
operator|.
name|getType
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|oldType
operator|.
name|equalsIgnoreCase
argument_list|(
name|newType
argument_list|)
condition|)
block|{
name|originalEntry
operator|.
name|setType
argument_list|(
name|newType
argument_list|)
expr_stmt|;
name|ce
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoableChangeType
argument_list|(
name|originalEntry
argument_list|,
name|oldType
argument_list|,
name|newType
argument_list|)
argument_list|)
expr_stmt|;
name|edited
operator|=
literal|true
expr_stmt|;
block|}
comment|// fields
for|for
control|(
name|String
name|field
range|:
name|jointFields
control|)
block|{
name|Optional
argument_list|<
name|String
argument_list|>
name|originalString
init|=
name|originalEntry
operator|.
name|getField
argument_list|(
name|field
argument_list|)
decl_stmt|;
name|Optional
argument_list|<
name|String
argument_list|>
name|mergedString
init|=
name|mergedEntry
operator|.
name|getField
argument_list|(
name|field
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|originalString
operator|.
name|isPresent
argument_list|()
operator|||
operator|!
name|originalString
operator|.
name|equals
argument_list|(
name|mergedString
argument_list|)
condition|)
block|{
name|originalEntry
operator|.
name|setField
argument_list|(
name|field
argument_list|,
name|mergedString
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
comment|// mergedString always present
name|ce
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoableFieldChange
argument_list|(
name|originalEntry
argument_list|,
name|field
argument_list|,
name|originalString
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
argument_list|,
name|mergedString
operator|.
name|get
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|edited
operator|=
literal|true
expr_stmt|;
block|}
block|}
comment|// Remove fields which are not in the merged entry, unless they are internal fields
for|for
control|(
name|String
name|field
range|:
name|originalFields
control|)
block|{
if|if
condition|(
operator|!
name|jointFields
operator|.
name|contains
argument_list|(
name|field
argument_list|)
operator|&&
operator|!
name|InternalBibtexFields
operator|.
name|isInternalField
argument_list|(
name|field
argument_list|)
condition|)
block|{
name|Optional
argument_list|<
name|String
argument_list|>
name|originalString
init|=
name|originalEntry
operator|.
name|getField
argument_list|(
name|field
argument_list|)
decl_stmt|;
name|originalEntry
operator|.
name|clearField
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|ce
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoableFieldChange
argument_list|(
name|originalEntry
argument_list|,
name|field
argument_list|,
name|originalString
operator|.
name|get
argument_list|()
argument_list|,
literal|null
argument_list|)
argument_list|)
expr_stmt|;
comment|// originalString always present
name|edited
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
name|edited
condition|)
block|{
name|ce
operator|.
name|end
argument_list|()
expr_stmt|;
name|panel
operator|.
name|getUndoManager
argument_list|()
operator|.
name|addEdit
argument_list|(
name|ce
argument_list|)
expr_stmt|;
name|panel
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Updated entry with info from %0"
argument_list|,
name|type
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|updateEntryEditorIfShowing
argument_list|()
expr_stmt|;
name|panel
operator|.
name|markBaseChanged
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|panel
operator|.
name|output
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"No information added"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

