begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.fieldeditors
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|fieldeditors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|Initializable
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|text
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|GUIGlobals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BindingsHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_class
DECL|class|EditorTextArea
specifier|public
class|class
name|EditorTextArea
extends|extends
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TextArea
implements|implements
name|Initializable
block|{
DECL|field|fieldName
specifier|private
name|String
name|fieldName
decl_stmt|;
DECL|method|EditorTextArea ()
specifier|public
name|EditorTextArea
parameter_list|()
block|{
name|this
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
DECL|method|EditorTextArea (String text)
specifier|public
name|EditorTextArea
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|setMinHeight
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|setMinWidth
argument_list|(
literal|200
argument_list|)
expr_stmt|;
comment|// Hide horizontal scrollbar and always wrap text
name|setWrapText
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|GUIGlobals
operator|.
name|currentFont
operator|!=
literal|null
condition|)
block|{
name|setFont
argument_list|(
name|Font
operator|.
name|font
argument_list|(
name|GUIGlobals
operator|.
name|currentFont
operator|.
name|getFontName
argument_list|()
argument_list|,
name|GUIGlobals
operator|.
name|currentFont
operator|.
name|getSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|setStyle
argument_list|(
literal|"text-area-background: "
operator|+
name|convertToHex
argument_list|(
name|GUIGlobals
operator|.
name|validFieldBackgroundColor
argument_list|)
operator|+
literal|";"
operator|+
literal|"text-area-foreground: "
operator|+
name|convertToHex
argument_list|(
name|GUIGlobals
operator|.
name|editorTextColor
argument_list|)
operator|+
literal|";"
operator|+
literal|"text-area-highlight: "
operator|+
name|convertToHex
argument_list|(
name|GUIGlobals
operator|.
name|activeBackgroundColor
argument_list|)
operator|+
literal|";"
argument_list|)
expr_stmt|;
block|}
name|getStylesheets
argument_list|()
operator|.
name|add
argument_list|(
literal|"org/jabref/gui/fieldeditors/EditorTextArea.css"
argument_list|)
expr_stmt|;
block|}
DECL|method|convertToHex (java.awt.Color color)
specifier|private
name|String
name|convertToHex
parameter_list|(
name|java
operator|.
name|awt
operator|.
name|Color
name|color
parameter_list|)
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"#%02x%02x%02x"
argument_list|,
name|color
operator|.
name|getRed
argument_list|()
argument_list|,
name|color
operator|.
name|getGreen
argument_list|()
argument_list|,
name|color
operator|.
name|getBlue
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|initialize (URL location, ResourceBundle resources)
specifier|public
name|void
name|initialize
parameter_list|(
name|URL
name|location
parameter_list|,
name|ResourceBundle
name|resources
parameter_list|)
block|{      }
DECL|method|bindToEntry (String fieldName, BibEntry entry)
specifier|public
name|void
name|bindToEntry
parameter_list|(
name|String
name|fieldName
parameter_list|,
name|BibEntry
name|entry
parameter_list|)
block|{
name|this
operator|.
name|fieldName
operator|=
name|fieldName
expr_stmt|;
name|BindingsHelper
operator|.
name|bindBidirectional
argument_list|(
name|this
operator|.
name|textProperty
argument_list|()
argument_list|,
name|entry
operator|.
name|getFieldBinding
argument_list|(
name|fieldName
argument_list|)
argument_list|,
name|newValue
lambda|->
block|{
if|if
condition|(
name|newValue
operator|!=
literal|null
condition|)
block|{
name|entry
operator|.
name|setField
argument_list|(
name|fieldName
argument_list|,
name|newValue
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

