begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.fieldeditors
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|fieldeditors
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|Observable
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|BooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|DoubleProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleBooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleDoubleProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|LinkedFile
import|;
end_import

begin_import
import|import
name|de
operator|.
name|jensd
operator|.
name|fx
operator|.
name|glyphs
operator|.
name|GlyphIcons
import|;
end_import

begin_import
import|import
name|de
operator|.
name|jensd
operator|.
name|fx
operator|.
name|glyphs
operator|.
name|materialdesignicons
operator|.
name|MaterialDesignIcon
import|;
end_import

begin_class
DECL|class|LinkedFileViewModel
specifier|public
class|class
name|LinkedFileViewModel
extends|extends
name|AbstractEditorViewModel
block|{
DECL|field|linkedFile
specifier|private
specifier|final
name|LinkedFile
name|linkedFile
decl_stmt|;
DECL|field|downloadProgress
specifier|private
specifier|final
name|DoubleProperty
name|downloadProgress
init|=
operator|new
name|SimpleDoubleProperty
argument_list|(
operator|-
literal|1
argument_list|)
decl_stmt|;
DECL|field|downloadOngoing
specifier|private
specifier|final
name|BooleanProperty
name|downloadOngoing
init|=
operator|new
name|SimpleBooleanProperty
argument_list|(
literal|false
argument_list|)
decl_stmt|;
DECL|field|isAutomaticallyFound
specifier|private
specifier|final
name|BooleanProperty
name|isAutomaticallyFound
init|=
operator|new
name|SimpleBooleanProperty
argument_list|(
literal|false
argument_list|)
decl_stmt|;
DECL|method|LinkedFileViewModel (LinkedFile linkedFile)
specifier|public
name|LinkedFileViewModel
parameter_list|(
name|LinkedFile
name|linkedFile
parameter_list|)
block|{
name|this
operator|.
name|linkedFile
operator|=
name|linkedFile
expr_stmt|;
name|downloadOngoing
operator|.
name|bind
argument_list|(
name|downloadProgress
operator|.
name|greaterThanOrEqualTo
argument_list|(
literal|0
argument_list|)
operator|.
name|and
argument_list|(
name|downloadProgress
operator|.
name|lessThan
argument_list|(
literal|100
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|isAutomaticallyFound ()
specifier|public
name|boolean
name|isAutomaticallyFound
parameter_list|()
block|{
return|return
name|isAutomaticallyFound
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|isAutomaticallyFoundProperty ()
specifier|public
name|BooleanProperty
name|isAutomaticallyFoundProperty
parameter_list|()
block|{
return|return
name|isAutomaticallyFound
return|;
block|}
DECL|method|downloadOngoingProperty ()
specifier|public
name|BooleanProperty
name|downloadOngoingProperty
parameter_list|()
block|{
return|return
name|downloadOngoing
return|;
block|}
DECL|method|downloadProgressProperty ()
specifier|public
name|DoubleProperty
name|downloadProgressProperty
parameter_list|()
block|{
return|return
name|downloadProgress
return|;
block|}
DECL|method|getFile ()
specifier|public
name|LinkedFile
name|getFile
parameter_list|()
block|{
return|return
name|linkedFile
return|;
block|}
DECL|method|getLink ()
specifier|public
name|String
name|getLink
parameter_list|()
block|{
return|return
name|linkedFile
operator|.
name|getLink
argument_list|()
return|;
block|}
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|linkedFile
operator|.
name|getDescription
argument_list|()
return|;
block|}
DECL|method|findIn (List<Path> directories)
specifier|public
name|Optional
argument_list|<
name|Path
argument_list|>
name|findIn
parameter_list|(
name|List
argument_list|<
name|Path
argument_list|>
name|directories
parameter_list|)
block|{
return|return
name|linkedFile
operator|.
name|findIn
argument_list|(
name|directories
argument_list|)
return|;
block|}
comment|/**      * TODO: Be a bit smarter and try to infer correct icon, for example using {@link      * org.jabref.gui.externalfiletype.ExternalFileTypes#getExternalFileTypeByName(String)}      */
DECL|method|getTypeIcon ()
specifier|public
name|GlyphIcons
name|getTypeIcon
parameter_list|()
block|{
return|return
name|MaterialDesignIcon
operator|.
name|FILE_PDF
return|;
block|}
DECL|method|markAsAutomaticallyFound ()
specifier|public
name|void
name|markAsAutomaticallyFound
parameter_list|()
block|{
name|isAutomaticallyFound
operator|.
name|setValue
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|acceptAsLinked ()
specifier|public
name|void
name|acceptAsLinked
parameter_list|()
block|{
name|isAutomaticallyFound
operator|.
name|setValue
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|getObservables ()
specifier|public
name|Observable
index|[]
name|getObservables
parameter_list|()
block|{
return|return
operator|new
name|Observable
index|[]
block|{
name|this
operator|.
name|downloadProgress
block|,
name|this
operator|.
name|isAutomaticallyFound
block|}
return|;
block|}
block|}
end_class

end_unit

