begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.maintable
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|maintable
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TableView
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|util
operator|.
name|Callback
import|;
end_import

begin_class
DECL|class|SmartConstraintedResizePolicy
specifier|public
class|class
name|SmartConstraintedResizePolicy
implements|implements
name|Callback
argument_list|<
name|TableView
operator|.
name|ResizeFeatures
argument_list|,
name|Boolean
argument_list|>
block|{
DECL|field|isFirstRun
specifier|private
name|boolean
name|isFirstRun
init|=
literal|true
decl_stmt|;
DECL|field|basePolicy
specifier|private
name|Callback
argument_list|<
name|TableView
operator|.
name|ResizeFeatures
argument_list|,
name|Boolean
argument_list|>
name|basePolicy
init|=
name|TableView
operator|.
name|CONSTRAINED_RESIZE_POLICY
decl_stmt|;
annotation|@
name|Override
DECL|method|call (TableView.ResizeFeatures prop)
specifier|public
name|Boolean
name|call
parameter_list|(
name|TableView
operator|.
name|ResizeFeatures
name|prop
parameter_list|)
block|{
name|Boolean
name|result
init|=
name|basePolicy
operator|.
name|call
argument_list|(
name|prop
argument_list|)
decl_stmt|;
comment|// The CONSTRAINED_RESIZE_POLICY resizes all columns to the same width
comment|// We want to resize them to (almost) their preferred width
if|if
condition|(
name|isFirstRun
condition|)
block|{          }
name|isFirstRun
operator|=
name|isFirstRun
operator|&&
operator|!
name|result
expr_stmt|;
return|return
name|result
return|;
block|}
block|}
end_class

end_unit

