begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.entryeditor
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|entryeditor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleStringProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|StringProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|value
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|value
operator|.
name|ObservableValue
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ComboBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ListView
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ScrollPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|SelectionMode
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Tooltip
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|ColumnConstraints
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|GridPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Region
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|text
operator|.
name|Text
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|BasePanel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|fieldeditors
operator|.
name|FieldEditorFX
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|pdf
operator|.
name|FileAnnotationCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|pdf
operator|.
name|FileAnnotation
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|pdf
operator|.
name|FileAnnotationType
operator|.
name|NONE
import|;
end_import

begin_class
DECL|class|FxFileAnnotationTab
specifier|public
class|class
name|FxFileAnnotationTab
extends|extends
name|EntryEditorTab
block|{
DECL|field|panel
specifier|private
specifier|final
name|Region
name|panel
decl_stmt|;
DECL|field|parent
specifier|private
specifier|final
name|EntryEditor
name|parent
decl_stmt|;
DECL|field|frame
specifier|private
specifier|final
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|basePanel
specifier|private
specifier|final
name|BasePanel
name|basePanel
decl_stmt|;
DECL|field|cache
specifier|private
specifier|final
name|FileAnnotationCache
name|cache
decl_stmt|;
DECL|field|activeField
specifier|private
name|FieldEditorFX
name|activeField
decl_stmt|;
DECL|field|fileAnnotations
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|FileAnnotation
argument_list|>
argument_list|>
name|fileAnnotations
decl_stmt|;
DECL|field|fileAnnotationsList
specifier|private
name|ObservableList
argument_list|<
name|FileAnnotation
argument_list|>
name|fileAnnotationsList
init|=
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
decl_stmt|;
DECL|field|currentAuthor
specifier|private
name|StringProperty
name|currentAuthor
init|=
operator|new
name|SimpleStringProperty
argument_list|()
decl_stmt|;
DECL|field|currentPage
specifier|private
name|StringProperty
name|currentPage
init|=
operator|new
name|SimpleStringProperty
argument_list|()
decl_stmt|;
DECL|field|currentDate
specifier|private
name|StringProperty
name|currentDate
init|=
operator|new
name|SimpleStringProperty
argument_list|()
decl_stmt|;
DECL|field|currentContent
specifier|private
name|StringProperty
name|currentContent
init|=
operator|new
name|SimpleStringProperty
argument_list|()
decl_stmt|;
DECL|field|currentMarking
specifier|private
name|StringProperty
name|currentMarking
init|=
operator|new
name|SimpleStringProperty
argument_list|()
decl_stmt|;
DECL|method|FxFileAnnotationTab (JabRefFrame frame, BasePanel basePanel, EntryEditor parent, FileAnnotationCache cache)
specifier|public
name|FxFileAnnotationTab
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|,
name|BasePanel
name|basePanel
parameter_list|,
name|EntryEditor
name|parent
parameter_list|,
name|FileAnnotationCache
name|cache
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|this
operator|.
name|basePanel
operator|=
name|basePanel
expr_stmt|;
name|this
operator|.
name|cache
operator|=
name|cache
expr_stmt|;
name|fileAnnotations
operator|=
name|cache
operator|.
name|getFromCache
argument_list|(
name|parent
operator|.
name|getEntry
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|panel
operator|=
name|setupPanel
argument_list|()
expr_stmt|;
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"File annotations"
argument_list|)
argument_list|)
expr_stmt|;
name|setTooltip
argument_list|(
operator|new
name|Tooltip
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Show file annotations"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|setGraphic
argument_list|(
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|REQUIRED
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|setupPanel ()
specifier|private
name|Region
name|setupPanel
parameter_list|()
block|{
name|GridPane
name|gridPane
init|=
operator|new
name|GridPane
argument_list|()
decl_stmt|;
name|gridPane
operator|.
name|getStyleClass
argument_list|()
operator|.
name|add
argument_list|(
literal|"editorPane"
argument_list|)
expr_stmt|;
name|ColumnConstraints
name|leftSideConstraint
init|=
operator|new
name|ColumnConstraints
argument_list|()
decl_stmt|;
name|leftSideConstraint
operator|.
name|setPercentWidth
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|gridPane
operator|.
name|getColumnConstraints
argument_list|()
operator|.
name|addAll
argument_list|(
name|leftSideConstraint
argument_list|)
expr_stmt|;
name|gridPane
operator|.
name|addColumn
argument_list|(
literal|0
argument_list|,
name|setupLeftSide
argument_list|()
argument_list|)
expr_stmt|;
name|gridPane
operator|.
name|addColumn
argument_list|(
literal|1
argument_list|,
name|setupRightSide
argument_list|()
argument_list|)
expr_stmt|;
comment|// Warp everything in a scroll-pane
name|ScrollPane
name|scrollPane
init|=
operator|new
name|ScrollPane
argument_list|()
decl_stmt|;
name|scrollPane
operator|.
name|setHbarPolicy
argument_list|(
name|ScrollPane
operator|.
name|ScrollBarPolicy
operator|.
name|NEVER
argument_list|)
expr_stmt|;
name|scrollPane
operator|.
name|setVbarPolicy
argument_list|(
name|ScrollPane
operator|.
name|ScrollBarPolicy
operator|.
name|AS_NEEDED
argument_list|)
expr_stmt|;
name|scrollPane
operator|.
name|setContent
argument_list|(
name|gridPane
argument_list|)
expr_stmt|;
name|scrollPane
operator|.
name|setFitToWidth
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|scrollPane
operator|.
name|setFitToHeight
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|scrollPane
return|;
block|}
DECL|method|setupRightSide ()
specifier|private
name|GridPane
name|setupRightSide
parameter_list|()
block|{
name|GridPane
name|rightSide
init|=
operator|new
name|GridPane
argument_list|()
decl_stmt|;
name|rightSide
operator|.
name|addRow
argument_list|(
literal|0
argument_list|,
operator|new
name|Label
argument_list|(
literal|"Author"
argument_list|)
argument_list|)
expr_stmt|;
name|Text
name|annotationAuthor
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|annotationAuthor
operator|.
name|textProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|currentAuthor
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addColumn
argument_list|(
literal|1
argument_list|,
name|annotationAuthor
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addRow
argument_list|(
literal|1
argument_list|,
operator|new
name|Label
argument_list|(
literal|"Page"
argument_list|)
argument_list|)
expr_stmt|;
name|Text
name|annotationPage
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|annotationPage
operator|.
name|textProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|currentPage
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addColumn
argument_list|(
literal|1
argument_list|,
name|annotationPage
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addRow
argument_list|(
literal|2
argument_list|,
operator|new
name|Label
argument_list|(
literal|"Date"
argument_list|)
argument_list|)
expr_stmt|;
name|Text
name|annotationDate
init|=
operator|new
name|Text
argument_list|()
decl_stmt|;
name|annotationDate
operator|.
name|textProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|currentDate
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addColumn
argument_list|(
literal|1
argument_list|,
name|annotationDate
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addRow
argument_list|(
literal|3
argument_list|,
operator|new
name|Label
argument_list|(
literal|"Content"
argument_list|)
argument_list|)
expr_stmt|;
name|TextArea
name|annotationContent
init|=
operator|new
name|TextArea
argument_list|()
decl_stmt|;
name|annotationContent
operator|.
name|textProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|currentContent
argument_list|)
expr_stmt|;
name|annotationContent
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|annotationContent
operator|.
name|setWrapText
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addColumn
argument_list|(
literal|1
argument_list|,
name|annotationContent
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addRow
argument_list|(
literal|4
argument_list|,
operator|new
name|Label
argument_list|(
literal|"Marking"
argument_list|)
argument_list|)
expr_stmt|;
name|TextArea
name|markingArea
init|=
operator|new
name|TextArea
argument_list|()
decl_stmt|;
name|markingArea
operator|.
name|textProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|currentMarking
argument_list|)
expr_stmt|;
name|markingArea
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|markingArea
operator|.
name|setWrapText
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|rightSide
operator|.
name|addColumn
argument_list|(
literal|1
argument_list|,
name|markingArea
argument_list|)
expr_stmt|;
return|return
name|rightSide
return|;
block|}
DECL|method|getMarking (FileAnnotation annotation)
specifier|private
name|String
name|getMarking
parameter_list|(
name|FileAnnotation
name|annotation
parameter_list|)
block|{
if|if
condition|(
name|annotation
operator|.
name|hasLinkedAnnotation
argument_list|()
condition|)
block|{
return|return
name|getContentOrNA
argument_list|(
name|annotation
operator|.
name|getLinkedFileAnnotation
argument_list|()
operator|.
name|getContent
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|"N/A"
return|;
block|}
DECL|method|setupLeftSide ()
specifier|private
name|GridPane
name|setupLeftSide
parameter_list|()
block|{
name|GridPane
name|leftSide
init|=
operator|new
name|GridPane
argument_list|()
decl_stmt|;
name|leftSide
operator|.
name|addColumn
argument_list|(
literal|0
argument_list|,
operator|new
name|Label
argument_list|(
literal|"Filename"
argument_list|)
argument_list|)
expr_stmt|;
name|ComboBox
argument_list|<
name|String
argument_list|>
name|fileNameComboBox
init|=
name|createFileNameComboBox
argument_list|()
decl_stmt|;
name|GridPane
operator|.
name|setHgrow
argument_list|(
name|fileNameComboBox
argument_list|,
name|Priority
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|leftSide
operator|.
name|addRow
argument_list|(
literal|0
argument_list|,
name|fileNameComboBox
argument_list|)
expr_stmt|;
name|ListView
argument_list|<
name|FileAnnotation
argument_list|>
name|listView
init|=
name|createFileAnnotationsList
argument_list|(
name|fileNameComboBox
argument_list|)
decl_stmt|;
name|leftSide
operator|.
name|add
argument_list|(
name|listView
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|,
literal|2
argument_list|,
literal|1
argument_list|)
expr_stmt|;
return|return
name|leftSide
return|;
block|}
DECL|method|createFileAnnotationsList (ComboBox fileNameComboBox)
specifier|private
name|ListView
argument_list|<
name|FileAnnotation
argument_list|>
name|createFileAnnotationsList
parameter_list|(
name|ComboBox
name|fileNameComboBox
parameter_list|)
block|{
name|ListView
argument_list|<
name|FileAnnotation
argument_list|>
name|listView
init|=
operator|new
name|ListView
argument_list|<>
argument_list|()
decl_stmt|;
name|listView
operator|.
name|setItems
argument_list|(
name|fileAnnotationsList
argument_list|)
expr_stmt|;
name|listView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|setSelectionMode
argument_list|(
name|SelectionMode
operator|.
name|SINGLE
argument_list|)
expr_stmt|;
name|listView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|selectedItemProperty
argument_list|()
operator|.
name|addListener
argument_list|(
operator|new
name|ChangeListener
argument_list|<
name|FileAnnotation
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|changed
parameter_list|(
name|ObservableValue
argument_list|<
name|?
extends|extends
name|FileAnnotation
argument_list|>
name|ov
parameter_list|,
name|FileAnnotation
name|t
parameter_list|,
name|FileAnnotation
name|newFA
parameter_list|)
block|{
name|currentAuthor
operator|.
name|setValue
argument_list|(
name|listView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|currentPage
operator|.
name|setValue
argument_list|(
name|Integer
operator|.
name|toString
argument_list|(
name|listView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|getPage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|currentDate
operator|.
name|setValue
argument_list|(
name|listView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|getTimeModified
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|currentContent
operator|.
name|setValue
argument_list|(
name|getContentOrNA
argument_list|(
name|listView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|getContent
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|currentMarking
operator|.
name|setValue
argument_list|(
name|getMarking
argument_list|(
name|listView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|GridPane
operator|.
name|setHgrow
argument_list|(
name|listView
argument_list|,
name|Priority
operator|.
name|ALWAYS
argument_list|)
expr_stmt|;
name|listView
operator|.
name|setCellFactory
argument_list|(
operator|new
name|FileAnnotationListCellRenderer
argument_list|()
argument_list|)
expr_stmt|;
name|updateShownAnnotations
argument_list|(
name|fileAnnotations
operator|.
name|get
argument_list|(
name|fileNameComboBox
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|listView
return|;
block|}
DECL|method|getContentOrNA (String content)
specifier|private
name|String
name|getContentOrNA
parameter_list|(
name|String
name|content
parameter_list|)
block|{
if|if
condition|(
name|content
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|"N/A"
return|;
block|}
return|return
name|content
return|;
block|}
comment|/**      * Updates the list model to show the given notes without those with no content      *      * @param annotations value is the annotation name and the value is a pdfAnnotation object to add to the list model      */
DECL|method|updateShownAnnotations (List<FileAnnotation> annotations)
specifier|private
name|void
name|updateShownAnnotations
parameter_list|(
name|List
argument_list|<
name|FileAnnotation
argument_list|>
name|annotations
parameter_list|)
block|{
name|fileAnnotationsList
operator|.
name|clear
argument_list|()
expr_stmt|;
if|if
condition|(
name|annotations
operator|==
literal|null
operator|||
name|annotations
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|fileAnnotationsList
operator|.
name|add
argument_list|(
operator|new
name|FileAnnotation
argument_list|(
literal|""
argument_list|,
name|LocalDateTime
operator|.
name|now
argument_list|()
argument_list|,
literal|0
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"File has no attached annotations"
argument_list|)
argument_list|,
name|NONE
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Comparator
argument_list|<
name|FileAnnotation
argument_list|>
name|byPage
init|=
name|Comparator
operator|.
name|comparingInt
argument_list|(
name|FileAnnotation
operator|::
name|getPage
argument_list|)
decl_stmt|;
name|annotations
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|annotation
lambda|->
operator|(
literal|null
operator|!=
name|annotation
operator|.
name|getContent
argument_list|()
operator|)
argument_list|)
operator|.
name|sorted
argument_list|(
name|byPage
argument_list|)
operator|.
name|forEach
argument_list|(
name|annotation
lambda|->
name|fileAnnotationsList
operator|.
name|add
argument_list|(
operator|new
name|FileAnnotationViewModel
argument_list|(
name|annotation
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|createFileNameComboBox ()
specifier|private
name|ComboBox
argument_list|<
name|String
argument_list|>
name|createFileNameComboBox
parameter_list|()
block|{
name|ComboBox
argument_list|<
name|String
argument_list|>
name|comboBox
init|=
operator|new
name|ComboBox
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|(
name|fileAnnotations
operator|.
name|keySet
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|comboBox
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|selectFirst
argument_list|()
expr_stmt|;
return|return
name|comboBox
return|;
block|}
annotation|@
name|Override
DECL|method|shouldShow ()
specifier|public
name|boolean
name|shouldShow
parameter_list|()
block|{
return|return
name|parent
operator|.
name|getEntry
argument_list|()
operator|.
name|getField
argument_list|(
name|FieldName
operator|.
name|FILE
argument_list|)
operator|.
name|isPresent
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|requestFocus ()
specifier|public
name|void
name|requestFocus
parameter_list|()
block|{
if|if
condition|(
name|activeField
operator|!=
literal|null
condition|)
block|{
name|activeField
operator|.
name|requestFocus
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|initialize ()
specifier|protected
name|void
name|initialize
parameter_list|()
block|{
name|setContent
argument_list|(
name|panel
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

