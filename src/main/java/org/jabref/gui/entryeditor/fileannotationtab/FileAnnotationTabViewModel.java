begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.entryeditor.fileannotationtab
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|entryeditor
operator|.
name|fileannotationtab
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringJoiner
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractViewModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|ClipBoardManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|DefaultTaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileUpdateListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileUpdateMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|pdf
operator|.
name|FileAnnotationCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|OS
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|pdf
operator|.
name|FileAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
DECL|class|FileAnnotationTabViewModel
specifier|public
class|class
name|FileAnnotationTabViewModel
extends|extends
name|AbstractViewModel
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|FileAnnotationTabViewModel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|annotations
specifier|private
specifier|final
name|ListProperty
argument_list|<
name|FileAnnotationViewModel
argument_list|>
name|annotations
init|=
operator|new
name|SimpleListProperty
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|files
specifier|private
specifier|final
name|ListProperty
argument_list|<
name|Path
argument_list|>
name|files
init|=
operator|new
name|SimpleListProperty
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|currentAnnotation
specifier|private
specifier|final
name|ObjectProperty
argument_list|<
name|FileAnnotationViewModel
argument_list|>
name|currentAnnotation
init|=
operator|new
name|SimpleObjectProperty
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|annotaionEmpty
specifier|private
specifier|final
name|ObjectProperty
argument_list|<
name|Boolean
argument_list|>
name|annotaionEmpty
init|=
operator|new
name|SimpleObjectProperty
argument_list|<
name|Boolean
argument_list|>
argument_list|(
literal|null
argument_list|)
decl_stmt|;
DECL|field|cache
specifier|private
specifier|final
name|FileAnnotationCache
name|cache
decl_stmt|;
DECL|field|entry
specifier|private
specifier|final
name|BibEntry
name|entry
decl_stmt|;
DECL|field|fileAnnotations
specifier|private
name|Map
argument_list|<
name|Path
argument_list|,
name|List
argument_list|<
name|FileAnnotation
argument_list|>
argument_list|>
name|fileAnnotations
decl_stmt|;
DECL|field|currentFile
specifier|private
name|Path
name|currentFile
decl_stmt|;
DECL|field|fileMonitor
specifier|private
name|FileUpdateMonitor
name|fileMonitor
decl_stmt|;
DECL|field|fileListener
specifier|private
name|FileUpdateListener
name|fileListener
init|=
name|this
operator|::
name|reloadAnnotations
decl_stmt|;
DECL|method|FileAnnotationTabViewModel (FileAnnotationCache cache, BibEntry entry, FileUpdateMonitor fileMonitor)
specifier|public
name|FileAnnotationTabViewModel
parameter_list|(
name|FileAnnotationCache
name|cache
parameter_list|,
name|BibEntry
name|entry
parameter_list|,
name|FileUpdateMonitor
name|fileMonitor
parameter_list|)
block|{
name|this
operator|.
name|cache
operator|=
name|cache
expr_stmt|;
name|this
operator|.
name|entry
operator|=
name|entry
expr_stmt|;
name|this
operator|.
name|fileMonitor
operator|=
name|fileMonitor
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
block|}
DECL|method|initialize ()
specifier|private
name|void
name|initialize
parameter_list|()
block|{
name|fileAnnotations
operator|=
name|cache
operator|.
name|getFromCache
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|files
operator|.
name|setAll
argument_list|(
name|fileAnnotations
operator|.
name|keySet
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|currentAnnotationProperty ()
specifier|public
name|ObjectProperty
argument_list|<
name|FileAnnotationViewModel
argument_list|>
name|currentAnnotationProperty
parameter_list|()
block|{
return|return
name|currentAnnotation
return|;
block|}
DECL|method|isAnnotationsEmpty ()
specifier|public
name|boolean
name|isAnnotationsEmpty
parameter_list|()
block|{
return|return
name|annotations
operator|.
name|isEmpty
argument_list|()
return|;
block|}
DECL|method|annotationsProperty ()
specifier|public
name|ListProperty
argument_list|<
name|FileAnnotationViewModel
argument_list|>
name|annotationsProperty
parameter_list|()
block|{
return|return
name|annotations
return|;
block|}
DECL|method|filesProperty ()
specifier|public
name|ListProperty
argument_list|<
name|Path
argument_list|>
name|filesProperty
parameter_list|()
block|{
return|return
name|files
return|;
block|}
DECL|method|notifyNewSelectedAnnotation (FileAnnotationViewModel newAnnotation)
specifier|public
name|void
name|notifyNewSelectedAnnotation
parameter_list|(
name|FileAnnotationViewModel
name|newAnnotation
parameter_list|)
block|{
name|currentAnnotation
operator|.
name|set
argument_list|(
name|newAnnotation
argument_list|)
expr_stmt|;
block|}
DECL|method|notifyNewSelectedFile (Path newFile)
specifier|public
name|void
name|notifyNewSelectedFile
parameter_list|(
name|Path
name|newFile
parameter_list|)
block|{
name|fileMonitor
operator|.
name|removeListener
argument_list|(
name|currentFile
argument_list|,
name|fileListener
argument_list|)
expr_stmt|;
name|currentFile
operator|=
name|newFile
expr_stmt|;
name|Comparator
argument_list|<
name|FileAnnotation
argument_list|>
name|byPage
init|=
name|Comparator
operator|.
name|comparingInt
argument_list|(
name|FileAnnotation
operator|::
name|getPage
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|FileAnnotationViewModel
argument_list|>
name|newAnnotations
init|=
name|fileAnnotations
operator|.
name|getOrDefault
argument_list|(
name|currentFile
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|annotation
lambda|->
operator|(
literal|null
operator|!=
name|annotation
operator|.
name|getContent
argument_list|()
operator|)
argument_list|)
operator|.
name|sorted
argument_list|(
name|byPage
argument_list|)
operator|.
name|map
argument_list|(
name|FileAnnotationViewModel
operator|::
operator|new
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|annotations
operator|.
name|setAll
argument_list|(
name|newAnnotations
argument_list|)
expr_stmt|;
try|try
block|{
name|fileMonitor
operator|.
name|addListenerForFile
argument_list|(
name|currentFile
argument_list|,
name|fileListener
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Problem while watching file for changes "
operator|+
name|currentFile
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|reloadAnnotations ()
specifier|private
name|void
name|reloadAnnotations
parameter_list|()
block|{
comment|// Make sure to always run this in the JavaFX thread as the file monitor (and its notifications) live in a different thread
name|DefaultTaskExecutor
operator|.
name|runInJavaFXThread
argument_list|(
parameter_list|()
lambda|->
block|{
comment|// Remove annotations for the current entry and reinitialize annotation/cache
name|cache
operator|.
name|remove
argument_list|(
name|entry
argument_list|)
expr_stmt|;
name|initialize
argument_list|()
expr_stmt|;
comment|// Pretend that we just switched to the current file in order to refresh the display
name|notifyNewSelectedFile
argument_list|(
name|currentFile
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * Copies the meta and content information of the pdf annotation to the clipboard      */
DECL|method|copyCurrentAnnotation ()
specifier|public
name|void
name|copyCurrentAnnotation
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|==
name|getCurrentAnnotation
argument_list|()
condition|)
block|{
return|return;
block|}
name|StringJoiner
name|sj
init|=
operator|new
name|StringJoiner
argument_list|(
literal|","
operator|+
name|OS
operator|.
name|NEWLINE
argument_list|)
decl_stmt|;
name|sj
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Author"
argument_list|)
operator|+
literal|": "
operator|+
name|getCurrentAnnotation
argument_list|()
operator|.
name|getAuthor
argument_list|()
argument_list|)
expr_stmt|;
name|sj
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Date"
argument_list|)
operator|+
literal|": "
operator|+
name|getCurrentAnnotation
argument_list|()
operator|.
name|getDate
argument_list|()
argument_list|)
expr_stmt|;
name|sj
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Page"
argument_list|)
operator|+
literal|": "
operator|+
name|getCurrentAnnotation
argument_list|()
operator|.
name|getPage
argument_list|()
argument_list|)
expr_stmt|;
name|sj
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Content"
argument_list|)
operator|+
literal|": "
operator|+
name|getCurrentAnnotation
argument_list|()
operator|.
name|getContent
argument_list|()
argument_list|)
expr_stmt|;
name|sj
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Marking"
argument_list|)
operator|+
literal|": "
operator|+
name|getCurrentAnnotation
argument_list|()
operator|.
name|markingProperty
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|ClipBoardManager
argument_list|()
operator|.
name|setClipboardContents
argument_list|(
name|sj
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getCurrentAnnotation ()
specifier|private
name|FileAnnotationViewModel
name|getCurrentAnnotation
parameter_list|()
block|{
return|return
name|currentAnnotation
operator|.
name|get
argument_list|()
return|;
block|}
block|}
end_class

end_unit

