begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.entryeditor
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|entryeditor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ExecutionException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JEditorPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingWorker
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|HyperlinkEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|desktop
operator|.
name|JabRefDesktop
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
operator|.
name|MrDLibFetcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * This Component is displaying the recommendations received from Mr. DLib.  *  */
end_comment

begin_class
DECL|class|EntryEditorTabRelatedArticles
specifier|public
class|class
name|EntryEditorTabRelatedArticles
extends|extends
name|JEditorPane
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|EntryEditorTabRelatedArticles
operator|.
name|class
argument_list|)
decl_stmt|;
comment|//The entry the user selects in the table
DECL|field|selectedEntry
specifier|private
specifier|final
name|BibEntry
name|selectedEntry
decl_stmt|;
DECL|field|relatedArticles
specifier|private
name|List
argument_list|<
name|BibEntry
argument_list|>
name|relatedArticles
decl_stmt|;
DECL|field|onFocus
specifier|private
name|Boolean
name|onFocus
init|=
literal|true
decl_stmt|;
comment|/**      * Access related acticles delivered by Mr. DLib.      * @return the list of BibEntries, representing the related articles deliverd by MR. DLib      */
DECL|method|getRelatedArticles ()
specifier|public
name|List
argument_list|<
name|BibEntry
argument_list|>
name|getRelatedArticles
parameter_list|()
block|{
return|return
name|relatedArticles
return|;
block|}
comment|/**      * Takes the selected entry, runs a request to Mr. DLib and returns the recommendations as a JEditorPane      * @param The entry selected by the user      */
DECL|method|EntryEditorTabRelatedArticles (BibEntry selectedEntry)
specifier|public
name|EntryEditorTabRelatedArticles
parameter_list|(
name|BibEntry
name|selectedEntry
parameter_list|)
block|{
name|this
operator|.
name|selectedEntry
operator|=
name|selectedEntry
expr_stmt|;
name|this
operator|.
name|setContentType
argument_list|(
literal|"text/html"
argument_list|)
expr_stmt|;
name|this
operator|.
name|setEditable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|registerHyperlinkListener
argument_list|()
expr_stmt|;
name|setDefaultContent
argument_list|()
expr_stmt|;
block|}
comment|/**      * Takes a List of HTML snippets and sets it in the JEditorPane      * @param list of HTML Strings      */
DECL|method|setHtmlText (List<BibEntry> list)
specifier|public
name|void
name|setHtmlText
parameter_list|(
name|List
argument_list|<
name|BibEntry
argument_list|>
name|list
parameter_list|)
block|{
name|StringBuilder
name|htmlContent
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|URL
name|url
init|=
name|IconTheme
operator|.
name|getIconUrl
argument_list|(
literal|"mdlListIcon"
argument_list|)
decl_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<html><head><title></title></head><body bgcolor='#ffffff'>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<ul style='list-style-image:("
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|")'>"
argument_list|)
expr_stmt|;
for|for
control|(
name|BibEntry
name|bibEntry
range|:
name|list
control|)
block|{
if|if
condition|(
name|bibEntry
operator|!=
literal|null
condition|)
block|{
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<li style='margin: 5px'>"
argument_list|)
expr_stmt|;
name|bibEntry
operator|.
name|getField
argument_list|(
literal|"html_representation"
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|htmlContent
operator|::
name|append
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"</li>"
argument_list|)
expr_stmt|;
block|}
block|}
name|htmlContent
operator|.
name|append
argument_list|(
literal|"</ul>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<br><div style='margin-left: 5px'>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<a href='http://mr-dlib.org/information-for-users/information-about-mr-dlib-for-jabref-users/#'>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"What_is_Mr._DLib?"
argument_list|)
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"</a></div>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"</body></html>"
argument_list|)
expr_stmt|;
name|this
operator|.
name|setText
argument_list|(
name|htmlContent
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * While the fetcher gets the Recommendations from MR. DLib this content indicates      * that the search is in Progress      */
DECL|method|setDefaultContent ()
specifier|private
name|void
name|setDefaultContent
parameter_list|()
block|{
name|StringBuilder
name|htmlContent
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|URL
name|url
init|=
name|IconTheme
operator|.
name|getIconUrl
argument_list|(
literal|"mdlloading"
argument_list|)
decl_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<html><head><title></title></head><body bgcolor='#ffffff'><div align='center' style='font-size:20px'>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Loading_Recommendations_for"
argument_list|)
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<b>"
argument_list|)
expr_stmt|;
name|Optional
argument_list|<
name|String
argument_list|>
name|title
init|=
name|selectedEntry
operator|.
name|getLatexFreeField
argument_list|(
name|FieldName
operator|.
name|TITLE
argument_list|)
decl_stmt|;
if|if
condition|(
name|title
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|htmlContent
operator|.
name|append
argument_list|(
name|title
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|htmlContent
operator|.
name|append
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<div>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"<a href='http://mr-dlib.org/information-for-users/information-about-mr-dlib-for-jabref-users/#'>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"What_is_Mr._DLib?"
argument_list|)
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"</a></div>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"</b><br><img width=\"100\" height=\"100\" src=\""
operator|+
name|url
operator|+
literal|"\"></img></div>"
argument_list|)
expr_stmt|;
name|htmlContent
operator|.
name|append
argument_list|(
literal|"</body></html>"
argument_list|)
expr_stmt|;
name|this
operator|.
name|setText
argument_list|(
name|htmlContent
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Makes the Hyperlinks clickable. Opens the link destination in a Browsertab      */
DECL|method|registerHyperlinkListener ()
specifier|private
name|void
name|registerHyperlinkListener
parameter_list|()
block|{
name|this
operator|.
name|addHyperlinkListener
argument_list|(
name|e
lambda|->
block|{
try|try
block|{
if|if
condition|(
operator|(
name|e
operator|.
name|getURL
argument_list|()
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|e
operator|.
name|getEventType
argument_list|()
operator|==
name|HyperlinkEvent
operator|.
name|EventType
operator|.
name|ACTIVATED
operator|)
condition|)
block|{
operator|new
name|JabRefDesktop
argument_list|()
operator|.
name|openBrowser
argument_list|(
name|e
operator|.
name|getURL
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|e1
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
name|e1
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|focus ()
specifier|public
name|void
name|focus
parameter_list|()
block|{
if|if
condition|(
name|onFocus
condition|)
block|{
name|requestRecommendations
argument_list|()
expr_stmt|;
name|onFocus
operator|=
literal|false
expr_stmt|;
block|}
block|}
comment|/**      * Starts a Fetcher getting the recommendations form Mr. DLib      */
DECL|method|requestRecommendations ()
specifier|public
name|void
name|requestRecommendations
parameter_list|()
block|{
comment|//The Fetcher delivers the recommendations
name|MrDLibFetcherWorker
name|mdlFetcher
decl_stmt|;
try|try
block|{
name|mdlFetcher
operator|=
operator|new
name|MrDLibFetcherWorker
argument_list|(
name|selectedEntry
argument_list|)
expr_stmt|;
name|mdlFetcher
operator|.
name|addPropertyChangeListener
argument_list|(
name|evt
lambda|->
block|{
if|if
condition|(
name|evt
operator|.
name|getNewValue
argument_list|()
operator|.
name|equals
argument_list|(
name|SwingWorker
operator|.
name|StateValue
operator|.
name|DONE
argument_list|)
condition|)
block|{
try|try
block|{
name|relatedArticles
operator|=
name|mdlFetcher
operator|.
name|get
argument_list|()
expr_stmt|;
name|setHtmlText
argument_list|(
name|relatedArticles
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|InterruptedException
decl||
name|ExecutionException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|mdlFetcher
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Helper Class to initiate SwingWorker      */
DECL|class|MrDLibFetcherWorker
class|class
name|MrDLibFetcherWorker
extends|extends
name|SwingWorker
argument_list|<
name|List
argument_list|<
name|BibEntry
argument_list|>
argument_list|,
name|Void
argument_list|>
block|{
DECL|field|fetcher
specifier|private
specifier|final
name|MrDLibFetcher
name|fetcher
decl_stmt|;
DECL|field|prefs
specifier|private
specifier|final
name|JabRefPreferences
name|prefs
init|=
name|JabRefPreferences
operator|.
name|getInstance
argument_list|()
decl_stmt|;
DECL|field|selectedEntry
specifier|private
specifier|final
name|BibEntry
name|selectedEntry
decl_stmt|;
DECL|method|MrDLibFetcherWorker (BibEntry selectedEntry)
specifier|public
name|MrDLibFetcherWorker
parameter_list|(
name|BibEntry
name|selectedEntry
parameter_list|)
throws|throws
name|Exception
block|{
name|this
operator|.
name|selectedEntry
operator|=
name|selectedEntry
expr_stmt|;
name|fetcher
operator|=
operator|new
name|MrDLibFetcher
argument_list|(
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|LANGUAGE
argument_list|)
argument_list|,
name|Globals
operator|.
name|BUILD_INFO
operator|.
name|getVersion
argument_list|()
operator|.
name|getFullVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|doInBackground ()
specifier|protected
name|List
argument_list|<
name|BibEntry
argument_list|>
name|doInBackground
parameter_list|()
throws|throws
name|Exception
block|{
return|return
name|fetcher
operator|.
name|performSearch
argument_list|(
name|selectedEntry
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

