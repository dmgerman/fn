begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.entryeditor
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|entryeditor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Stream
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|BooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ReadOnlyListWrapper
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleBooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractViewModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BackgroundTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|TaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|texparser
operator|.
name|DefaultTexParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
operator|.
name|Citation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
operator|.
name|TexParserResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|PreferencesService
import|;
end_import

begin_class
DECL|class|LatexReferencesTabViewModel
specifier|public
class|class
name|LatexReferencesTabViewModel
extends|extends
name|AbstractViewModel
block|{
DECL|field|TEX_EXT
specifier|private
specifier|static
specifier|final
name|String
name|TEX_EXT
init|=
literal|".tex"
decl_stmt|;
DECL|field|databaseContext
specifier|private
specifier|final
name|BibDatabaseContext
name|databaseContext
decl_stmt|;
DECL|field|preferencesService
specifier|private
specifier|final
name|PreferencesService
name|preferencesService
decl_stmt|;
DECL|field|taskExecutor
specifier|private
specifier|final
name|TaskExecutor
name|taskExecutor
decl_stmt|;
DECL|field|entry
specifier|private
specifier|final
name|ObjectProperty
argument_list|<
name|BibEntry
argument_list|>
name|entry
decl_stmt|;
DECL|field|citationList
specifier|private
specifier|final
name|ObservableList
argument_list|<
name|Citation
argument_list|>
name|citationList
decl_stmt|;
DECL|field|searchInProgress
specifier|private
specifier|final
name|BooleanProperty
name|searchInProgress
decl_stmt|;
DECL|field|successfulSearch
specifier|private
specifier|final
name|BooleanProperty
name|successfulSearch
decl_stmt|;
DECL|method|LatexReferencesTabViewModel (BibDatabaseContext databaseContext, PreferencesService preferencesService, TaskExecutor taskExecutor)
specifier|public
name|LatexReferencesTabViewModel
parameter_list|(
name|BibDatabaseContext
name|databaseContext
parameter_list|,
name|PreferencesService
name|preferencesService
parameter_list|,
name|TaskExecutor
name|taskExecutor
parameter_list|)
block|{
name|this
operator|.
name|databaseContext
operator|=
name|databaseContext
expr_stmt|;
name|this
operator|.
name|preferencesService
operator|=
name|preferencesService
expr_stmt|;
name|this
operator|.
name|taskExecutor
operator|=
name|taskExecutor
expr_stmt|;
name|this
operator|.
name|entry
operator|=
operator|new
name|SimpleObjectProperty
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|citationList
operator|=
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
expr_stmt|;
name|this
operator|.
name|searchInProgress
operator|=
operator|new
name|SimpleBooleanProperty
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|successfulSearch
operator|=
operator|new
name|SimpleBooleanProperty
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|initSearch ()
specifier|public
name|void
name|initSearch
parameter_list|()
block|{
name|BackgroundTask
operator|.
name|wrap
argument_list|(
name|this
operator|::
name|searchAndParse
argument_list|)
operator|.
name|onRunning
argument_list|(
parameter_list|()
lambda|->
block|{
name|searchInProgress
operator|.
name|set
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|successfulSearch
operator|.
name|set
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
argument_list|)
operator|.
name|onFinished
argument_list|(
parameter_list|()
lambda|->
name|searchInProgress
operator|.
name|set
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|onSuccess
argument_list|(
name|successfulSearch
operator|::
name|set
argument_list|)
operator|.
name|executeWith
argument_list|(
name|taskExecutor
argument_list|)
expr_stmt|;
block|}
DECL|method|searchAndParse ()
specifier|private
name|boolean
name|searchAndParse
parameter_list|()
throws|throws
name|IOException
block|{
name|Path
name|directory
init|=
name|databaseContext
operator|.
name|getMetaData
argument_list|()
operator|.
name|getLaTexFileDirectory
argument_list|(
name|preferencesService
operator|.
name|getUser
argument_list|()
argument_list|)
operator|.
name|orElse
argument_list|(
name|preferencesService
operator|.
name|getWorkingDir
argument_list|()
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Path
argument_list|>
name|texFiles
decl_stmt|;
try|try
init|(
name|Stream
argument_list|<
name|Path
argument_list|>
name|filesStream
init|=
name|Files
operator|.
name|walk
argument_list|(
name|directory
argument_list|)
init|)
block|{
name|texFiles
operator|=
name|filesStream
operator|.
name|filter
argument_list|(
name|path
lambda|->
name|path
operator|.
name|toFile
argument_list|()
operator|.
name|isFile
argument_list|()
operator|&&
name|path
operator|.
name|toString
argument_list|()
operator|.
name|endsWith
argument_list|(
name|TEX_EXT
argument_list|)
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"An error occurred while searching files: "
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|TexParserResult
name|texParserResult
init|=
operator|new
name|DefaultTexParser
argument_list|()
operator|.
name|parse
argument_list|(
name|texFiles
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|Citation
argument_list|>
name|citationCollection
init|=
name|texParserResult
operator|.
name|getCitationsByKey
argument_list|(
name|entry
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|citationList
operator|.
name|setAll
argument_list|(
name|citationCollection
argument_list|)
expr_stmt|;
return|return
operator|!
name|citationCollection
operator|.
name|isEmpty
argument_list|()
return|;
block|}
DECL|method|setEntry (BibEntry entry)
specifier|public
name|void
name|setEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|this
operator|.
name|entry
operator|.
name|set
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
DECL|method|getCitationList ()
specifier|public
name|ObservableList
argument_list|<
name|Citation
argument_list|>
name|getCitationList
parameter_list|()
block|{
return|return
operator|new
name|ReadOnlyListWrapper
argument_list|<>
argument_list|(
name|citationList
argument_list|)
return|;
block|}
DECL|method|searchInProgressProperty ()
specifier|public
name|BooleanProperty
name|searchInProgressProperty
parameter_list|()
block|{
return|return
name|searchInProgress
return|;
block|}
DECL|method|successfulSearchProperty ()
specifier|public
name|BooleanProperty
name|successfulSearchProperty
parameter_list|()
block|{
return|return
name|successfulSearch
return|;
block|}
DECL|method|shouldShow ()
specifier|public
name|boolean
name|shouldShow
parameter_list|()
block|{
return|return
name|preferencesService
operator|.
name|getEntryEditorPreferences
argument_list|()
operator|.
name|shouldShowLatexReferencesTab
argument_list|()
return|;
block|}
block|}
end_class

end_unit

