begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Parent
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|Stage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|com
operator|.
name|airhacks
operator|.
name|afterburner
operator|.
name|views
operator|.
name|FXMLView
import|;
end_import

begin_class
DECL|class|AbstractView
specifier|public
class|class
name|AbstractView
extends|extends
name|FXMLView
block|{
DECL|method|AbstractView ()
specifier|public
name|AbstractView
parameter_list|()
block|{
name|this
argument_list|(
name|f
lambda|->
literal|null
argument_list|)
expr_stmt|;
block|}
DECL|method|AbstractView (Function<String, Object> injectionContext)
specifier|public
name|AbstractView
parameter_list|(
name|Function
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|injectionContext
parameter_list|)
block|{
name|super
argument_list|(
name|injectionContext
argument_list|)
expr_stmt|;
comment|// Set resource bundle to internal localizations
name|bundle
operator|=
name|Localization
operator|.
name|getMessages
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getView ()
specifier|public
name|Parent
name|getView
parameter_list|()
block|{
name|Parent
name|view
init|=
name|super
operator|.
name|getView
argument_list|()
decl_stmt|;
comment|// Add our base css file
name|view
operator|.
name|getStylesheets
argument_list|()
operator|.
name|add
argument_list|(
literal|0
argument_list|,
name|AbstractDialogView
operator|.
name|class
operator|.
name|getResource
argument_list|(
literal|"Main.css"
argument_list|)
operator|.
name|toExternalForm
argument_list|()
argument_list|)
expr_stmt|;
comment|// Notify controller about the stage, where it is displayed
name|view
operator|.
name|sceneProperty
argument_list|()
operator|.
name|addListener
argument_list|(
parameter_list|(
name|observable
parameter_list|,
name|oldValue
parameter_list|,
name|newValue
parameter_list|)
lambda|->
block|{
if|if
condition|(
name|newValue
operator|!=
literal|null
operator|&&
name|newValue
operator|.
name|getWindow
argument_list|()
operator|instanceof
name|Stage
condition|)
block|{
name|Stage
name|stage
init|=
operator|(
name|Stage
operator|)
name|newValue
operator|.
name|getWindow
argument_list|()
decl_stmt|;
if|if
condition|(
name|stage
operator|!=
literal|null
condition|)
block|{
name|getController
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|controller
lambda|->
name|controller
operator|.
name|setStage
argument_list|(
name|stage
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|view
return|;
block|}
DECL|method|getController ()
specifier|private
name|Optional
argument_list|<
name|AbstractController
argument_list|>
name|getController
parameter_list|()
block|{
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|presenterProperty
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|map
argument_list|(
name|presenter
lambda|->
operator|(
name|AbstractController
operator|)
name|presenter
argument_list|)
return|;
block|}
block|}
end_class

end_unit

