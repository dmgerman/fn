begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.externalfiletype
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|FXML
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonType
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TableColumn
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TableView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|icon
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|icon
operator|.
name|JabRefIcon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BaseDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BindingsHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|ValueTableCellFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|com
operator|.
name|airhacks
operator|.
name|afterburner
operator|.
name|views
operator|.
name|ViewLoader
import|;
end_import

begin_comment
comment|/**  * Editor for external file types.  */
end_comment

begin_class
DECL|class|CustomizeExternalFileTypesDialog
specifier|public
class|class
name|CustomizeExternalFileTypesDialog
extends|extends
name|BaseDialog
argument_list|<
name|Void
argument_list|>
block|{
DECL|field|fileTypesTableIconColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|ExternalFileType
argument_list|,
name|JabRefIcon
argument_list|>
name|fileTypesTableIconColumn
decl_stmt|;
DECL|field|fileTypesTableNameColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|ExternalFileType
argument_list|,
name|String
argument_list|>
name|fileTypesTableNameColumn
decl_stmt|;
DECL|field|fileTypesTableExtensionColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|ExternalFileType
argument_list|,
name|String
argument_list|>
name|fileTypesTableExtensionColumn
decl_stmt|;
DECL|field|fileTypesTableTypeColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|ExternalFileType
argument_list|,
name|String
argument_list|>
name|fileTypesTableTypeColumn
decl_stmt|;
DECL|field|fileTypesTableApplicationColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|ExternalFileType
argument_list|,
name|String
argument_list|>
name|fileTypesTableApplicationColumn
decl_stmt|;
DECL|field|fileTypesTableEditColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|ExternalFileType
argument_list|,
name|Boolean
argument_list|>
name|fileTypesTableEditColumn
decl_stmt|;
DECL|field|fileTypesTableDeleteColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|ExternalFileType
argument_list|,
name|Boolean
argument_list|>
name|fileTypesTableDeleteColumn
decl_stmt|;
DECL|field|fileTypesTable
annotation|@
name|FXML
specifier|private
name|TableView
argument_list|<
name|ExternalFileType
argument_list|>
name|fileTypesTable
decl_stmt|;
DECL|field|viewModel
specifier|private
name|CustomizeExternalFileTypesViewModel
name|viewModel
decl_stmt|;
DECL|method|CustomizeExternalFileTypesDialog ()
specifier|public
name|CustomizeExternalFileTypesDialog
parameter_list|()
block|{
name|this
operator|.
name|setTitle
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Manage external file types"
argument_list|)
argument_list|)
expr_stmt|;
name|ViewLoader
operator|.
name|view
argument_list|(
name|this
argument_list|)
operator|.
name|load
argument_list|()
operator|.
name|setAsDialogPane
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|setResultConverter
argument_list|(
name|button
lambda|->
block|{
if|if
condition|(
name|button
operator|==
name|ButtonType
operator|.
name|OK
condition|)
block|{
name|viewModel
operator|.
name|storeSettings
argument_list|()
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|FXML
DECL|method|initialize ()
specifier|public
name|void
name|initialize
parameter_list|()
block|{
name|viewModel
operator|=
operator|new
name|CustomizeExternalFileTypesViewModel
argument_list|()
expr_stmt|;
name|fileTypesTable
operator|.
name|setItems
argument_list|(
name|viewModel
operator|.
name|getFileTypes
argument_list|()
argument_list|)
expr_stmt|;
name|fileTypesTableIconColumn
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
name|BindingsHelper
operator|.
name|constantOf
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getIcon
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fileTypesTableNameColumn
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
name|BindingsHelper
operator|.
name|constantOf
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fileTypesTableExtensionColumn
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
name|BindingsHelper
operator|.
name|constantOf
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getExtension
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fileTypesTableTypeColumn
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
name|BindingsHelper
operator|.
name|constantOf
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getMimeType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fileTypesTableApplicationColumn
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
name|BindingsHelper
operator|.
name|constantOf
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getOpenWithApplication
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|fileTypesTableEditColumn
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
name|BindingsHelper
operator|.
name|constantOf
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|fileTypesTableDeleteColumn
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
name|BindingsHelper
operator|.
name|constantOf
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
operator|new
name|ValueTableCellFactory
argument_list|<
name|ExternalFileType
argument_list|,
name|JabRefIcon
argument_list|>
argument_list|()
operator|.
name|withGraphic
argument_list|(
name|JabRefIcon
operator|::
name|getGraphicNode
argument_list|)
operator|.
name|install
argument_list|(
name|fileTypesTableIconColumn
argument_list|)
expr_stmt|;
operator|new
name|ValueTableCellFactory
argument_list|<
name|ExternalFileType
argument_list|,
name|Boolean
argument_list|>
argument_list|()
operator|.
name|withGraphic
argument_list|(
name|none
lambda|->
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|EDIT
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
operator|.
name|withOnMouseClickedEvent
argument_list|(
parameter_list|(
name|type
parameter_list|,
name|none
parameter_list|)
lambda|->
name|event
lambda|->
name|viewModel
operator|.
name|edit
argument_list|(
name|type
argument_list|)
argument_list|)
operator|.
name|install
argument_list|(
name|fileTypesTableEditColumn
argument_list|)
expr_stmt|;
operator|new
name|ValueTableCellFactory
argument_list|<
name|ExternalFileType
argument_list|,
name|Boolean
argument_list|>
argument_list|()
operator|.
name|withGraphic
argument_list|(
name|none
lambda|->
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|REMOVE
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
operator|.
name|withOnMouseClickedEvent
argument_list|(
parameter_list|(
name|type
parameter_list|,
name|none
parameter_list|)
lambda|->
name|event
lambda|->
name|viewModel
operator|.
name|remove
argument_list|(
name|type
argument_list|)
argument_list|)
operator|.
name|install
argument_list|(
name|fileTypesTableDeleteColumn
argument_list|)
expr_stmt|;
block|}
annotation|@
name|FXML
DECL|method|addNewType ()
specifier|private
name|void
name|addNewType
parameter_list|()
block|{
name|viewModel
operator|.
name|addNewType
argument_list|()
expr_stmt|;
name|fileTypesTable
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|selectLast
argument_list|()
expr_stmt|;
name|fileTypesTable
operator|.
name|scrollTo
argument_list|(
name|viewModel
operator|.
name|getFileTypes
argument_list|()
operator|.
name|size
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|FXML
DECL|method|resetToDefault ()
specifier|private
name|void
name|resetToDefault
parameter_list|()
block|{
name|viewModel
operator|.
name|resetToDefaults
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

