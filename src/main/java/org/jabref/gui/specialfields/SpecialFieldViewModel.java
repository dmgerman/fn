begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.specialfields
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|specialfields
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Icon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|undo
operator|.
name|UndoManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|StandardActions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|icon
operator|.
name|JabRefIcon
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
operator|.
name|UndoableFieldChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|specialfields
operator|.
name|SpecialFieldsUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|FieldChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|specialfields
operator|.
name|SpecialField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|specialfields
operator|.
name|SpecialFieldValue
import|;
end_import

begin_class
DECL|class|SpecialFieldViewModel
specifier|public
class|class
name|SpecialFieldViewModel
block|{
DECL|field|field
specifier|private
specifier|final
name|SpecialField
name|field
decl_stmt|;
DECL|field|undoManager
specifier|private
name|UndoManager
name|undoManager
decl_stmt|;
DECL|method|SpecialFieldViewModel (SpecialField field, UndoManager undoManager)
specifier|public
name|SpecialFieldViewModel
parameter_list|(
name|SpecialField
name|field
parameter_list|,
name|UndoManager
name|undoManager
parameter_list|)
block|{
name|this
operator|.
name|field
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|this
operator|.
name|undoManager
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|undoManager
argument_list|)
expr_stmt|;
block|}
DECL|method|getField ()
specifier|public
name|SpecialField
name|getField
parameter_list|()
block|{
return|return
name|field
return|;
block|}
DECL|method|getSpecialFieldAction (SpecialFieldValue value, JabRefFrame frame)
specifier|public
name|SpecialFieldAction
name|getSpecialFieldAction
parameter_list|(
name|SpecialFieldValue
name|value
parameter_list|,
name|JabRefFrame
name|frame
parameter_list|)
block|{
return|return
operator|new
name|SpecialFieldAction
argument_list|(
name|frame
argument_list|,
name|field
argument_list|,
name|value
operator|.
name|getFieldValue
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
argument_list|,
comment|// if field contains only one value, it has to be nulled
comment|// otherwise, another setting does not empty the field
name|field
operator|.
name|getValues
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|1
argument_list|,
name|getLocalization
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getRepresentingIcon ()
specifier|public
name|Icon
name|getRepresentingIcon
parameter_list|()
block|{
return|return
name|getAction
argument_list|()
operator|.
name|getIcon
argument_list|()
operator|.
name|map
argument_list|(
name|JabRefIcon
operator|::
name|getSmallIcon
argument_list|)
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|getIcon ()
specifier|public
name|JabRefIcon
name|getIcon
parameter_list|()
block|{
return|return
name|getAction
argument_list|()
operator|.
name|getIcon
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
return|;
block|}
DECL|method|getLocalization ()
specifier|public
name|String
name|getLocalization
parameter_list|()
block|{
return|return
name|getAction
argument_list|()
operator|.
name|getText
argument_list|()
return|;
block|}
DECL|method|getAction ()
specifier|public
name|Action
name|getAction
parameter_list|()
block|{
switch|switch
condition|(
name|field
condition|)
block|{
case|case
name|PRINTED
case|:
return|return
name|StandardActions
operator|.
name|PRINTED
return|;
case|case
name|PRIORITY
case|:
return|return
name|StandardActions
operator|.
name|PRIORITY
return|;
case|case
name|QUALITY
case|:
return|return
name|StandardActions
operator|.
name|QUALITY
return|;
case|case
name|RANKING
case|:
return|return
name|StandardActions
operator|.
name|RANKING
return|;
case|case
name|READ_STATUS
case|:
return|return
name|StandardActions
operator|.
name|READ_STATUS
return|;
case|case
name|RELEVANCE
case|:
return|return
name|StandardActions
operator|.
name|RELEVANCE
return|;
default|default:
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"There is no icon mapping for special field "
operator|+
name|field
argument_list|)
throw|;
block|}
block|}
DECL|method|getEmptyIcon ()
specifier|public
name|JabRefIcon
name|getEmptyIcon
parameter_list|()
block|{
return|return
name|getIcon
argument_list|()
return|;
block|}
DECL|method|getValues ()
specifier|public
name|List
argument_list|<
name|SpecialFieldValueViewModel
argument_list|>
name|getValues
parameter_list|()
block|{
return|return
name|field
operator|.
name|getValues
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|SpecialFieldValueViewModel
operator|::
operator|new
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
DECL|method|setSpecialFieldValue (BibEntry be, SpecialFieldValue value)
specifier|public
name|void
name|setSpecialFieldValue
parameter_list|(
name|BibEntry
name|be
parameter_list|,
name|SpecialFieldValue
name|value
parameter_list|)
block|{
name|List
argument_list|<
name|FieldChange
argument_list|>
name|changes
init|=
name|SpecialFieldsUtils
operator|.
name|updateField
argument_list|(
name|getField
argument_list|()
argument_list|,
name|value
operator|.
name|getFieldValue
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
argument_list|,
name|be
argument_list|,
name|getField
argument_list|()
operator|.
name|isSingleValueField
argument_list|()
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|isKeywordSyncEnabled
argument_list|()
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getKeywordDelimiter
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|FieldChange
name|change
range|:
name|changes
control|)
block|{
name|undoManager
operator|.
name|addEdit
argument_list|(
operator|new
name|UndoableFieldChange
argument_list|(
name|change
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|toggle (BibEntry entry)
specifier|public
name|void
name|toggle
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|setSpecialFieldValue
argument_list|(
name|entry
argument_list|,
name|getField
argument_list|()
operator|.
name|getValues
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

