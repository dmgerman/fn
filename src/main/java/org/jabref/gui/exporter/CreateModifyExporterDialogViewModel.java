begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.exporter
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|exporter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleStringProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|StringProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractViewModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileDialogConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|SavePreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|TemplateExporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|JournalAbbreviationLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|LayoutFormatterPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|StandardFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|PreferencesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  *  * This view model can be used both for "add exporter" and "modify exporter" functionalities.  * It takes an optional exporter which is empty for "add exporter," and takes the selected exporter  * for "modify exporter."  It returns an optional exporter which empty if an invalid or no exporter is  * created, and otherwise contains the exporter to be added or that is modified.  *  */
end_comment

begin_class
DECL|class|CreateModifyExporterDialogViewModel
specifier|public
class|class
name|CreateModifyExporterDialogViewModel
extends|extends
name|AbstractViewModel
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CreateModifyExporterDialogViewModel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|PreferencesService
name|preferences
decl_stmt|;
DECL|field|name
specifier|private
specifier|final
name|StringProperty
name|name
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|layoutFile
specifier|private
specifier|final
name|StringProperty
name|layoutFile
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|extension
specifier|private
specifier|final
name|StringProperty
name|extension
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|loader
specifier|private
specifier|final
name|JournalAbbreviationLoader
name|loader
decl_stmt|;
DECL|method|CreateModifyExporterDialogViewModel (ExporterViewModel exporter, DialogService dialogService, PreferencesService preferences, JournalAbbreviationLoader loader)
specifier|public
name|CreateModifyExporterDialogViewModel
parameter_list|(
name|ExporterViewModel
name|exporter
parameter_list|,
name|DialogService
name|dialogService
parameter_list|,
name|PreferencesService
name|preferences
parameter_list|,
name|JournalAbbreviationLoader
name|loader
parameter_list|)
block|{
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
name|this
operator|.
name|loader
operator|=
name|loader
expr_stmt|;
comment|//Set text of each of the boxes
if|if
condition|(
name|exporter
operator|!=
literal|null
condition|)
block|{
name|name
operator|.
name|setValue
argument_list|(
name|exporter
operator|.
name|name
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|layoutFile
operator|.
name|setValue
argument_list|(
name|exporter
operator|.
name|layoutFileName
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|extension
operator|.
name|setValue
argument_list|(
name|exporter
operator|.
name|extension
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|saveExporter ()
specifier|public
name|ExporterViewModel
name|saveExporter
parameter_list|()
block|{
name|Path
name|layoutFileDir
init|=
name|Paths
operator|.
name|get
argument_list|(
name|layoutFile
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|getParent
argument_list|()
decl_stmt|;
if|if
condition|(
name|layoutFileDir
operator|!=
literal|null
condition|)
block|{
name|String
name|layoutFileDirString
init|=
name|layoutFileDir
operator|.
name|toString
argument_list|()
decl_stmt|;
name|preferences
operator|.
name|setExportWorkingDirectory
argument_list|(
name|layoutFileDirString
argument_list|)
expr_stmt|;
block|}
comment|// Check that there are no empty strings.
if|if
condition|(
name|layoutFile
operator|.
name|get
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|name
operator|.
name|get
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
name|extension
operator|.
name|get
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
operator|!
name|layoutFile
operator|.
name|get
argument_list|()
operator|.
name|endsWith
argument_list|(
literal|".layout"
argument_list|)
condition|)
block|{
name|LOGGER
operator|.
name|info
argument_list|(
literal|"One of the fields is empty or invalid!"
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
comment|// Create a new exporter to be returned to ExportCustomizationDialogViewModel, which requested it
name|LayoutFormatterPreferences
name|layoutPreferences
init|=
name|preferences
operator|.
name|getLayoutFormatterPreferences
argument_list|(
name|loader
argument_list|)
decl_stmt|;
name|SavePreferences
name|savePreferences
init|=
name|preferences
operator|.
name|loadForExportFromPreferences
argument_list|()
decl_stmt|;
name|TemplateExporter
name|format
init|=
operator|new
name|TemplateExporter
argument_list|(
name|name
operator|.
name|get
argument_list|()
argument_list|,
name|layoutFile
operator|.
name|get
argument_list|()
argument_list|,
name|extension
operator|.
name|get
argument_list|()
argument_list|,
name|layoutPreferences
argument_list|,
name|savePreferences
argument_list|)
decl_stmt|;
name|format
operator|.
name|setCustomExport
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
operator|new
name|ExporterViewModel
argument_list|(
name|format
argument_list|)
return|;
block|}
DECL|method|getExportWorkingDirectory ()
specifier|public
name|String
name|getExportWorkingDirectory
parameter_list|()
block|{
return|return
name|preferences
operator|.
name|getExportWorkingDirectory
argument_list|()
return|;
block|}
DECL|method|browse ()
specifier|public
name|void
name|browse
parameter_list|()
block|{
name|FileDialogConfiguration
name|fileDialogConfiguration
init|=
operator|new
name|FileDialogConfiguration
operator|.
name|Builder
argument_list|()
operator|.
name|addExtensionFilter
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Custom layout file"
argument_list|)
argument_list|,
name|StandardFileType
operator|.
name|LAYOUT
argument_list|)
operator|.
name|withDefaultExtension
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Custom layout file"
argument_list|)
argument_list|,
name|StandardFileType
operator|.
name|LAYOUT
argument_list|)
operator|.
name|withInitialDirectory
argument_list|(
name|getExportWorkingDirectory
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dialogService
operator|.
name|showFileOpenDialog
argument_list|(
name|fileDialogConfiguration
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|f
lambda|->
name|layoutFile
operator|.
name|set
argument_list|(
name|f
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getName ()
specifier|public
name|StringProperty
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
DECL|method|getLayoutFileName ()
specifier|public
name|StringProperty
name|getLayoutFileName
parameter_list|()
block|{
return|return
name|layoutFile
return|;
block|}
DECL|method|getExtension ()
specifier|public
name|StringProperty
name|getExtension
parameter_list|()
block|{
return|return
name|extension
return|;
block|}
block|}
end_class

end_unit

