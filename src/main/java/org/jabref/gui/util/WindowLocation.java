begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.util
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Frame
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GraphicsDevice
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|GraphicsEnvironment
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Point
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ComponentAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ComponentEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_comment
comment|/**  * Restores and saves the position of non-modal windows inside the JabRef preferences.  *  * Includes multi-monitor support.  * If a windows is placed on another monitor than the main one, it tries to restore that position afterwards.  * If the stored position in a multi-monitor setup is not available anymore, it places the window on an equivalent position on the main monitor.  */
end_comment

begin_class
DECL|class|WindowLocation
specifier|public
class|class
name|WindowLocation
block|{
DECL|field|posXKey
specifier|private
specifier|final
name|String
name|posXKey
decl_stmt|;
DECL|field|posYKey
specifier|private
specifier|final
name|String
name|posYKey
decl_stmt|;
DECL|field|sizeXKey
specifier|private
specifier|final
name|String
name|sizeXKey
decl_stmt|;
DECL|field|sizeYKey
specifier|private
specifier|final
name|String
name|sizeYKey
decl_stmt|;
DECL|field|window
specifier|private
specifier|final
name|Window
name|window
decl_stmt|;
DECL|method|WindowLocation (Window window, String posXKey, String posYKey, String sizeXKey, String sizeYKey)
specifier|public
name|WindowLocation
parameter_list|(
name|Window
name|window
parameter_list|,
name|String
name|posXKey
parameter_list|,
name|String
name|posYKey
parameter_list|,
name|String
name|sizeXKey
parameter_list|,
name|String
name|sizeYKey
parameter_list|)
block|{
name|this
operator|.
name|window
operator|=
name|window
expr_stmt|;
name|this
operator|.
name|posXKey
operator|=
name|posXKey
expr_stmt|;
name|this
operator|.
name|posYKey
operator|=
name|posYKey
expr_stmt|;
name|this
operator|.
name|sizeXKey
operator|=
name|sizeXKey
expr_stmt|;
name|this
operator|.
name|sizeYKey
operator|=
name|sizeYKey
expr_stmt|;
comment|// set up a ComponentListener that saves the last size and position of the dialog
name|window
operator|.
name|addComponentListener
argument_list|(
operator|new
name|ComponentAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|componentResized
parameter_list|(
name|ComponentEvent
name|e
parameter_list|)
block|{
name|storeCurrentWindowLocation
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|componentMoved
parameter_list|(
name|ComponentEvent
name|e
parameter_list|)
block|{
name|storeCurrentWindowLocation
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|displayWindowAtStoredLocation ()
specifier|public
name|void
name|displayWindowAtStoredLocation
parameter_list|()
block|{
name|WindowPosition
name|storedPosition
init|=
name|getStoredLocation
argument_list|()
decl_stmt|;
comment|// preference values are wrong/not in multi-monitor setup anymore
if|if
condition|(
operator|!
name|isDisplayable
argument_list|(
name|storedPosition
argument_list|)
condition|)
block|{
comment|// adapt position to be inside available boundaries
name|storedPosition
operator|=
name|adaptPosition
argument_list|(
name|storedPosition
argument_list|)
expr_stmt|;
block|}
name|setWindowLocation
argument_list|(
name|storedPosition
argument_list|)
expr_stmt|;
block|}
DECL|method|storeCurrentWindowLocation ()
specifier|public
name|void
name|storeCurrentWindowLocation
parameter_list|()
block|{
comment|// maximizing is handled explicitely
if|if
condition|(
name|window
operator|instanceof
name|Frame
condition|)
block|{
name|Frame
name|frame
init|=
operator|(
name|Frame
operator|)
name|window
decl_stmt|;
if|if
condition|(
name|frame
operator|.
name|getExtendedState
argument_list|()
operator|==
name|Frame
operator|.
name|MAXIMIZED_BOTH
condition|)
block|{
return|return;
block|}
block|}
name|Point
name|location
init|=
name|window
operator|.
name|getLocation
argument_list|()
decl_stmt|;
name|Dimension
name|dimensions
init|=
name|window
operator|.
name|getSize
argument_list|()
decl_stmt|;
name|Globals
operator|.
name|prefs
operator|.
name|putInt
argument_list|(
name|posXKey
argument_list|,
name|location
operator|.
name|x
argument_list|)
expr_stmt|;
name|Globals
operator|.
name|prefs
operator|.
name|putInt
argument_list|(
name|posYKey
argument_list|,
name|location
operator|.
name|y
argument_list|)
expr_stmt|;
name|Globals
operator|.
name|prefs
operator|.
name|putInt
argument_list|(
name|sizeXKey
argument_list|,
name|dimensions
operator|.
name|width
argument_list|)
expr_stmt|;
name|Globals
operator|.
name|prefs
operator|.
name|putInt
argument_list|(
name|sizeYKey
argument_list|,
name|dimensions
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
DECL|method|getStoredLocation ()
specifier|private
name|WindowPosition
name|getStoredLocation
parameter_list|()
block|{
name|int
name|sizeX
init|=
name|Globals
operator|.
name|prefs
operator|.
name|getInt
argument_list|(
name|sizeXKey
argument_list|)
decl_stmt|;
name|int
name|sizeY
init|=
name|Globals
operator|.
name|prefs
operator|.
name|getInt
argument_list|(
name|sizeYKey
argument_list|)
decl_stmt|;
name|int
name|posX
init|=
name|Globals
operator|.
name|prefs
operator|.
name|getInt
argument_list|(
name|posXKey
argument_list|)
decl_stmt|;
name|int
name|posY
init|=
name|Globals
operator|.
name|prefs
operator|.
name|getInt
argument_list|(
name|posYKey
argument_list|)
decl_stmt|;
return|return
operator|new
name|WindowPosition
argument_list|(
name|posX
argument_list|,
name|posY
argument_list|,
name|sizeX
argument_list|,
name|sizeY
argument_list|)
return|;
block|}
DECL|method|setWindowLocation (WindowPosition storedPosition)
specifier|private
name|void
name|setWindowLocation
parameter_list|(
name|WindowPosition
name|storedPosition
parameter_list|)
block|{
name|window
operator|.
name|setLocation
argument_list|(
name|storedPosition
operator|.
name|posX
argument_list|,
name|storedPosition
operator|.
name|posY
argument_list|)
expr_stmt|;
name|window
operator|.
name|setSize
argument_list|(
name|storedPosition
operator|.
name|sizeX
argument_list|,
name|storedPosition
operator|.
name|sizeY
argument_list|)
expr_stmt|;
block|}
DECL|method|isDisplayable (WindowPosition position)
specifier|private
name|boolean
name|isDisplayable
parameter_list|(
name|WindowPosition
name|position
parameter_list|)
block|{
name|JFrame
name|frame
init|=
operator|new
name|JFrame
argument_list|()
decl_stmt|;
name|frame
operator|.
name|setBounds
argument_list|(
name|position
operator|.
name|posX
argument_list|,
name|position
operator|.
name|posY
argument_list|,
name|position
operator|.
name|sizeX
argument_list|,
name|position
operator|.
name|sizeY
argument_list|)
expr_stmt|;
return|return
name|getVirtualBounds
argument_list|()
operator|.
name|contains
argument_list|(
name|frame
operator|.
name|getBounds
argument_list|()
argument_list|)
return|;
block|}
DECL|method|getVirtualBounds ()
specifier|private
name|Rectangle
name|getVirtualBounds
parameter_list|()
block|{
name|Rectangle
name|bounds
init|=
operator|new
name|Rectangle
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|GraphicsDevice
index|[]
name|devices
init|=
name|GraphicsEnvironment
operator|.
name|getLocalGraphicsEnvironment
argument_list|()
operator|.
name|getScreenDevices
argument_list|()
decl_stmt|;
for|for
control|(
name|GraphicsDevice
name|device
range|:
name|devices
control|)
block|{
name|bounds
operator|.
name|add
argument_list|(
name|device
operator|.
name|getDefaultConfiguration
argument_list|()
operator|.
name|getBounds
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|bounds
return|;
block|}
DECL|method|adaptPosition (WindowPosition position)
specifier|private
name|WindowPosition
name|adaptPosition
parameter_list|(
name|WindowPosition
name|position
parameter_list|)
block|{
if|if
condition|(
name|isDisplayable
argument_list|(
name|position
argument_list|)
condition|)
block|{
return|return
name|position
return|;
block|}
comment|// current algorithm:
comment|// 1. try to move to main screen
comment|// 2. use default sizes on main monitor
name|GraphicsDevice
name|mainScreen
init|=
name|GraphicsEnvironment
operator|.
name|getLocalGraphicsEnvironment
argument_list|()
operator|.
name|getDefaultScreenDevice
argument_list|()
decl_stmt|;
name|int
name|mainScreenHeight
init|=
name|mainScreen
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getHeight
argument_list|()
decl_stmt|;
name|int
name|mainScreenWidth
init|=
name|mainScreen
operator|.
name|getDisplayMode
argument_list|()
operator|.
name|getWidth
argument_list|()
decl_stmt|;
name|int
name|newPosX
init|=
name|position
operator|.
name|posX
decl_stmt|;
name|int
name|newPosY
init|=
name|position
operator|.
name|posY
decl_stmt|;
name|int
name|newSizeX
init|=
name|position
operator|.
name|sizeX
decl_stmt|;
name|int
name|newSizeY
init|=
name|position
operator|.
name|sizeY
decl_stmt|;
if|if
condition|(
operator|(
name|position
operator|.
name|posX
operator|+
name|position
operator|.
name|sizeX
operator|)
operator|>
name|mainScreenWidth
condition|)
block|{
if|if
condition|(
name|position
operator|.
name|sizeX
operator|<=
name|mainScreenWidth
condition|)
block|{
name|newPosX
operator|=
name|mainScreenWidth
operator|-
name|position
operator|.
name|sizeX
expr_stmt|;
block|}
else|else
block|{
name|newPosX
operator|=
name|Globals
operator|.
name|prefs
operator|.
name|getIntDefault
argument_list|(
name|posXKey
argument_list|)
expr_stmt|;
name|newSizeX
operator|=
name|Globals
operator|.
name|prefs
operator|.
name|getIntDefault
argument_list|(
name|sizeXKey
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|(
name|position
operator|.
name|posY
operator|+
name|position
operator|.
name|sizeY
operator|)
operator|>
name|mainScreenHeight
condition|)
block|{
if|if
condition|(
name|position
operator|.
name|sizeY
operator|<=
name|mainScreenHeight
condition|)
block|{
name|newPosY
operator|=
name|mainScreenHeight
operator|-
name|position
operator|.
name|sizeY
expr_stmt|;
block|}
else|else
block|{
name|newPosY
operator|=
name|Globals
operator|.
name|prefs
operator|.
name|getIntDefault
argument_list|(
name|posYKey
argument_list|)
expr_stmt|;
name|newSizeY
operator|=
name|Globals
operator|.
name|prefs
operator|.
name|getIntDefault
argument_list|(
name|sizeYKey
argument_list|)
expr_stmt|;
block|}
block|}
return|return
operator|new
name|WindowPosition
argument_list|(
name|newPosX
argument_list|,
name|newPosY
argument_list|,
name|newSizeX
argument_list|,
name|newSizeY
argument_list|)
return|;
block|}
DECL|class|WindowPosition
specifier|static
class|class
name|WindowPosition
block|{
DECL|field|posX
specifier|public
specifier|final
name|int
name|posX
decl_stmt|;
DECL|field|posY
specifier|public
specifier|final
name|int
name|posY
decl_stmt|;
DECL|field|sizeX
specifier|public
specifier|final
name|int
name|sizeX
decl_stmt|;
DECL|field|sizeY
specifier|public
specifier|final
name|int
name|sizeY
decl_stmt|;
DECL|method|WindowPosition (int posX, int posY, int sizeX, int sizeY)
specifier|public
name|WindowPosition
parameter_list|(
name|int
name|posX
parameter_list|,
name|int
name|posY
parameter_list|,
name|int
name|sizeX
parameter_list|,
name|int
name|sizeY
parameter_list|)
block|{
name|this
operator|.
name|posX
operator|=
name|posX
expr_stmt|;
name|this
operator|.
name|posY
operator|=
name|posY
expr_stmt|;
name|this
operator|.
name|sizeX
operator|=
name|sizeX
expr_stmt|;
name|this
operator|.
name|sizeY
operator|=
name|sizeY
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

