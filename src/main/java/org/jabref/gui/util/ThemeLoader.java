begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.util
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Parent
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Scene
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|util
operator|.
name|FileUpdateMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Installs the style file and provides live reloading.  *<p>  * The live reloading has to be turned on by setting the<code>-Djabref.theme.css</code> property.  * There two possible modes:  * (1) When only<code>-Djabref.theme.css</code> is specified, then the standard<code>Base.css</code> that is found will be watched  * and on changes in that file, the style-sheet will be reloaded and changes are immediately visible.  * (2) When a path to a css file is passed to<code>-Djabref.theme.css</code>, then the given style is loaded in addition to the base css file.  * Changes in the specified css file lead to an immediate redraw of the interface.  *<p>  * When working from an IDE, this usually means that the<code>Base.css</code> is located in the build folder.  * To use the css-file that is located in the sources directly, the full path can be given as value for the "VM option":  *<code>-Djabref.theme.css="/path/to/src/Base.css"</code>  */
end_comment

begin_class
DECL|class|ThemeLoader
specifier|public
class|class
name|ThemeLoader
block|{
DECL|field|DEFAULT_MAIN_CSS
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_MAIN_CSS
init|=
literal|"Base.css"
decl_stmt|;
DECL|field|DEFAULT_PATH_MAIN_CSS
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_PATH_MAIN_CSS
init|=
name|JabRefFrame
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|DEFAULT_MAIN_CSS
argument_list|)
operator|.
name|toExternalForm
argument_list|()
decl_stmt|;
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ThemeLoader
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|cssToLoad
specifier|private
name|String
name|cssToLoad
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"jabref.theme.css"
argument_list|)
decl_stmt|;
DECL|field|fileUpdateMonitor
specifier|private
specifier|final
name|FileUpdateMonitor
name|fileUpdateMonitor
decl_stmt|;
DECL|method|ThemeLoader (FileUpdateMonitor fileUpdateMonitor, JabRefPreferences jabRefPreferences)
specifier|public
name|ThemeLoader
parameter_list|(
name|FileUpdateMonitor
name|fileUpdateMonitor
parameter_list|,
name|JabRefPreferences
name|jabRefPreferences
parameter_list|)
block|{
name|this
operator|.
name|fileUpdateMonitor
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|fileUpdateMonitor
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|StringUtil
operator|.
name|isNullOrEmpty
argument_list|(
name|cssToLoad
argument_list|)
condition|)
block|{
name|LOGGER
operator|.
name|info
argument_list|(
literal|"using css from system "
operator|+
name|cssToLoad
argument_list|)
expr_stmt|;
return|return;
block|}
comment|// otherwise load css from preference
name|String
name|cssFileName
init|=
name|jabRefPreferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|FX_THEME
argument_list|)
decl_stmt|;
if|if
condition|(
name|cssFileName
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|cssToLoad
operator|=
name|JabRefFrame
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|cssFileName
argument_list|)
operator|.
name|toExternalForm
argument_list|()
expr_stmt|;
name|LOGGER
operator|.
name|info
argument_list|(
literal|"using css "
operator|+
name|cssToLoad
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"can't get css file path of "
operator|+
name|cssFileName
argument_list|)
expr_stmt|;
block|}
block|}
block|}
comment|/**      * Installs the base css file as a stylesheet in the given scene. Changes in the css file lead to a redraw of the      * scene using the new css file.      */
DECL|method|installBaseCss (Scene scene, JabRefPreferences preferences)
specifier|public
name|void
name|installBaseCss
parameter_list|(
name|Scene
name|scene
parameter_list|,
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
if|if
condition|(
operator|!
name|StringUtil
operator|.
name|isNullOrEmpty
argument_list|(
name|cssToLoad
argument_list|)
condition|)
block|{
name|addAndWatchForChanges
argument_list|(
name|scene
argument_list|,
name|cssToLoad
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"using the last default css "
operator|+
name|DEFAULT_PATH_MAIN_CSS
argument_list|)
expr_stmt|;
name|addAndWatchForChanges
argument_list|(
name|scene
argument_list|,
name|DEFAULT_PATH_MAIN_CSS
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
name|preferences
operator|.
name|getFontSize
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|size
lambda|->
name|scene
operator|.
name|getRoot
argument_list|()
operator|.
name|setStyle
argument_list|(
literal|"-fx-font-size: "
operator|+
name|size
operator|+
literal|"pt;"
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addAndWatchForChanges (Scene scene, String cssUrl, int index)
specifier|private
name|void
name|addAndWatchForChanges
parameter_list|(
name|Scene
name|scene
parameter_list|,
name|String
name|cssUrl
parameter_list|,
name|int
name|index
parameter_list|)
block|{
comment|// avoid repeat add
if|if
condition|(
name|scene
operator|.
name|getStylesheets
argument_list|()
operator|.
name|contains
argument_list|(
name|cssUrl
argument_list|)
condition|)
block|{
return|return;
block|}
name|scene
operator|.
name|getStylesheets
argument_list|()
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|cssUrl
argument_list|)
expr_stmt|;
try|try
block|{
comment|// If -Djabref.theme.css is defined and the resources are not part of a .jar bundle,
comment|// we watch the file for changes and turn on live reloading
if|if
condition|(
operator|!
name|cssUrl
operator|.
name|startsWith
argument_list|(
literal|"jar:"
argument_list|)
condition|)
block|{
name|Path
name|cssFile
init|=
name|Paths
operator|.
name|get
argument_list|(
operator|new
name|URL
argument_list|(
name|cssUrl
argument_list|)
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|LOGGER
operator|.
name|info
argument_list|(
literal|"Enabling live reloading of "
operator|+
name|cssFile
argument_list|)
expr_stmt|;
name|fileUpdateMonitor
operator|.
name|addListenerForFile
argument_list|(
name|cssFile
argument_list|,
parameter_list|()
lambda|->
block|{
name|LOGGER
operator|.
name|info
argument_list|(
literal|"Reload css file "
operator|+
name|cssFile
argument_list|)
expr_stmt|;
name|DefaultTaskExecutor
operator|.
name|runInJavaFXThread
argument_list|(
parameter_list|()
lambda|->
block|{
name|scene
operator|.
name|getStylesheets
argument_list|()
operator|.
name|remove
argument_list|(
name|cssUrl
argument_list|)
expr_stmt|;
name|scene
operator|.
name|getStylesheets
argument_list|()
operator|.
name|add
argument_list|(
name|index
argument_list|,
name|cssUrl
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|URISyntaxException
decl||
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Could not watch css file for changes "
operator|+
name|cssUrl
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @deprecated you should never need to add css to a control, add it to the scene containing the control      */
annotation|@
name|Deprecated
DECL|method|installBaseCss (Parent control)
specifier|public
name|void
name|installBaseCss
parameter_list|(
name|Parent
name|control
parameter_list|)
block|{
name|control
operator|.
name|getStylesheets
argument_list|()
operator|.
name|add
argument_list|(
literal|0
argument_list|,
name|DEFAULT_PATH_MAIN_CSS
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

