begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.util.comparator
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|comparator
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|specialfields
operator|.
name|SpecialFieldValueViewModel
import|;
end_import

begin_class
DECL|class|ReadStatusFieldComparator
specifier|public
class|class
name|ReadStatusFieldComparator
implements|implements
name|Comparator
argument_list|<
name|Optional
argument_list|<
name|SpecialFieldValueViewModel
argument_list|>
argument_list|>
block|{
annotation|@
name|Override
DECL|method|compare (Optional<SpecialFieldValueViewModel> val1, Optional<SpecialFieldValueViewModel> val2)
specifier|public
name|int
name|compare
parameter_list|(
name|Optional
argument_list|<
name|SpecialFieldValueViewModel
argument_list|>
name|val1
parameter_list|,
name|Optional
argument_list|<
name|SpecialFieldValueViewModel
argument_list|>
name|val2
parameter_list|)
block|{
if|if
condition|(
name|val1
operator|.
name|isPresent
argument_list|()
condition|)
block|{
if|if
condition|(
name|val2
operator|.
name|isPresent
argument_list|()
condition|)
block|{
return|return
name|val1
operator|.
name|get
argument_list|()
operator|.
name|getValue
argument_list|()
operator|.
name|compareTo
argument_list|(
name|val2
operator|.
name|get
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|-
literal|1
return|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|val2
operator|.
name|isPresent
argument_list|()
condition|)
block|{
return|return
literal|1
return|;
block|}
else|else
block|{
return|return
literal|0
return|;
block|}
block|}
block|}
block|}
end_class

end_unit

