begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.util
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|value
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|value
operator|.
name|ObservableValue
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|concurrent
operator|.
name|Worker
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|concurrent
operator|.
name|Worker
operator|.
name|State
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|web
operator|.
name|WebView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|desktop
operator|.
name|JabRefDesktop
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|events
operator|.
name|Event
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|events
operator|.
name|EventListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|events
operator|.
name|EventTarget
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|html
operator|.
name|HTMLAnchorElement
import|;
end_import

begin_comment
comment|/**  * A Hyperlink Click Listener for javafx.WebView to open links on click in the browser  *  Code adapted from:<a href="https://stackoverflow.com/a/33445383/">https://stackoverflow.com/a/33445383/</a>  */
end_comment

begin_class
DECL|class|OpenHyperlinksInExternalBrowser
specifier|public
class|class
name|OpenHyperlinksInExternalBrowser
implements|implements
name|ChangeListener
argument_list|<
name|Worker
operator|.
name|State
argument_list|>
implements|,
name|EventListener
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Log
name|LOGGER
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|OpenHyperlinksInExternalBrowser
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|CLICK_EVENT
specifier|private
specifier|static
specifier|final
name|String
name|CLICK_EVENT
init|=
literal|"click"
decl_stmt|;
DECL|field|ANCHOR_TAG
specifier|private
specifier|static
specifier|final
name|String
name|ANCHOR_TAG
init|=
literal|"a"
decl_stmt|;
DECL|field|webView
specifier|private
specifier|final
name|WebView
name|webView
decl_stmt|;
DECL|method|OpenHyperlinksInExternalBrowser (WebView webView)
specifier|public
name|OpenHyperlinksInExternalBrowser
parameter_list|(
name|WebView
name|webView
parameter_list|)
block|{
name|this
operator|.
name|webView
operator|=
name|webView
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|changed (ObservableValue<? extends State> observable, State oldValue, State newValue)
specifier|public
name|void
name|changed
parameter_list|(
name|ObservableValue
argument_list|<
name|?
extends|extends
name|State
argument_list|>
name|observable
parameter_list|,
name|State
name|oldValue
parameter_list|,
name|State
name|newValue
parameter_list|)
block|{
if|if
condition|(
name|State
operator|.
name|SUCCEEDED
operator|.
name|equals
argument_list|(
name|newValue
argument_list|)
condition|)
block|{
name|Document
name|document
init|=
name|webView
operator|.
name|getEngine
argument_list|()
operator|.
name|getDocument
argument_list|()
decl_stmt|;
name|NodeList
name|anchors
init|=
name|document
operator|.
name|getElementsByTagName
argument_list|(
name|ANCHOR_TAG
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|anchors
operator|.
name|getLength
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|Node
name|node
init|=
name|anchors
operator|.
name|item
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|EventTarget
name|eventTarget
init|=
operator|(
name|EventTarget
operator|)
name|node
decl_stmt|;
name|eventTarget
operator|.
name|addEventListener
argument_list|(
name|CLICK_EVENT
argument_list|,
name|this
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
annotation|@
name|Override
DECL|method|handleEvent (Event event)
specifier|public
name|void
name|handleEvent
parameter_list|(
name|Event
name|event
parameter_list|)
block|{
name|HTMLAnchorElement
name|anchorElement
init|=
operator|(
name|HTMLAnchorElement
operator|)
name|event
operator|.
name|getCurrentTarget
argument_list|()
decl_stmt|;
name|String
name|href
init|=
name|anchorElement
operator|.
name|getHref
argument_list|()
decl_stmt|;
try|try
block|{
name|JabRefDesktop
operator|.
name|openBrowser
argument_list|(
name|href
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
name|event
operator|.
name|preventDefault
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

