begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.undo
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|undo
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|FieldChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|EntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|EntryTypeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_comment
comment|/**  * This class represents the change of type for an entry.  */
end_comment

begin_class
DECL|class|UndoableChangeType
specifier|public
class|class
name|UndoableChangeType
extends|extends
name|AbstractUndoableJabRefEdit
block|{
DECL|field|oldType
specifier|private
specifier|final
name|EntryType
name|oldType
decl_stmt|;
DECL|field|newType
specifier|private
specifier|final
name|EntryType
name|newType
decl_stmt|;
DECL|field|entry
specifier|private
specifier|final
name|BibEntry
name|entry
decl_stmt|;
DECL|method|UndoableChangeType (FieldChange change)
specifier|public
name|UndoableChangeType
parameter_list|(
name|FieldChange
name|change
parameter_list|)
block|{
name|this
argument_list|(
name|change
operator|.
name|getEntry
argument_list|()
argument_list|,
name|EntryTypeFactory
operator|.
name|parse
argument_list|(
name|change
operator|.
name|getOldValue
argument_list|()
argument_list|)
argument_list|,
name|EntryTypeFactory
operator|.
name|parse
argument_list|(
name|change
operator|.
name|getNewValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|UndoableChangeType (BibEntry entry, EntryType oldType, EntryType newType)
specifier|public
name|UndoableChangeType
parameter_list|(
name|BibEntry
name|entry
parameter_list|,
name|EntryType
name|oldType
parameter_list|,
name|EntryType
name|newType
parameter_list|)
block|{
name|this
operator|.
name|oldType
operator|=
name|oldType
expr_stmt|;
name|this
operator|.
name|newType
operator|=
name|newType
expr_stmt|;
name|this
operator|.
name|entry
operator|=
name|entry
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getPresentationName ()
specifier|public
name|String
name|getPresentationName
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"change type of entry %0 from %1 to %2"
argument_list|,
name|StringUtil
operator|.
name|boldHTML
argument_list|(
name|entry
operator|.
name|getCiteKeyOptional
argument_list|()
operator|.
name|orElse
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"undefined"
argument_list|)
argument_list|)
argument_list|)
argument_list|,
name|StringUtil
operator|.
name|boldHTML
argument_list|(
name|oldType
operator|.
name|getDisplayName
argument_list|()
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"undefined"
argument_list|)
argument_list|)
argument_list|,
name|StringUtil
operator|.
name|boldHTML
argument_list|(
name|newType
operator|.
name|getDisplayName
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|undo ()
specifier|public
name|void
name|undo
parameter_list|()
block|{
name|super
operator|.
name|undo
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setType
argument_list|(
name|oldType
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|redo ()
specifier|public
name|void
name|redo
parameter_list|()
block|{
name|super
operator|.
name|redo
argument_list|()
expr_stmt|;
name|entry
operator|.
name|setType
argument_list|(
name|newType
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

