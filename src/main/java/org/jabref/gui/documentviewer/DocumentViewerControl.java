begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.documentviewer
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|documentviewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|NoSuchElementException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|animation
operator|.
name|FadeTransition
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|DoubleProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleDoubleProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ListChangeListener
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ProgressIndicator
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|image
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|image
operator|.
name|ImageView
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|StackPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|shape
operator|.
name|Rectangle
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|util
operator|.
name|Duration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BackgroundTask
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|TaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fxmisc
operator|.
name|easybind
operator|.
name|EasyBind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fxmisc
operator|.
name|flowless
operator|.
name|Cell
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fxmisc
operator|.
name|flowless
operator|.
name|VirtualFlow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fxmisc
operator|.
name|flowless
operator|.
name|VirtualFlowHit
import|;
end_import

begin_class
DECL|class|DocumentViewerControl
specifier|public
class|class
name|DocumentViewerControl
extends|extends
name|StackPane
block|{
DECL|field|taskExecutor
specifier|private
name|TaskExecutor
name|taskExecutor
decl_stmt|;
DECL|field|currentPage
specifier|private
name|ObjectProperty
argument_list|<
name|Integer
argument_list|>
name|currentPage
init|=
operator|new
name|SimpleObjectProperty
argument_list|<>
argument_list|(
literal|1
argument_list|)
decl_stmt|;
DECL|field|scrollY
specifier|private
name|DoubleProperty
name|scrollY
init|=
operator|new
name|SimpleDoubleProperty
argument_list|()
decl_stmt|;
DECL|field|scrollYMax
specifier|private
name|DoubleProperty
name|scrollYMax
init|=
operator|new
name|SimpleDoubleProperty
argument_list|()
decl_stmt|;
DECL|field|flow
specifier|private
name|VirtualFlow
argument_list|<
name|DocumentPageViewModel
argument_list|,
name|DocumentViewerPage
argument_list|>
name|flow
decl_stmt|;
DECL|field|desiredPageDimension
specifier|private
name|PageDimension
name|desiredPageDimension
init|=
name|PageDimension
operator|.
name|ofFixedWidth
argument_list|(
literal|600
argument_list|)
decl_stmt|;
DECL|method|DocumentViewerControl (TaskExecutor taskExecutor)
specifier|public
name|DocumentViewerControl
parameter_list|(
name|TaskExecutor
name|taskExecutor
parameter_list|)
block|{
name|this
operator|.
name|taskExecutor
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|taskExecutor
argument_list|)
expr_stmt|;
name|this
operator|.
name|getStyleClass
argument_list|()
operator|.
name|add
argument_list|(
literal|"document-viewer"
argument_list|)
expr_stmt|;
comment|// External changes to currentPage should result in scrolling to this page
name|EasyBind
operator|.
name|subscribe
argument_list|(
name|currentPage
argument_list|,
name|this
operator|::
name|showPage
argument_list|)
expr_stmt|;
block|}
DECL|method|scrollYMaxProperty ()
specifier|public
name|DoubleProperty
name|scrollYMaxProperty
parameter_list|()
block|{
return|return
name|scrollYMax
return|;
block|}
DECL|method|scrollYProperty ()
specifier|public
name|DoubleProperty
name|scrollYProperty
parameter_list|()
block|{
return|return
name|scrollY
return|;
block|}
DECL|method|getCurrentPage ()
specifier|public
name|int
name|getCurrentPage
parameter_list|()
block|{
return|return
name|currentPage
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|currentPageProperty ()
specifier|public
name|ObjectProperty
argument_list|<
name|Integer
argument_list|>
name|currentPageProperty
parameter_list|()
block|{
return|return
name|currentPage
return|;
block|}
DECL|method|showPage (int pageNumber)
specifier|private
name|void
name|showPage
parameter_list|(
name|int
name|pageNumber
parameter_list|)
block|{
if|if
condition|(
name|flow
operator|!=
literal|null
condition|)
block|{
name|flow
operator|.
name|show
argument_list|(
name|pageNumber
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|show (DocumentViewModel document)
specifier|public
name|void
name|show
parameter_list|(
name|DocumentViewModel
name|document
parameter_list|)
block|{
name|flow
operator|=
name|VirtualFlow
operator|.
name|createVertical
argument_list|(
name|document
operator|.
name|getPages
argument_list|()
argument_list|,
name|DocumentViewerPage
operator|::
operator|new
argument_list|)
expr_stmt|;
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|flow
argument_list|)
expr_stmt|;
name|flow
operator|.
name|visibleCells
argument_list|()
operator|.
name|addListener
argument_list|(
operator|(
name|ListChangeListener
argument_list|<
name|?
super|super
name|DocumentViewerPage
argument_list|>
operator|)
name|c
lambda|->
name|updateCurrentPage
argument_list|(
name|flow
operator|.
name|visibleCells
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// (Bidirectional) binding does not work, so use listeners instead
name|flow
operator|.
name|estimatedScrollYProperty
argument_list|()
operator|.
name|addListener
argument_list|(
parameter_list|(
name|observable
parameter_list|,
name|oldValue
parameter_list|,
name|newValue
parameter_list|)
lambda|->
name|scrollY
operator|.
name|setValue
argument_list|(
name|newValue
argument_list|)
argument_list|)
expr_stmt|;
name|scrollY
operator|.
name|addListener
argument_list|(
parameter_list|(
name|observable
parameter_list|,
name|oldValue
parameter_list|,
name|newValue
parameter_list|)
lambda|->
name|flow
operator|.
name|estimatedScrollYProperty
argument_list|()
operator|.
name|setValue
argument_list|(
operator|(
name|double
operator|)
name|newValue
argument_list|)
argument_list|)
expr_stmt|;
name|flow
operator|.
name|totalLengthEstimateProperty
argument_list|()
operator|.
name|addListener
argument_list|(
parameter_list|(
name|observable
parameter_list|,
name|oldValue
parameter_list|,
name|newValue
parameter_list|)
lambda|->
name|scrollYMax
operator|.
name|setValue
argument_list|(
name|newValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|updateCurrentPage (ObservableList<DocumentViewerPage> visiblePages)
specifier|private
name|void
name|updateCurrentPage
parameter_list|(
name|ObservableList
argument_list|<
name|DocumentViewerPage
argument_list|>
name|visiblePages
parameter_list|)
block|{
if|if
condition|(
name|flow
operator|==
literal|null
condition|)
block|{
return|return;
block|}
comment|// We try to find the page that is displayed in the center of the viewport
name|Optional
argument_list|<
name|DocumentViewerPage
argument_list|>
name|inMiddleOfViewport
init|=
name|Optional
operator|.
name|empty
argument_list|()
decl_stmt|;
try|try
block|{
name|VirtualFlowHit
argument_list|<
name|DocumentViewerPage
argument_list|>
name|hit
init|=
name|flow
operator|.
name|hit
argument_list|(
literal|0
argument_list|,
name|flow
operator|.
name|getHeight
argument_list|()
operator|/
literal|2
argument_list|)
decl_stmt|;
if|if
condition|(
name|hit
operator|.
name|isCellHit
argument_list|()
condition|)
block|{
comment|// Successful hit
name|inMiddleOfViewport
operator|=
name|Optional
operator|.
name|of
argument_list|(
name|hit
operator|.
name|getCell
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|NoSuchElementException
name|exception
parameter_list|)
block|{
comment|// Sometimes throws exception if no page is found -> ignore
block|}
if|if
condition|(
name|inMiddleOfViewport
operator|.
name|isPresent
argument_list|()
condition|)
block|{
comment|// Successful hit
name|currentPage
operator|.
name|set
argument_list|(
name|inMiddleOfViewport
operator|.
name|get
argument_list|()
operator|.
name|getPageNumber
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// Heuristic missed, so try to get page number from first shown page
name|currentPage
operator|.
name|set
argument_list|(
name|visiblePages
operator|.
name|stream
argument_list|()
operator|.
name|findFirst
argument_list|()
operator|.
name|map
argument_list|(
name|DocumentViewerPage
operator|::
name|getPageNumber
argument_list|)
operator|.
name|orElse
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setPageWidth (double width)
specifier|public
name|void
name|setPageWidth
parameter_list|(
name|double
name|width
parameter_list|)
block|{
name|desiredPageDimension
operator|=
name|PageDimension
operator|.
name|ofFixedWidth
argument_list|(
name|width
argument_list|)
expr_stmt|;
name|updateSizeOfDisplayedPages
argument_list|()
expr_stmt|;
block|}
DECL|method|setPageHeight (double height)
specifier|public
name|void
name|setPageHeight
parameter_list|(
name|double
name|height
parameter_list|)
block|{
name|desiredPageDimension
operator|=
name|PageDimension
operator|.
name|ofFixedHeight
argument_list|(
name|height
argument_list|)
expr_stmt|;
name|updateSizeOfDisplayedPages
argument_list|()
expr_stmt|;
block|}
DECL|method|updateSizeOfDisplayedPages ()
specifier|private
name|void
name|updateSizeOfDisplayedPages
parameter_list|()
block|{
if|if
condition|(
name|flow
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|DocumentViewerPage
name|page
range|:
name|flow
operator|.
name|visibleCells
argument_list|()
control|)
block|{
name|page
operator|.
name|updateSize
argument_list|()
expr_stmt|;
block|}
name|flow
operator|.
name|requestLayout
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|changePageWidth (int delta)
specifier|public
name|void
name|changePageWidth
parameter_list|(
name|int
name|delta
parameter_list|)
block|{
comment|// Assuming the current page is A4 (or has same aspect ratio)
name|setPageWidth
argument_list|(
name|desiredPageDimension
operator|.
name|getWidth
argument_list|(
name|Math
operator|.
name|sqrt
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|+
name|delta
argument_list|)
expr_stmt|;
block|}
comment|/**      * Represents the viewport for a page. Note: the instances of {@link DocumentViewerPage} are reused, i.e., not every      * page is rendered in a new instance but instead {@link DocumentViewerPage#updateItem(Object)} is called.      */
DECL|class|DocumentViewerPage
specifier|private
class|class
name|DocumentViewerPage
implements|implements
name|Cell
argument_list|<
name|DocumentPageViewModel
argument_list|,
name|StackPane
argument_list|>
block|{
DECL|field|imageView
specifier|private
specifier|final
name|ImageView
name|imageView
decl_stmt|;
DECL|field|imageHolder
specifier|private
specifier|final
name|StackPane
name|imageHolder
decl_stmt|;
DECL|field|background
specifier|private
specifier|final
name|Rectangle
name|background
decl_stmt|;
DECL|field|page
specifier|private
name|DocumentPageViewModel
name|page
decl_stmt|;
DECL|method|DocumentViewerPage (DocumentPageViewModel initialPage)
specifier|public
name|DocumentViewerPage
parameter_list|(
name|DocumentPageViewModel
name|initialPage
parameter_list|)
block|{
name|page
operator|=
name|initialPage
expr_stmt|;
name|imageView
operator|=
operator|new
name|ImageView
argument_list|()
expr_stmt|;
name|imageHolder
operator|=
operator|new
name|StackPane
argument_list|()
expr_stmt|;
name|imageHolder
operator|.
name|getStyleClass
argument_list|()
operator|.
name|add
argument_list|(
literal|"page"
argument_list|)
expr_stmt|;
comment|// Show progress indicator
name|ProgressIndicator
name|progress
init|=
operator|new
name|ProgressIndicator
argument_list|()
decl_stmt|;
name|progress
operator|.
name|setMaxSize
argument_list|(
literal|50
argument_list|,
literal|50
argument_list|)
expr_stmt|;
comment|// Set empty background and create proper rendering in background (for smoother loading)
name|background
operator|=
operator|new
name|Rectangle
argument_list|(
name|getDesiredWidth
argument_list|()
argument_list|,
name|getDesiredHeight
argument_list|()
argument_list|)
expr_stmt|;
name|background
operator|.
name|setStyle
argument_list|(
literal|"-fx-fill: WHITE"
argument_list|)
expr_stmt|;
comment|//imageView.setImage(new WritableImage(getDesiredWidth(), getDesiredHeight()));
name|BackgroundTask
argument_list|<
name|Image
argument_list|>
name|generateImage
init|=
name|BackgroundTask
operator|.
name|wrap
argument_list|(
parameter_list|()
lambda|->
name|renderPage
argument_list|(
name|initialPage
argument_list|)
argument_list|)
operator|.
name|onSuccess
argument_list|(
name|image
lambda|->
block|{
name|imageView
operator|.
name|setImage
argument_list|(
name|image
argument_list|)
argument_list|;
name|progress
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
argument_list|;
name|background
operator|.
name|setVisible
argument_list|(
literal|false
argument_list|)
argument_list|;
block|}
block|)
class|;
name|taskExecutor
operator|.
name|execute
parameter_list|(
name|generateImage
parameter_list|)
constructor_decl|;
name|imageHolder
operator|.
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|background
argument_list|,
name|progress
argument_list|,
name|imageView
argument_list|)
expr_stmt|;
block|}
end_class

begin_function
DECL|method|getDesiredHeight ()
specifier|private
name|int
name|getDesiredHeight
parameter_list|()
block|{
return|return
name|desiredPageDimension
operator|.
name|getHeight
argument_list|(
name|page
operator|.
name|getAspectRatio
argument_list|()
argument_list|)
return|;
block|}
end_function

begin_function
DECL|method|getDesiredWidth ()
specifier|private
name|int
name|getDesiredWidth
parameter_list|()
block|{
return|return
name|desiredPageDimension
operator|.
name|getWidth
argument_list|(
name|page
operator|.
name|getAspectRatio
argument_list|()
argument_list|)
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|getNode ()
specifier|public
name|StackPane
name|getNode
parameter_list|()
block|{
return|return
name|imageHolder
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|isReusable ()
specifier|public
name|boolean
name|isReusable
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
end_function

begin_function
annotation|@
name|Override
DECL|method|updateItem (DocumentPageViewModel page)
specifier|public
name|void
name|updateItem
parameter_list|(
name|DocumentPageViewModel
name|page
parameter_list|)
block|{
name|this
operator|.
name|page
operator|=
name|page
expr_stmt|;
comment|// First hide old page and show background instead (recalculate size of background to make sure its correct)
name|background
operator|.
name|setWidth
argument_list|(
name|getDesiredWidth
argument_list|()
argument_list|)
expr_stmt|;
name|background
operator|.
name|setHeight
argument_list|(
name|getDesiredHeight
argument_list|()
argument_list|)
expr_stmt|;
name|background
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|imageView
operator|.
name|setOpacity
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|BackgroundTask
argument_list|<
name|Image
argument_list|>
name|generateImage
init|=
name|BackgroundTask
operator|.
name|wrap
argument_list|(
parameter_list|()
lambda|->
name|renderPage
argument_list|(
name|page
argument_list|)
argument_list|)
operator|.
name|onSuccess
argument_list|(
name|image
lambda|->
block|{
name|imageView
operator|.
name|setImage
argument_list|(
name|image
argument_list|)
argument_list|;
comment|// Fade new page in for smoother transition
name|FadeTransition
name|fadeIn
operator|=
operator|new
name|FadeTransition
argument_list|(
name|Duration
operator|.
name|millis
argument_list|(
literal|100
argument_list|)
argument_list|,
name|imageView
argument_list|)
argument_list|;
name|fadeIn
operator|.
name|setFromValue
argument_list|(
literal|0
argument_list|)
argument_list|;
name|fadeIn
operator|.
name|setToValue
argument_list|(
literal|1
argument_list|)
argument_list|;
name|fadeIn
operator|.
name|play
argument_list|()
argument_list|;
block|}
end_function

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|taskExecutor
operator|.
name|execute
argument_list|(
name|generateImage
argument_list|)
expr_stmt|;
end_expr_stmt

begin_function
unit|}          private
DECL|method|renderPage (DocumentPageViewModel page)
name|Image
name|renderPage
parameter_list|(
name|DocumentPageViewModel
name|page
parameter_list|)
block|{
return|return
name|page
operator|.
name|render
argument_list|(
name|getDesiredWidth
argument_list|()
argument_list|,
name|getDesiredHeight
argument_list|()
argument_list|)
return|;
block|}
end_function

begin_function
DECL|method|getPageNumber ()
specifier|public
name|int
name|getPageNumber
parameter_list|()
block|{
return|return
name|page
operator|.
name|getPageNumber
argument_list|()
return|;
block|}
end_function

begin_function
DECL|method|updateSize ()
specifier|public
name|void
name|updateSize
parameter_list|()
block|{
name|background
operator|.
name|setWidth
argument_list|(
name|getDesiredWidth
argument_list|()
argument_list|)
expr_stmt|;
name|background
operator|.
name|setHeight
argument_list|(
name|getDesiredWidth
argument_list|()
argument_list|)
expr_stmt|;
name|updateItem
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|imageHolder
operator|.
name|requestLayout
argument_list|()
expr_stmt|;
block|}
end_function

unit|} }
end_unit

