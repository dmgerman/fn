begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.documentviewer
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|documentviewer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|BooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|IntegerProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleBooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleIntegerProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ListChangeListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractViewModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|StateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|LinkedFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDDocument
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fxmisc
operator|.
name|easybind
operator|.
name|EasyBind
import|;
end_import

begin_class
DECL|class|DocumentViewerViewModel
specifier|public
class|class
name|DocumentViewerViewModel
extends|extends
name|AbstractViewModel
block|{
DECL|field|stateManager
specifier|private
name|StateManager
name|stateManager
decl_stmt|;
DECL|field|currentDocument
specifier|private
name|ObjectProperty
argument_list|<
name|DocumentViewModel
argument_list|>
name|currentDocument
init|=
operator|new
name|SimpleObjectProperty
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|files
specifier|private
name|ListProperty
argument_list|<
name|LinkedFile
argument_list|>
name|files
init|=
operator|new
name|SimpleListProperty
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|liveMode
specifier|private
name|BooleanProperty
name|liveMode
init|=
operator|new
name|SimpleBooleanProperty
argument_list|()
decl_stmt|;
DECL|field|currentPage
specifier|private
name|ObjectProperty
argument_list|<
name|Integer
argument_list|>
name|currentPage
init|=
operator|new
name|SimpleObjectProperty
argument_list|<>
argument_list|()
decl_stmt|;
DECL|field|maxPages
specifier|private
name|IntegerProperty
name|maxPages
init|=
operator|new
name|SimpleIntegerProperty
argument_list|()
decl_stmt|;
DECL|method|DocumentViewerViewModel (StateManager stateManager)
specifier|public
name|DocumentViewerViewModel
parameter_list|(
name|StateManager
name|stateManager
parameter_list|)
block|{
name|this
operator|.
name|stateManager
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|stateManager
argument_list|)
expr_stmt|;
name|this
operator|.
name|stateManager
operator|.
name|getSelectedEntries
argument_list|()
operator|.
name|addListener
argument_list|(
operator|(
name|ListChangeListener
argument_list|<
name|?
super|super
name|BibEntry
argument_list|>
operator|)
name|c
lambda|->
block|{
comment|// Switch to currently selected entry in live mode
if|if
condition|(
name|isLiveMode
argument_list|()
condition|)
block|{
name|setCurrentEntries
argument_list|(
name|this
operator|.
name|stateManager
operator|.
name|getSelectedEntries
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|this
operator|.
name|liveMode
operator|.
name|addListener
argument_list|(
parameter_list|(
name|observable
parameter_list|,
name|oldValue
parameter_list|,
name|newValue
parameter_list|)
lambda|->
block|{
comment|// Switch to currently selected entry if mode is changed to live
if|if
condition|(
name|oldValue
operator|!=
name|newValue
operator|&&
name|newValue
condition|)
block|{
name|setCurrentEntries
argument_list|(
name|this
operator|.
name|stateManager
operator|.
name|getSelectedEntries
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|maxPages
operator|.
name|bindBidirectional
argument_list|(
name|EasyBind
operator|.
name|monadic
argument_list|(
name|currentDocument
argument_list|)
operator|.
name|selectProperty
argument_list|(
name|DocumentViewModel
operator|::
name|maxPagesProperty
argument_list|)
argument_list|)
expr_stmt|;
name|setCurrentEntries
argument_list|(
name|this
operator|.
name|stateManager
operator|.
name|getSelectedEntries
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|getCurrentPage ()
specifier|private
name|int
name|getCurrentPage
parameter_list|()
block|{
return|return
name|currentPage
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|currentPageProperty ()
specifier|public
name|ObjectProperty
argument_list|<
name|Integer
argument_list|>
name|currentPageProperty
parameter_list|()
block|{
return|return
name|currentPage
return|;
block|}
DECL|method|maxPagesProperty ()
specifier|public
name|IntegerProperty
name|maxPagesProperty
parameter_list|()
block|{
return|return
name|maxPages
return|;
block|}
DECL|method|isLiveMode ()
specifier|private
name|boolean
name|isLiveMode
parameter_list|()
block|{
return|return
name|liveMode
operator|.
name|get
argument_list|()
return|;
block|}
DECL|method|currentDocumentProperty ()
specifier|public
name|ObjectProperty
argument_list|<
name|DocumentViewModel
argument_list|>
name|currentDocumentProperty
parameter_list|()
block|{
return|return
name|currentDocument
return|;
block|}
DECL|method|filesProperty ()
specifier|public
name|ListProperty
argument_list|<
name|LinkedFile
argument_list|>
name|filesProperty
parameter_list|()
block|{
return|return
name|files
return|;
block|}
DECL|method|setCurrentEntries (List<BibEntry> entries)
specifier|private
name|void
name|setCurrentEntries
parameter_list|(
name|List
argument_list|<
name|BibEntry
argument_list|>
name|entries
parameter_list|)
block|{
if|if
condition|(
operator|!
name|entries
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|BibEntry
name|firstSelectedEntry
init|=
name|entries
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|setCurrentEntry
argument_list|(
name|firstSelectedEntry
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|setCurrentEntry (BibEntry entry)
specifier|private
name|void
name|setCurrentEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|stateManager
operator|.
name|getActiveDatabase
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|database
lambda|->
block|{
name|List
argument_list|<
name|LinkedFile
argument_list|>
name|linkedFiles
init|=
name|entry
operator|.
name|getFiles
argument_list|()
decl_stmt|;
comment|// We don't need to switch to the first file, this is done automatically in the UI part
name|files
operator|.
name|setValue
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|(
name|linkedFiles
argument_list|)
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|setCurrentDocument (Path path)
specifier|private
name|void
name|setCurrentDocument
parameter_list|(
name|Path
name|path
parameter_list|)
block|{
try|try
block|{
name|currentDocument
operator|.
name|set
argument_list|(
operator|new
name|PdfDocumentViewModel
argument_list|(
name|PDDocument
operator|.
name|load
argument_list|(
name|path
operator|.
name|toFile
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
DECL|method|switchToFile (LinkedFile file)
specifier|public
name|void
name|switchToFile
parameter_list|(
name|LinkedFile
name|file
parameter_list|)
block|{
if|if
condition|(
name|file
operator|!=
literal|null
condition|)
block|{
name|stateManager
operator|.
name|getActiveDatabase
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|database
lambda|->
name|file
operator|.
name|findIn
argument_list|(
name|database
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getFileDirectoryPreferences
argument_list|()
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|this
operator|::
name|setCurrentDocument
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|liveModeProperty ()
specifier|public
name|BooleanProperty
name|liveModeProperty
parameter_list|()
block|{
return|return
name|liveMode
return|;
block|}
DECL|method|showNextPage ()
specifier|public
name|void
name|showNextPage
parameter_list|()
block|{
name|currentPage
operator|.
name|set
argument_list|(
name|getCurrentPage
argument_list|()
operator|+
literal|1
argument_list|)
expr_stmt|;
block|}
DECL|method|showPreviousPage ()
specifier|public
name|void
name|showPreviousPage
parameter_list|()
block|{
name|currentPage
operator|.
name|set
argument_list|(
name|getCurrentPage
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

