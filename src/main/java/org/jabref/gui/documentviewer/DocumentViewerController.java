begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Copyright (C) 2003-2016 JabRef contributors.  * This program is free software; you can redistribute it and/or modify  * it under the terms of the GNU General Public License as published by  * the Free Software Foundation; either version 2 of the License, or  * (at your option) any later version.  *  * This program is distributed in the hope that it will be useful,  * but WITHOUT ANY WARRANTY; without even the implied warranty of  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the  * GNU General Public License for more details.  *  * You should have received a copy of the GNU General Public License along  * with this program; if not, write to the Free Software Foundation, Inc.,  * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.  */
end_comment

begin_package
DECL|package|org.jabref.gui.documentviewer
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|documentviewer
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|FXML
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ChoiceBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|BorderPane
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|StateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|TaskExecutor
import|;
end_import

begin_class
DECL|class|DocumentViewerController
specifier|public
class|class
name|DocumentViewerController
extends|extends
name|AbstractController
argument_list|<
name|DocumentViewerViewModel
argument_list|>
block|{
DECL|field|fileChoice
annotation|@
name|FXML
specifier|private
name|ChoiceBox
argument_list|<
name|String
argument_list|>
name|fileChoice
decl_stmt|;
DECL|field|mainPane
annotation|@
name|FXML
specifier|private
name|BorderPane
name|mainPane
decl_stmt|;
DECL|field|stateManager
annotation|@
name|Inject
specifier|private
name|StateManager
name|stateManager
decl_stmt|;
DECL|field|taskExecutor
annotation|@
name|Inject
specifier|private
name|TaskExecutor
name|taskExecutor
decl_stmt|;
annotation|@
name|FXML
DECL|method|initialize ()
specifier|private
name|void
name|initialize
parameter_list|()
block|{
name|viewModel
operator|=
operator|new
name|DocumentViewerViewModel
argument_list|(
name|stateManager
argument_list|)
expr_stmt|;
name|setupViewer
argument_list|()
expr_stmt|;
name|fileChoice
operator|.
name|itemsProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|viewModel
operator|.
name|filesProperty
argument_list|()
argument_list|)
expr_stmt|;
name|fileChoice
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|selectFirst
argument_list|()
expr_stmt|;
block|}
DECL|method|setupViewer ()
specifier|private
name|void
name|setupViewer
parameter_list|()
block|{
name|DocumentViewerControl
name|viewer
init|=
operator|new
name|DocumentViewerControl
argument_list|(
name|taskExecutor
argument_list|)
decl_stmt|;
name|viewModel
operator|.
name|currentDocumentProperty
argument_list|()
operator|.
name|addListener
argument_list|(
parameter_list|(
name|observable
parameter_list|,
name|oldDocument
parameter_list|,
name|newDocument
parameter_list|)
lambda|->
block|{
if|if
condition|(
name|newDocument
operator|!=
literal|null
condition|)
block|{
name|viewer
operator|.
name|show
argument_list|(
name|newDocument
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|viewer
operator|.
name|show
argument_list|(
name|viewModel
operator|.
name|currentDocumentProperty
argument_list|()
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
name|mainPane
operator|.
name|setCenter
argument_list|(
name|viewer
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

