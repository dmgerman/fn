begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.errorconsole
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|errorconsole
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|inject
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ListChangeListener
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|FXML
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ContentDisplay
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ListCell
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ListView
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|SelectionMode
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|KeyEvent
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|HBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|VBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|util
operator|.
name|Callback
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|ClipBoardManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBindingPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|BuildInfo
import|;
end_import

begin_class
DECL|class|ErrorConsoleController
specifier|public
class|class
name|ErrorConsoleController
extends|extends
name|AbstractController
argument_list|<
name|ErrorConsoleViewModel
argument_list|>
block|{
DECL|field|copyLogButton
annotation|@
name|FXML
specifier|private
name|Button
name|copyLogButton
decl_stmt|;
DECL|field|clearLogButton
annotation|@
name|FXML
specifier|private
name|Button
name|clearLogButton
decl_stmt|;
DECL|field|createIssueButton
annotation|@
name|FXML
specifier|private
name|Button
name|createIssueButton
decl_stmt|;
DECL|field|messagesListView
annotation|@
name|FXML
specifier|private
name|ListView
argument_list|<
name|LogEventViewModel
argument_list|>
name|messagesListView
decl_stmt|;
DECL|field|descriptionLabel
annotation|@
name|FXML
specifier|private
name|Label
name|descriptionLabel
decl_stmt|;
DECL|field|dialogService
annotation|@
name|Inject
specifier|private
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|clipBoardManager
annotation|@
name|Inject
specifier|private
name|ClipBoardManager
name|clipBoardManager
decl_stmt|;
DECL|field|buildInfo
annotation|@
name|Inject
specifier|private
name|BuildInfo
name|buildInfo
decl_stmt|;
DECL|field|keyBindingPreferences
annotation|@
name|Inject
specifier|private
name|KeyBindingPreferences
name|keyBindingPreferences
decl_stmt|;
annotation|@
name|FXML
DECL|method|initialize ()
specifier|private
name|void
name|initialize
parameter_list|()
block|{
name|viewModel
operator|=
operator|new
name|ErrorConsoleViewModel
argument_list|(
name|dialogService
argument_list|,
name|clipBoardManager
argument_list|,
name|buildInfo
argument_list|)
expr_stmt|;
name|messagesListView
operator|.
name|setCellFactory
argument_list|(
name|createCellFactory
argument_list|()
argument_list|)
expr_stmt|;
name|messagesListView
operator|.
name|itemsProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|viewModel
operator|.
name|allMessagesDataProperty
argument_list|()
argument_list|)
expr_stmt|;
name|messagesListView
operator|.
name|scrollTo
argument_list|(
name|viewModel
operator|.
name|allMessagesDataProperty
argument_list|()
operator|.
name|getSize
argument_list|()
operator|-
literal|1
argument_list|)
expr_stmt|;
name|messagesListView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|setSelectionMode
argument_list|(
name|SelectionMode
operator|.
name|MULTIPLE
argument_list|)
expr_stmt|;
name|viewModel
operator|.
name|allMessagesDataProperty
argument_list|()
operator|.
name|addListener
argument_list|(
call|(
name|ListChangeListener
argument_list|<
name|LogEventViewModel
argument_list|>
call|)
argument_list|(
name|change
lambda|->
block|{
name|int
name|size
init|=
name|viewModel
operator|.
name|allMessagesDataProperty
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|size
operator|>
literal|0
condition|)
block|{
name|messagesListView
operator|.
name|scrollTo
argument_list|(
name|size
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|descriptionLabel
operator|.
name|setGraphic
argument_list|(
name|IconTheme
operator|.
name|JabRefIcon
operator|.
name|CONSOLE
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|createCellFactory ()
specifier|private
name|Callback
argument_list|<
name|ListView
argument_list|<
name|LogEventViewModel
argument_list|>
argument_list|,
name|ListCell
argument_list|<
name|LogEventViewModel
argument_list|>
argument_list|>
name|createCellFactory
parameter_list|()
block|{
return|return
name|cell
lambda|->
operator|new
name|ListCell
argument_list|<
name|LogEventViewModel
argument_list|>
argument_list|()
block|{
specifier|private
name|HBox
name|graphic
return|;
specifier|private
name|Node
name|icon
decl_stmt|;
specifier|private
name|VBox
name|message
decl_stmt|;
specifier|private
name|Label
name|heading
decl_stmt|;
specifier|private
name|Label
name|stacktrace
decl_stmt|;
block|{
name|graphic
operator|=
operator|new
name|HBox
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|heading
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|stacktrace
operator|=
operator|new
name|Label
argument_list|()
expr_stmt|;
name|message
operator|=
operator|new
name|VBox
argument_list|()
expr_stmt|;
name|message
operator|.
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|heading
argument_list|,
name|stacktrace
argument_list|)
expr_stmt|;
name|setContentDisplay
argument_list|(
name|ContentDisplay
operator|.
name|GRAPHIC_ONLY
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateItem
parameter_list|(
name|LogEventViewModel
name|event
parameter_list|,
name|boolean
name|empty
parameter_list|)
block|{
name|super
operator|.
name|updateItem
argument_list|(
name|event
argument_list|,
name|empty
argument_list|)
expr_stmt|;
if|if
condition|(
name|event
operator|==
literal|null
operator|||
name|empty
condition|)
block|{
name|setGraphic
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|icon
operator|=
name|event
operator|.
name|getIcon
argument_list|()
operator|.
name|getGraphicNode
argument_list|()
expr_stmt|;
name|heading
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getDisplayText
argument_list|()
argument_list|)
expr_stmt|;
name|heading
operator|.
name|getStyleClass
argument_list|()
operator|.
name|setAll
argument_list|(
name|event
operator|.
name|getStyleClass
argument_list|()
argument_list|)
expr_stmt|;
name|stacktrace
operator|.
name|setText
argument_list|(
name|event
operator|.
name|getStackTrace
argument_list|()
operator|.
name|orElse
argument_list|(
literal|""
argument_list|)
argument_list|)
expr_stmt|;
name|graphic
operator|.
name|getStyleClass
argument_list|()
operator|.
name|setAll
argument_list|(
name|event
operator|.
name|getStyleClass
argument_list|()
argument_list|)
expr_stmt|;
name|graphic
operator|.
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|icon
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|setGraphic
argument_list|(
name|graphic
argument_list|)
expr_stmt|;
block|}
block|}
block|}
empty_stmt|;
block|}
end_class

begin_function
annotation|@
name|FXML
DECL|method|copySelectedLogEntries (KeyEvent event)
specifier|private
name|void
name|copySelectedLogEntries
parameter_list|(
name|KeyEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|keyBindingPreferences
operator|.
name|checkKeyCombinationEquality
argument_list|(
name|KeyBinding
operator|.
name|COPY
argument_list|,
name|event
argument_list|)
condition|)
block|{
name|ObservableList
argument_list|<
name|LogEventViewModel
argument_list|>
name|selectedEntries
init|=
name|messagesListView
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItems
argument_list|()
decl_stmt|;
name|viewModel
operator|.
name|copyLog
argument_list|(
name|selectedEntries
argument_list|)
expr_stmt|;
block|}
block|}
end_function

begin_function
annotation|@
name|FXML
DECL|method|copyLog ()
specifier|private
name|void
name|copyLog
parameter_list|()
block|{
name|viewModel
operator|.
name|copyLog
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|FXML
DECL|method|clearLog ()
specifier|private
name|void
name|clearLog
parameter_list|()
block|{
name|viewModel
operator|.
name|clearLog
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|FXML
DECL|method|createIssue ()
specifier|private
name|void
name|createIssue
parameter_list|()
block|{
name|viewModel
operator|.
name|reportIssue
argument_list|()
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|FXML
DECL|method|closeErrorDialog ()
specifier|private
name|void
name|closeErrorDialog
parameter_list|()
block|{
name|getStage
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
end_function

unit|}
end_unit

