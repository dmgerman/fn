begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.preferences
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preferences
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|application
operator|.
name|Platform
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|FXML
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ComboBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|RadioButton
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TableColumn
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TableView
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|KeyCode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|ActionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|StandardActions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|help
operator|.
name|HelpAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|icon
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FieldsUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|IconValidationDecorator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|ValueTableCellFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|ViewModelListCellFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|help
operator|.
name|HelpFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|Field
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|airhacks
operator|.
name|afterburner
operator|.
name|views
operator|.
name|ViewLoader
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|visualization
operator|.
name|ControlsFxVisualizer
import|;
end_import

begin_class
DECL|class|TableColumnsTabView
specifier|public
class|class
name|TableColumnsTabView
extends|extends
name|AbstractPreferenceTabView
argument_list|<
name|TableColumnsTabViewModel
argument_list|>
implements|implements
name|PreferencesTab
block|{
DECL|field|columnsList
annotation|@
name|FXML
specifier|private
name|TableView
argument_list|<
name|TableColumnsItemModel
argument_list|>
name|columnsList
decl_stmt|;
DECL|field|nameColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|TableColumnsItemModel
argument_list|,
name|Field
argument_list|>
name|nameColumn
decl_stmt|;
DECL|field|actionsColumn
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|TableColumnsItemModel
argument_list|,
name|Field
argument_list|>
name|actionsColumn
decl_stmt|;
DECL|field|addColumnName
annotation|@
name|FXML
specifier|private
name|ComboBox
argument_list|<
name|Field
argument_list|>
name|addColumnName
decl_stmt|;
DECL|field|showFileColumn
annotation|@
name|FXML
specifier|private
name|CheckBox
name|showFileColumn
decl_stmt|;
DECL|field|showUrlColumn
annotation|@
name|FXML
specifier|private
name|CheckBox
name|showUrlColumn
decl_stmt|;
DECL|field|urlFirst
annotation|@
name|FXML
specifier|private
name|RadioButton
name|urlFirst
decl_stmt|;
DECL|field|doiFirst
annotation|@
name|FXML
specifier|private
name|RadioButton
name|doiFirst
decl_stmt|;
DECL|field|showEPrintColumn
annotation|@
name|FXML
specifier|private
name|CheckBox
name|showEPrintColumn
decl_stmt|;
DECL|field|specialFieldsEnable
annotation|@
name|FXML
specifier|private
name|CheckBox
name|specialFieldsEnable
decl_stmt|;
DECL|field|specialFieldsHelp
annotation|@
name|FXML
specifier|private
name|Button
name|specialFieldsHelp
decl_stmt|;
DECL|field|specialFieldsSyncKeywords
annotation|@
name|FXML
specifier|private
name|RadioButton
name|specialFieldsSyncKeywords
decl_stmt|;
DECL|field|specialFieldsSerialize
annotation|@
name|FXML
specifier|private
name|RadioButton
name|specialFieldsSerialize
decl_stmt|;
DECL|field|extraFileColumnsEnable
annotation|@
name|FXML
specifier|private
name|CheckBox
name|extraFileColumnsEnable
decl_stmt|;
DECL|field|validationVisualizer
specifier|private
name|ControlsFxVisualizer
name|validationVisualizer
init|=
operator|new
name|ControlsFxVisualizer
argument_list|()
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|JabRefPreferences
name|preferences
decl_stmt|;
DECL|method|TableColumnsTabView (JabRefPreferences preferences)
specifier|public
name|TableColumnsTabView
parameter_list|(
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
name|ViewLoader
operator|.
name|view
argument_list|(
name|this
argument_list|)
operator|.
name|root
argument_list|(
name|this
argument_list|)
operator|.
name|load
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Entry table columns"
argument_list|)
return|;
block|}
DECL|method|initialize ()
specifier|public
name|void
name|initialize
parameter_list|()
block|{
name|this
operator|.
name|viewModel
operator|=
operator|new
name|TableColumnsTabViewModel
argument_list|(
name|dialogService
argument_list|,
name|preferences
argument_list|)
expr_stmt|;
name|setupTable
argument_list|()
expr_stmt|;
name|setupBindings
argument_list|()
expr_stmt|;
name|ActionFactory
name|actionFactory
init|=
operator|new
name|ActionFactory
argument_list|(
name|preferences
operator|.
name|getKeyBindingRepository
argument_list|()
argument_list|)
decl_stmt|;
name|actionFactory
operator|.
name|configureIconButton
argument_list|(
name|StandardActions
operator|.
name|HELP_SPECIAL_FIELDS
argument_list|,
operator|new
name|HelpAction
argument_list|(
name|HelpFile
operator|.
name|SPECIAL_FIELDS
argument_list|)
argument_list|,
name|specialFieldsHelp
argument_list|)
expr_stmt|;
block|}
DECL|method|setupTable ()
specifier|private
name|void
name|setupTable
parameter_list|()
block|{
name|nameColumn
operator|.
name|setSortable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|nameColumn
operator|.
name|setReorderable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|nameColumn
operator|.
name|setCellValueFactory
argument_list|(
name|cellData
lambda|->
name|cellData
operator|.
name|getValue
argument_list|()
operator|.
name|fieldProperty
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|ValueTableCellFactory
argument_list|<
name|TableColumnsItemModel
argument_list|,
name|Field
argument_list|>
argument_list|()
operator|.
name|withText
argument_list|(
name|FieldsUtil
operator|::
name|getNameWithType
argument_list|)
operator|.
name|install
argument_list|(
name|nameColumn
argument_list|)
expr_stmt|;
name|actionsColumn
operator|.
name|setSortable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|actionsColumn
operator|.
name|setReorderable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|actionsColumn
operator|.
name|setCellValueFactory
argument_list|(
name|cellData
lambda|->
name|cellData
operator|.
name|getValue
argument_list|()
operator|.
name|fieldProperty
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|ValueTableCellFactory
argument_list|<
name|TableColumnsItemModel
argument_list|,
name|Field
argument_list|>
argument_list|()
operator|.
name|withGraphic
argument_list|(
name|item
lambda|->
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|DELETE_ENTRY
operator|.
name|getGraphicNode
argument_list|()
argument_list|)
operator|.
name|withTooltip
argument_list|(
name|name
lambda|->
name|Localization
operator|.
name|lang
argument_list|(
literal|"Remove column"
argument_list|)
operator|+
literal|" "
operator|+
name|name
operator|.
name|getDisplayName
argument_list|()
argument_list|)
operator|.
name|withOnMouseClickedEvent
argument_list|(
name|item
lambda|->
name|evt
lambda|->
name|viewModel
operator|.
name|removeColumn
argument_list|(
name|columnsList
operator|.
name|getFocusModel
argument_list|()
operator|.
name|getFocusedItem
argument_list|()
argument_list|)
argument_list|)
operator|.
name|install
argument_list|(
name|actionsColumn
argument_list|)
expr_stmt|;
name|viewModel
operator|.
name|selectedColumnModelProperty
argument_list|()
operator|.
name|setValue
argument_list|(
name|columnsList
operator|.
name|getSelectionModel
argument_list|()
argument_list|)
expr_stmt|;
name|columnsList
operator|.
name|setOnKeyPressed
argument_list|(
name|event
lambda|->
block|{
if|if
condition|(
name|event
operator|.
name|getCode
argument_list|()
operator|==
name|KeyCode
operator|.
name|DELETE
condition|)
block|{
name|viewModel
operator|.
name|removeColumn
argument_list|(
name|columnsList
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|columnsList
operator|.
name|itemsProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|viewModel
operator|.
name|columnsListProperty
argument_list|()
argument_list|)
expr_stmt|;
operator|new
name|ViewModelListCellFactory
argument_list|<
name|Field
argument_list|>
argument_list|()
operator|.
name|withText
argument_list|(
name|FieldsUtil
operator|::
name|getNameWithType
argument_list|)
operator|.
name|install
argument_list|(
name|addColumnName
argument_list|)
expr_stmt|;
name|addColumnName
operator|.
name|itemsProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|viewModel
operator|.
name|availableColumnsProperty
argument_list|()
argument_list|)
expr_stmt|;
name|addColumnName
operator|.
name|valueProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|addColumnProperty
argument_list|()
argument_list|)
expr_stmt|;
name|addColumnName
operator|.
name|setConverter
argument_list|(
name|FieldsUtil
operator|.
name|fieldStringConverter
argument_list|)
expr_stmt|;
name|validationVisualizer
operator|.
name|setDecoration
argument_list|(
operator|new
name|IconValidationDecorator
argument_list|()
argument_list|)
expr_stmt|;
name|Platform
operator|.
name|runLater
argument_list|(
parameter_list|()
lambda|->
name|validationVisualizer
operator|.
name|initVisualization
argument_list|(
name|viewModel
operator|.
name|columnsListValidationStatus
argument_list|()
argument_list|,
name|columnsList
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|setupBindings ()
specifier|private
name|void
name|setupBindings
parameter_list|()
block|{
name|showFileColumn
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|showFileColumnProperty
argument_list|()
argument_list|)
expr_stmt|;
name|showUrlColumn
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|showUrlColumnProperty
argument_list|()
argument_list|)
expr_stmt|;
name|urlFirst
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|preferUrlProperty
argument_list|()
argument_list|)
expr_stmt|;
name|doiFirst
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|preferDoiProperty
argument_list|()
argument_list|)
expr_stmt|;
name|showEPrintColumn
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|showEPrintColumnProperty
argument_list|()
argument_list|)
expr_stmt|;
name|specialFieldsEnable
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|specialFieldsEnabledProperty
argument_list|()
argument_list|)
expr_stmt|;
name|specialFieldsSyncKeywords
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|specialFieldsSyncKeywordsProperty
argument_list|()
argument_list|)
expr_stmt|;
name|specialFieldsSerialize
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|specialFieldsSerializeProperty
argument_list|()
argument_list|)
expr_stmt|;
name|extraFileColumnsEnable
operator|.
name|selectedProperty
argument_list|()
operator|.
name|bindBidirectional
argument_list|(
name|viewModel
operator|.
name|extraFileColumnsEnabledProperty
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|updateToCurrentColumnOrder ()
specifier|public
name|void
name|updateToCurrentColumnOrder
parameter_list|()
block|{
name|viewModel
operator|.
name|fillColumnList
argument_list|()
expr_stmt|;
block|}
DECL|method|sortColumnUp ()
specifier|public
name|void
name|sortColumnUp
parameter_list|()
block|{
name|viewModel
operator|.
name|moveColumnUp
argument_list|()
expr_stmt|;
block|}
DECL|method|sortColumnDown ()
specifier|public
name|void
name|sortColumnDown
parameter_list|()
block|{
name|viewModel
operator|.
name|moveColumnDown
argument_list|()
expr_stmt|;
block|}
DECL|method|addColumn ()
specifier|public
name|void
name|addColumn
parameter_list|()
block|{
name|viewModel
operator|.
name|insertColumnInList
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

