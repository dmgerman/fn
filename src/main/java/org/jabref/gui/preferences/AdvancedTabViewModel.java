begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.preferences
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preferences
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|BooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleBooleanProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleStringProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|StringProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|remote
operator|.
name|JabRefMessageHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|JournalAbbreviationPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|ProxyPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|ProxyRegisterer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|remote
operator|.
name|RemotePreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|remote
operator|.
name|RemoteUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|CompositeValidator
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|FunctionBasedValidator
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|ValidationMessage
import|;
end_import

begin_import
import|import
name|de
operator|.
name|saxsys
operator|.
name|mvvmfx
operator|.
name|utils
operator|.
name|validation
operator|.
name|ValidationStatus
import|;
end_import

begin_class
DECL|class|AdvancedTabViewModel
specifier|public
class|class
name|AdvancedTabViewModel
implements|implements
name|PreferenceTabViewModel
block|{
DECL|field|remoteServerProperty
specifier|private
specifier|final
name|BooleanProperty
name|remoteServerProperty
init|=
operator|new
name|SimpleBooleanProperty
argument_list|()
decl_stmt|;
DECL|field|remotePortProperty
specifier|private
specifier|final
name|StringProperty
name|remotePortProperty
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|useIEEELatexAbbreviationsProperty
specifier|private
specifier|final
name|BooleanProperty
name|useIEEELatexAbbreviationsProperty
init|=
operator|new
name|SimpleBooleanProperty
argument_list|()
decl_stmt|;
DECL|field|useCaseKeeperProperty
specifier|private
specifier|final
name|BooleanProperty
name|useCaseKeeperProperty
init|=
operator|new
name|SimpleBooleanProperty
argument_list|()
decl_stmt|;
DECL|field|useUnitFormatterProperty
specifier|private
specifier|final
name|BooleanProperty
name|useUnitFormatterProperty
init|=
operator|new
name|SimpleBooleanProperty
argument_list|()
decl_stmt|;
DECL|field|proxyUseProperty
specifier|private
specifier|final
name|BooleanProperty
name|proxyUseProperty
init|=
operator|new
name|SimpleBooleanProperty
argument_list|()
decl_stmt|;
DECL|field|proxyHostnameProperty
specifier|private
specifier|final
name|StringProperty
name|proxyHostnameProperty
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|proxyPortProperty
specifier|private
specifier|final
name|StringProperty
name|proxyPortProperty
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|proxyUseAuthenticationProperty
specifier|private
specifier|final
name|BooleanProperty
name|proxyUseAuthenticationProperty
init|=
operator|new
name|SimpleBooleanProperty
argument_list|()
decl_stmt|;
DECL|field|proxyUsernameProperty
specifier|private
specifier|final
name|StringProperty
name|proxyUsernameProperty
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|proxyPasswordProperty
specifier|private
specifier|final
name|StringProperty
name|proxyPasswordProperty
init|=
operator|new
name|SimpleStringProperty
argument_list|(
literal|""
argument_list|)
decl_stmt|;
DECL|field|remotePortValidator
specifier|private
name|FunctionBasedValidator
name|remotePortValidator
decl_stmt|;
DECL|field|proxyHostnameValidator
specifier|private
name|FunctionBasedValidator
name|proxyHostnameValidator
decl_stmt|;
DECL|field|proxyPortValidator
specifier|private
name|FunctionBasedValidator
name|proxyPortValidator
decl_stmt|;
DECL|field|proxyUsernameValidator
specifier|private
name|FunctionBasedValidator
name|proxyUsernameValidator
decl_stmt|;
DECL|field|proxyPasswordValidator
specifier|private
name|FunctionBasedValidator
name|proxyPasswordValidator
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|JabRefPreferences
name|preferences
decl_stmt|;
DECL|field|remotePreferences
specifier|private
specifier|final
name|RemotePreferences
name|remotePreferences
decl_stmt|;
DECL|field|proxyPreferences
specifier|private
specifier|final
name|ProxyPreferences
name|proxyPreferences
decl_stmt|;
DECL|field|restartWarning
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|restartWarning
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|AdvancedTabViewModel (DialogService dialogService, JabRefPreferences preferences)
specifier|public
name|AdvancedTabViewModel
parameter_list|(
name|DialogService
name|dialogService
parameter_list|,
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
name|this
operator|.
name|remotePreferences
operator|=
name|preferences
operator|.
name|getRemotePreferences
argument_list|()
expr_stmt|;
name|this
operator|.
name|proxyPreferences
operator|=
name|preferences
operator|.
name|getProxyPreferences
argument_list|()
expr_stmt|;
name|remotePortValidator
operator|=
operator|new
name|FunctionBasedValidator
argument_list|<>
argument_list|(
name|remotePortProperty
argument_list|,
name|input
lambda|->
block|{
try|try
block|{
name|int
name|portNumber
init|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|remotePortProperty
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|RemoteUtil
operator|.
name|isUserPort
argument_list|(
name|portNumber
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|ex
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
block|}
argument_list|,
name|ValidationMessage
operator|.
name|error
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s> %s %n %n %s"
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Advanced"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Remote operation"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"You must enter an integer value in the interval 1025-65535"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|proxyHostnameValidator
operator|=
operator|new
name|FunctionBasedValidator
argument_list|<>
argument_list|(
name|proxyHostnameProperty
argument_list|,
name|input
lambda|->
operator|!
name|StringUtil
operator|.
name|isNullOrEmpty
argument_list|(
name|input
argument_list|)
argument_list|,
name|ValidationMessage
operator|.
name|error
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s> %s %n %n %s"
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Advanced"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify a hostname"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|proxyPortValidator
operator|=
operator|new
name|FunctionBasedValidator
argument_list|<>
argument_list|(
name|proxyPortProperty
argument_list|,
name|input
lambda|->
name|getPortAsInt
argument_list|(
name|input
argument_list|)
operator|.
name|isPresent
argument_list|()
argument_list|,
name|ValidationMessage
operator|.
name|error
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s> %s %n %n %s"
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Advanced"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify a port"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|proxyUsernameValidator
operator|=
operator|new
name|FunctionBasedValidator
argument_list|<>
argument_list|(
name|proxyUsernameProperty
argument_list|,
name|input
lambda|->
operator|!
name|StringUtil
operator|.
name|isNullOrEmpty
argument_list|(
name|input
argument_list|)
argument_list|,
name|ValidationMessage
operator|.
name|error
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s> %s %n %n %s"
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Advanced"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify a username"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|proxyPasswordValidator
operator|=
operator|new
name|FunctionBasedValidator
argument_list|<>
argument_list|(
name|proxyPasswordProperty
argument_list|,
name|input
lambda|->
name|input
operator|.
name|length
argument_list|()
operator|>
literal|0
argument_list|,
name|ValidationMessage
operator|.
name|error
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"%s> %s %n %n %s"
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Advanced"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify a password"
argument_list|)
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|remoteServerProperty
operator|.
name|setValue
argument_list|(
name|remotePreferences
operator|.
name|useRemoteServer
argument_list|()
argument_list|)
expr_stmt|;
name|remotePortProperty
operator|.
name|setValue
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|remotePreferences
operator|.
name|getPort
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|useIEEELatexAbbreviationsProperty
operator|.
name|setValue
argument_list|(
name|preferences
operator|.
name|getJournalAbbreviationPreferences
argument_list|()
operator|.
name|useIEEEAbbreviations
argument_list|()
argument_list|)
expr_stmt|;
name|useCaseKeeperProperty
operator|.
name|setValue
argument_list|(
name|preferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|USE_CASE_KEEPER_ON_SEARCH
argument_list|)
argument_list|)
expr_stmt|;
name|useUnitFormatterProperty
operator|.
name|setValue
argument_list|(
name|preferences
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|USE_UNIT_FORMATTER_ON_SEARCH
argument_list|)
argument_list|)
expr_stmt|;
name|proxyUseProperty
operator|.
name|setValue
argument_list|(
name|proxyPreferences
operator|.
name|isUseProxy
argument_list|()
argument_list|)
expr_stmt|;
name|proxyHostnameProperty
operator|.
name|setValue
argument_list|(
name|proxyPreferences
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|proxyPortProperty
operator|.
name|setValue
argument_list|(
name|proxyPreferences
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|proxyUseAuthenticationProperty
operator|.
name|setValue
argument_list|(
name|proxyPreferences
operator|.
name|isUseAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|proxyUsernameProperty
operator|.
name|setValue
argument_list|(
name|proxyPreferences
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|proxyPasswordProperty
operator|.
name|setValue
argument_list|(
name|proxyPreferences
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|storeRemoteSettings
argument_list|()
expr_stmt|;
name|JournalAbbreviationPreferences
name|journalAbbreviationPreferences
init|=
name|preferences
operator|.
name|getJournalAbbreviationPreferences
argument_list|()
decl_stmt|;
if|if
condition|(
name|journalAbbreviationPreferences
operator|.
name|useIEEEAbbreviations
argument_list|()
operator|!=
name|useIEEELatexAbbreviationsProperty
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|journalAbbreviationPreferences
operator|.
name|setUseIEEEAbbreviations
argument_list|(
name|useIEEELatexAbbreviationsProperty
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|preferences
operator|.
name|storeJournalAbbreviationPreferences
argument_list|(
name|journalAbbreviationPreferences
argument_list|)
expr_stmt|;
name|Globals
operator|.
name|journalAbbreviationLoader
operator|.
name|update
argument_list|(
name|journalAbbreviationPreferences
argument_list|)
expr_stmt|;
block|}
name|preferences
operator|.
name|putBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|USE_CASE_KEEPER_ON_SEARCH
argument_list|,
name|useCaseKeeperProperty
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|preferences
operator|.
name|putBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|USE_UNIT_FORMATTER_ON_SEARCH
argument_list|,
name|useUnitFormatterProperty
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|storeProxySettings
argument_list|()
expr_stmt|;
block|}
DECL|method|storeRemoteSettings ()
specifier|private
name|void
name|storeRemoteSettings
parameter_list|()
block|{
name|RemotePreferences
name|newRemotePreferences
init|=
operator|new
name|RemotePreferences
argument_list|(
name|remotePreferences
operator|.
name|getPort
argument_list|()
argument_list|,
name|remoteServerProperty
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
name|getPortAsInt
argument_list|(
name|remotePortProperty
operator|.
name|getValue
argument_list|()
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|newPort
lambda|->
block|{
if|if
condition|(
name|remotePreferences
operator|.
name|isDifferentPort
argument_list|(
name|newPort
argument_list|)
condition|)
block|{
name|newRemotePreferences
operator|.
name|setPort
argument_list|(
name|newPort
argument_list|)
expr_stmt|;
if|if
condition|(
name|newRemotePreferences
operator|.
name|useRemoteServer
argument_list|()
condition|)
block|{
name|restartWarning
operator|.
name|add
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Remote server port"
argument_list|)
operator|+
literal|": "
operator|+
name|newPort
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
if|if
condition|(
name|newRemotePreferences
operator|.
name|useRemoteServer
argument_list|()
condition|)
block|{
name|Globals
operator|.
name|REMOTE_LISTENER
operator|.
name|openAndStart
argument_list|(
operator|new
name|JabRefMessageHandler
argument_list|()
argument_list|,
name|remotePreferences
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Globals
operator|.
name|REMOTE_LISTENER
operator|.
name|stop
argument_list|()
expr_stmt|;
block|}
name|preferences
operator|.
name|setRemotePreferences
argument_list|(
name|newRemotePreferences
argument_list|)
expr_stmt|;
block|}
DECL|method|storeProxySettings ()
specifier|private
name|void
name|storeProxySettings
parameter_list|()
block|{
name|ProxyPreferences
name|newProxyPreferences
init|=
operator|new
name|ProxyPreferences
argument_list|(
name|proxyUseProperty
operator|.
name|getValue
argument_list|()
argument_list|,
name|proxyHostnameProperty
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|proxyPortProperty
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|proxyUseAuthenticationProperty
operator|.
name|getValue
argument_list|()
argument_list|,
name|proxyUsernameProperty
operator|.
name|getValue
argument_list|()
operator|.
name|trim
argument_list|()
argument_list|,
name|proxyPasswordProperty
operator|.
name|getValue
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|newProxyPreferences
operator|.
name|equals
argument_list|(
name|proxyPreferences
argument_list|)
condition|)
block|{
name|ProxyRegisterer
operator|.
name|register
argument_list|(
name|newProxyPreferences
argument_list|)
expr_stmt|;
block|}
name|preferences
operator|.
name|storeProxyPreferences
argument_list|(
name|newProxyPreferences
argument_list|)
expr_stmt|;
block|}
DECL|method|getPortAsInt (String value)
specifier|private
name|Optional
argument_list|<
name|Integer
argument_list|>
name|getPortAsInt
parameter_list|(
name|String
name|value
parameter_list|)
block|{
try|try
block|{
return|return
name|Optional
operator|.
name|of
argument_list|(
name|Integer
operator|.
name|parseInt
argument_list|(
name|value
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|ex
parameter_list|)
block|{
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
block|}
DECL|method|remotePortValidationStatus ()
specifier|public
name|ValidationStatus
name|remotePortValidationStatus
parameter_list|()
block|{
return|return
name|remotePortValidator
operator|.
name|getValidationStatus
argument_list|()
return|;
block|}
DECL|method|proxyHostnameValidationStatus ()
specifier|public
name|ValidationStatus
name|proxyHostnameValidationStatus
parameter_list|()
block|{
return|return
name|proxyHostnameValidator
operator|.
name|getValidationStatus
argument_list|()
return|;
block|}
DECL|method|proxyPortValidationStatus ()
specifier|public
name|ValidationStatus
name|proxyPortValidationStatus
parameter_list|()
block|{
return|return
name|proxyPortValidator
operator|.
name|getValidationStatus
argument_list|()
return|;
block|}
DECL|method|proxyUsernameValidationStatus ()
specifier|public
name|ValidationStatus
name|proxyUsernameValidationStatus
parameter_list|()
block|{
return|return
name|proxyUsernameValidator
operator|.
name|getValidationStatus
argument_list|()
return|;
block|}
DECL|method|proxyPasswordValidationStatus ()
specifier|public
name|ValidationStatus
name|proxyPasswordValidationStatus
parameter_list|()
block|{
return|return
name|proxyPasswordValidator
operator|.
name|getValidationStatus
argument_list|()
return|;
block|}
DECL|method|validateSettings ()
specifier|public
name|boolean
name|validateSettings
parameter_list|()
block|{
name|CompositeValidator
name|validator
init|=
operator|new
name|CompositeValidator
argument_list|()
decl_stmt|;
if|if
condition|(
name|remoteServerProperty
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|validator
operator|.
name|addValidators
argument_list|(
name|remotePortValidator
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|proxyUseProperty
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|validator
operator|.
name|addValidators
argument_list|(
name|proxyHostnameValidator
argument_list|)
expr_stmt|;
name|validator
operator|.
name|addValidators
argument_list|(
name|proxyPortValidator
argument_list|)
expr_stmt|;
if|if
condition|(
name|proxyUseAuthenticationProperty
operator|.
name|getValue
argument_list|()
condition|)
block|{
name|validator
operator|.
name|addValidators
argument_list|(
name|proxyUsernameValidator
argument_list|)
expr_stmt|;
name|validator
operator|.
name|addValidators
argument_list|(
name|proxyPasswordValidator
argument_list|)
expr_stmt|;
block|}
block|}
name|ValidationStatus
name|validationStatus
init|=
name|validator
operator|.
name|getValidationStatus
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|validationStatus
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|validationStatus
operator|.
name|getHighestMessage
argument_list|()
operator|.
name|ifPresent
argument_list|(
name|message
lambda|->
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|message
operator|.
name|getMessage
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
DECL|method|getRestartWarnings ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getRestartWarnings
parameter_list|()
block|{
return|return
name|restartWarning
return|;
block|}
DECL|method|remoteServerProperty ()
specifier|public
name|BooleanProperty
name|remoteServerProperty
parameter_list|()
block|{
return|return
name|remoteServerProperty
return|;
block|}
DECL|method|remotePortProperty ()
specifier|public
name|StringProperty
name|remotePortProperty
parameter_list|()
block|{
return|return
name|remotePortProperty
return|;
block|}
DECL|method|useIEEELatexAbbreviationsProperty ()
specifier|public
name|BooleanProperty
name|useIEEELatexAbbreviationsProperty
parameter_list|()
block|{
return|return
name|useIEEELatexAbbreviationsProperty
return|;
block|}
DECL|method|useCaseKeeperProperty ()
specifier|public
name|BooleanProperty
name|useCaseKeeperProperty
parameter_list|()
block|{
return|return
name|useCaseKeeperProperty
return|;
block|}
DECL|method|useUnitFormatterProperty ()
specifier|public
name|BooleanProperty
name|useUnitFormatterProperty
parameter_list|()
block|{
return|return
name|useUnitFormatterProperty
return|;
block|}
DECL|method|proxyUseProperty ()
specifier|public
name|BooleanProperty
name|proxyUseProperty
parameter_list|()
block|{
return|return
name|proxyUseProperty
return|;
block|}
DECL|method|proxyHostnameProperty ()
specifier|public
name|StringProperty
name|proxyHostnameProperty
parameter_list|()
block|{
return|return
name|proxyHostnameProperty
return|;
block|}
DECL|method|proxyPortProperty ()
specifier|public
name|StringProperty
name|proxyPortProperty
parameter_list|()
block|{
return|return
name|proxyPortProperty
return|;
block|}
DECL|method|proxyUseAuthenticationProperty ()
specifier|public
name|BooleanProperty
name|proxyUseAuthenticationProperty
parameter_list|()
block|{
return|return
name|proxyUseAuthenticationProperty
return|;
block|}
DECL|method|proxyUsernameProperty ()
specifier|public
name|StringProperty
name|proxyUsernameProperty
parameter_list|()
block|{
return|return
name|proxyUsernameProperty
return|;
block|}
DECL|method|proxyPasswordProperty ()
specifier|public
name|StringProperty
name|proxyPasswordProperty
parameter_list|()
block|{
return|return
name|proxyPasswordProperty
return|;
block|}
block|}
end_class

end_unit

