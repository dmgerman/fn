begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.preferences
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preferences
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|prefs
operator|.
name|BackingStoreException
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ReadOnlyListWrapper
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|JabRefException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractViewModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|GUIGlobals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileDialogConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|TaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|ExporterFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|SavePreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
operator|.
name|TemplateExporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|LayoutFormatterPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|StandardFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|xmp
operator|.
name|XmpPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferencesFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|PreferencesDialogViewModel
specifier|public
class|class
name|PreferencesDialogViewModel
extends|extends
name|AbstractViewModel
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PreferencesDialogViewModel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|taskExecutor
specifier|private
specifier|final
name|TaskExecutor
name|taskExecutor
decl_stmt|;
DECL|field|prefs
specifier|private
specifier|final
name|JabRefPreferences
name|prefs
decl_stmt|;
DECL|field|preferenceTabs
specifier|private
specifier|final
name|ObservableList
argument_list|<
name|PreferencesTab
argument_list|>
name|preferenceTabs
decl_stmt|;
DECL|field|frame
specifier|private
specifier|final
name|JabRefFrame
name|frame
decl_stmt|;
DECL|method|PreferencesDialogViewModel (DialogService dialogService, TaskExecutor taskExecutor, JabRefFrame frame)
specifier|public
name|PreferencesDialogViewModel
parameter_list|(
name|DialogService
name|dialogService
parameter_list|,
name|TaskExecutor
name|taskExecutor
parameter_list|,
name|JabRefFrame
name|frame
parameter_list|)
block|{
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|this
operator|.
name|taskExecutor
operator|=
name|taskExecutor
expr_stmt|;
name|this
operator|.
name|prefs
operator|=
name|Globals
operator|.
name|prefs
expr_stmt|;
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|preferenceTabs
operator|=
name|FXCollections
operator|.
name|observableArrayList
argument_list|(
operator|new
name|GeneralTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|FileTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|TablePrefsTab
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|TableColumnsTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|PreviewTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|ExternalTabView
argument_list|(
name|prefs
argument_list|,
name|frame
argument_list|)
argument_list|,
operator|new
name|GroupsTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|EntryEditorPrefsTab
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|BibtexKeyPatternPrefTab
argument_list|(
name|prefs
argument_list|,
name|frame
operator|.
name|getCurrentBasePanel
argument_list|()
argument_list|)
argument_list|,
operator|new
name|ImportSettingsTab
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|ExportSortingPrefsTab
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|NameFormatterTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|XmpPrivacyTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|AdvancedTabView
argument_list|(
name|prefs
argument_list|)
argument_list|,
operator|new
name|AppearancePrefsTab
argument_list|(
name|dialogService
argument_list|,
name|prefs
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getPreferenceTabs ()
specifier|public
name|ObservableList
argument_list|<
name|PreferencesTab
argument_list|>
name|getPreferenceTabs
parameter_list|()
block|{
return|return
operator|new
name|ReadOnlyListWrapper
argument_list|<>
argument_list|(
name|preferenceTabs
argument_list|)
return|;
block|}
DECL|method|importPreferences ()
specifier|public
name|void
name|importPreferences
parameter_list|()
block|{
name|FileDialogConfiguration
name|fileDialogConfiguration
init|=
operator|new
name|FileDialogConfiguration
operator|.
name|Builder
argument_list|()
operator|.
name|addExtensionFilter
argument_list|(
name|StandardFileType
operator|.
name|XML
argument_list|)
operator|.
name|withDefaultExtension
argument_list|(
name|StandardFileType
operator|.
name|XML
argument_list|)
operator|.
name|withInitialDirectory
argument_list|(
name|prefs
operator|.
name|setLastPreferencesExportPath
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dialogService
operator|.
name|showFileOpenDialog
argument_list|(
name|fileDialogConfiguration
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|file
lambda|->
block|{
try|try
block|{
name|prefs
operator|.
name|importPreferences
argument_list|(
name|file
argument_list|)
expr_stmt|;
name|updateAfterPreferenceChanges
argument_list|()
expr_stmt|;
name|dialogService
operator|.
name|showWarningDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Import preferences"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"You must restart JabRef for this to come into effect."
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JabRefException
name|ex
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error while importing preferences"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Import preferences"
argument_list|)
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|exportPreferences ()
specifier|public
name|void
name|exportPreferences
parameter_list|()
block|{
name|FileDialogConfiguration
name|fileDialogConfiguration
init|=
operator|new
name|FileDialogConfiguration
operator|.
name|Builder
argument_list|()
operator|.
name|addExtensionFilter
argument_list|(
name|StandardFileType
operator|.
name|XML
argument_list|)
operator|.
name|withDefaultExtension
argument_list|(
name|StandardFileType
operator|.
name|XML
argument_list|)
operator|.
name|withInitialDirectory
argument_list|(
name|prefs
operator|.
name|setLastPreferencesExportPath
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|dialogService
operator|.
name|showFileSaveDialog
argument_list|(
name|fileDialogConfiguration
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|exportFile
lambda|->
block|{
try|try
block|{
name|storeAllSettings
argument_list|()
expr_stmt|;
name|prefs
operator|.
name|exportPreferences
argument_list|(
name|exportFile
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|setLastPreferencesExportPath
argument_list|(
name|exportFile
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JabRefException
name|ex
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Export preferences"
argument_list|)
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|showPreferences ()
specifier|public
name|void
name|showPreferences
parameter_list|()
block|{
operator|new
name|PreferencesFilterDialog
argument_list|(
operator|new
name|JabRefPreferencesFilter
argument_list|(
name|prefs
argument_list|)
argument_list|)
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
DECL|method|resetPreferences ()
specifier|public
name|void
name|resetPreferences
parameter_list|()
block|{
name|boolean
name|resetPreferencesConfirmed
init|=
name|dialogService
operator|.
name|showConfirmationDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Reset preferences"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Are you sure you want to reset all settings to default values?"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Reset preferences"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Cancel"
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|resetPreferencesConfirmed
condition|)
block|{
try|try
block|{
name|prefs
operator|.
name|clear
argument_list|()
expr_stmt|;
name|dialogService
operator|.
name|showWarningDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Reset preferences"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"You must restart JabRef for this to come into effect."
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BackingStoreException
name|ex
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error while resetting preferences"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Reset preferences"
argument_list|)
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
name|updateAfterPreferenceChanges
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Reloads the JabRefPreferences into the UI      */
DECL|method|updateAfterPreferenceChanges ()
specifier|private
name|void
name|updateAfterPreferenceChanges
parameter_list|()
block|{
name|setValues
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|TemplateExporter
argument_list|>
name|customExporters
init|=
name|prefs
operator|.
name|getCustomExportFormats
argument_list|(
name|Globals
operator|.
name|journalAbbreviationLoader
argument_list|)
decl_stmt|;
name|LayoutFormatterPreferences
name|layoutPreferences
init|=
name|prefs
operator|.
name|getLayoutFormatterPreferences
argument_list|(
name|Globals
operator|.
name|journalAbbreviationLoader
argument_list|)
decl_stmt|;
name|SavePreferences
name|savePreferences
init|=
name|prefs
operator|.
name|loadForExportFromPreferences
argument_list|()
decl_stmt|;
name|XmpPreferences
name|xmpPreferences
init|=
name|prefs
operator|.
name|getXMPPreferences
argument_list|()
decl_stmt|;
name|Globals
operator|.
name|exportFactory
operator|=
name|ExporterFactory
operator|.
name|create
argument_list|(
name|customExporters
argument_list|,
name|layoutPreferences
argument_list|,
name|savePreferences
argument_list|,
name|xmpPreferences
argument_list|)
expr_stmt|;
name|prefs
operator|.
name|updateEntryEditorTabList
argument_list|()
expr_stmt|;
block|}
comment|/**      * Checks if all tabs are valid      * ToDo: After conversion of all tabs use mvvmfx-validator      * ToDo: should be observable for binding of OK-button in View      */
DECL|method|validSettings ()
specifier|public
name|boolean
name|validSettings
parameter_list|()
block|{
for|for
control|(
name|PreferencesTab
name|tab
range|:
name|preferenceTabs
control|)
block|{
if|if
condition|(
operator|!
name|tab
operator|.
name|validateSettings
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
block|}
return|return
literal|true
return|;
block|}
DECL|method|storeAllSettings ()
specifier|public
name|void
name|storeAllSettings
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|restartWarnings
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|// Run validation checks
if|if
condition|(
operator|!
name|validSettings
argument_list|()
condition|)
block|{
return|return;
block|}
comment|// Store settings
for|for
control|(
name|PreferencesTab
name|tab
range|:
name|preferenceTabs
control|)
block|{
name|tab
operator|.
name|storeSettings
argument_list|()
expr_stmt|;
name|restartWarnings
operator|.
name|addAll
argument_list|(
name|tab
operator|.
name|getRestartWarnings
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|prefs
operator|.
name|flush
argument_list|()
expr_stmt|;
if|if
condition|(
operator|!
name|restartWarnings
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|dialogService
operator|.
name|showWarningDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Restart required"
argument_list|)
argument_list|,
name|String
operator|.
name|join
argument_list|(
literal|",\n"
argument_list|,
name|restartWarnings
argument_list|)
operator|+
literal|"\n\n"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"You must restart JabRef for this to come into effect."
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|GUIGlobals
operator|.
name|updateEntryEditorColors
argument_list|()
expr_stmt|;
name|frame
operator|.
name|setupAllTables
argument_list|()
expr_stmt|;
name|frame
operator|.
name|getGlobalSearchBar
argument_list|()
operator|.
name|updateHintVisibility
argument_list|()
expr_stmt|;
name|dialogService
operator|.
name|notify
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Preferences recorded."
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Inserts the JabRefPreferences-values into the the Properties of the ViewModel      */
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
for|for
control|(
name|PreferencesTab
name|preferencesTab
range|:
name|preferenceTabs
control|)
block|{
name|preferencesTab
operator|.
name|setValues
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

