begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.preferences
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preferences
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|geometry
operator|.
name|Pos
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|PasswordField
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Separator
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TextField
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|GridPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|HBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Pane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|paint
operator|.
name|Paint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|DefaultTaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|ProxyPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|ProxyRegisterer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|NetworkTab
specifier|public
class|class
name|NetworkTab
extends|extends
name|Pane
implements|implements
name|PrefsTab
block|{
DECL|field|useProxyCheckBox
specifier|private
specifier|final
name|CheckBox
name|useProxyCheckBox
decl_stmt|;
DECL|field|hostnameTextField
specifier|private
specifier|final
name|TextField
name|hostnameTextField
decl_stmt|;
DECL|field|portTextField
specifier|private
specifier|final
name|TextField
name|portTextField
decl_stmt|;
DECL|field|useAuthenticationCheckBox
specifier|private
specifier|final
name|CheckBox
name|useAuthenticationCheckBox
decl_stmt|;
DECL|field|usernameTextField
specifier|private
specifier|final
name|TextField
name|usernameTextField
decl_stmt|;
DECL|field|passwordTextField
specifier|private
specifier|final
name|PasswordField
name|passwordTextField
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|JabRefPreferences
name|preferences
decl_stmt|;
DECL|field|oldProxyPreferences
specifier|private
name|ProxyPreferences
name|oldProxyPreferences
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|builder
specifier|private
specifier|final
name|GridPane
name|builder
init|=
operator|new
name|GridPane
argument_list|()
decl_stmt|;
DECL|method|NetworkTab (DialogService dialogService, JabRefPreferences preferences)
specifier|public
name|NetworkTab
parameter_list|(
name|DialogService
name|dialogService
parameter_list|,
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
name|builder
operator|.
name|setVgap
argument_list|(
literal|8
argument_list|)
expr_stmt|;
name|useProxyCheckBox
operator|=
operator|new
name|CheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Use custom proxy configuration"
argument_list|)
argument_list|)
expr_stmt|;
name|hostnameTextField
operator|=
operator|new
name|TextField
argument_list|()
expr_stmt|;
name|hostnameTextField
operator|.
name|setDisable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|portTextField
operator|=
operator|new
name|TextField
argument_list|()
expr_stmt|;
name|portTextField
operator|.
name|setDisable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|=
operator|new
name|CheckBox
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Proxy requires authentication"
argument_list|)
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setDisable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|usernameTextField
operator|=
operator|new
name|TextField
argument_list|()
expr_stmt|;
name|usernameTextField
operator|.
name|setDisable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|passwordTextField
operator|=
operator|new
name|PasswordField
argument_list|()
expr_stmt|;
name|passwordTextField
operator|.
name|setDisable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Label
name|passwordWarningLabel
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Attention: Password is stored in plain text!"
argument_list|)
argument_list|)
decl_stmt|;
name|passwordWarningLabel
operator|.
name|setDisable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|passwordWarningLabel
operator|.
name|setTextFill
argument_list|(
name|Paint
operator|.
name|valueOf
argument_list|(
literal|"Red"
argument_list|)
argument_list|)
expr_stmt|;
comment|// Listener on useProxyCheckBox to enable and disable the proxy related settings;
name|useProxyCheckBox
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
block|{
name|hostnameTextField
operator|.
name|setDisable
argument_list|(
operator|!
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|portTextField
operator|.
name|setDisable
argument_list|(
operator|!
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setDisable
argument_list|(
operator|!
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
block|{
name|usernameTextField
operator|.
name|setDisable
argument_list|(
operator|!
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
operator|||
operator|!
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|passwordTextField
operator|.
name|setDisable
argument_list|(
operator|!
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
operator|||
operator|!
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|passwordWarningLabel
operator|.
name|setDisable
argument_list|(
operator|!
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
operator|||
operator|!
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|Label
name|network
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
argument_list|)
decl_stmt|;
name|network
operator|.
name|getStyleClass
argument_list|()
operator|.
name|add
argument_list|(
literal|"sectionHeader"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|network
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|useProxyCheckBox
argument_list|,
literal|1
argument_list|,
literal|4
argument_list|)
expr_stmt|;
comment|// Hostname configuration
name|HBox
name|hostnameBox
init|=
operator|new
name|HBox
argument_list|()
decl_stmt|;
name|hostnameBox
operator|.
name|setSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|hostnameBox
operator|.
name|setAlignment
argument_list|(
name|Pos
operator|.
name|CENTER_LEFT
argument_list|)
expr_stmt|;
name|Label
name|hostname
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Hostname"
argument_list|)
operator|+
literal|':'
argument_list|)
decl_stmt|;
name|hostnameBox
operator|.
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|hostname
argument_list|,
name|hostnameTextField
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|hostnameBox
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
expr_stmt|;
comment|// Port configuration
name|HBox
name|portBox
init|=
operator|new
name|HBox
argument_list|()
decl_stmt|;
name|portBox
operator|.
name|setSpacing
argument_list|(
literal|50
argument_list|)
expr_stmt|;
name|portBox
operator|.
name|setAlignment
argument_list|(
name|Pos
operator|.
name|CENTER_LEFT
argument_list|)
expr_stmt|;
name|Label
name|port
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Port"
argument_list|)
operator|+
literal|':'
argument_list|)
decl_stmt|;
name|portBox
operator|.
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|port
argument_list|,
name|portTextField
argument_list|,
name|useAuthenticationCheckBox
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|portBox
argument_list|,
literal|1
argument_list|,
literal|7
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
operator|new
name|Separator
argument_list|()
argument_list|,
literal|1
argument_list|,
literal|12
argument_list|)
expr_stmt|;
comment|// Username configuration
name|HBox
name|usernameBox
init|=
operator|new
name|HBox
argument_list|()
decl_stmt|;
name|usernameBox
operator|.
name|setSpacing
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|usernameBox
operator|.
name|setAlignment
argument_list|(
name|Pos
operator|.
name|CENTER_LEFT
argument_list|)
expr_stmt|;
name|Label
name|username
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Username"
argument_list|)
operator|+
literal|':'
argument_list|)
decl_stmt|;
name|usernameBox
operator|.
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|username
argument_list|,
name|usernameTextField
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|usernameBox
argument_list|,
literal|1
argument_list|,
literal|15
argument_list|)
expr_stmt|;
comment|// Password configuration
name|HBox
name|passwordBox
init|=
operator|new
name|HBox
argument_list|()
decl_stmt|;
name|passwordBox
operator|.
name|setSpacing
argument_list|(
literal|15
argument_list|)
expr_stmt|;
name|passwordBox
operator|.
name|setAlignment
argument_list|(
name|Pos
operator|.
name|CENTER_LEFT
argument_list|)
expr_stmt|;
name|Label
name|password
init|=
operator|new
name|Label
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Password"
argument_list|)
operator|+
literal|':'
argument_list|)
decl_stmt|;
name|passwordBox
operator|.
name|getChildren
argument_list|()
operator|.
name|setAll
argument_list|(
name|password
argument_list|,
name|passwordTextField
argument_list|,
name|passwordWarningLabel
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|passwordBox
argument_list|,
literal|1
argument_list|,
literal|16
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getBuilder ()
specifier|public
name|Node
name|getBuilder
parameter_list|()
block|{
return|return
name|builder
return|;
block|}
annotation|@
name|Override
DECL|method|setValues ()
specifier|public
name|void
name|setValues
parameter_list|()
block|{
name|ProxyPreferences
name|proxyPreferences
init|=
name|preferences
operator|.
name|getProxyPreferences
argument_list|()
decl_stmt|;
name|useProxyCheckBox
operator|.
name|setSelected
argument_list|(
name|proxyPreferences
operator|.
name|isUseProxy
argument_list|()
argument_list|)
expr_stmt|;
name|hostnameTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getHostname
argument_list|()
argument_list|)
expr_stmt|;
name|portTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getPort
argument_list|()
argument_list|)
expr_stmt|;
name|useAuthenticationCheckBox
operator|.
name|setSelected
argument_list|(
name|proxyPreferences
operator|.
name|isUseAuthentication
argument_list|()
argument_list|)
expr_stmt|;
name|usernameTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getUsername
argument_list|()
argument_list|)
expr_stmt|;
name|passwordTextField
operator|.
name|setText
argument_list|(
name|proxyPreferences
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
name|oldProxyPreferences
operator|=
name|proxyPreferences
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|Boolean
name|useProxy
init|=
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
decl_stmt|;
name|String
name|hostname
init|=
name|hostnameTextField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|String
name|port
init|=
name|portTextField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|Boolean
name|useAuthentication
init|=
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
decl_stmt|;
name|String
name|username
init|=
name|usernameTextField
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|String
name|password
init|=
name|passwordTextField
operator|.
name|getText
argument_list|()
decl_stmt|;
name|ProxyPreferences
name|proxyPreferences
init|=
operator|new
name|ProxyPreferences
argument_list|(
name|useProxy
argument_list|,
name|hostname
argument_list|,
name|port
argument_list|,
name|useAuthentication
argument_list|,
name|username
argument_list|,
name|password
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|proxyPreferences
operator|.
name|equals
argument_list|(
name|oldProxyPreferences
argument_list|)
condition|)
block|{
name|ProxyRegisterer
operator|.
name|register
argument_list|(
name|proxyPreferences
argument_list|)
expr_stmt|;
block|}
name|preferences
operator|.
name|storeProxyPreferences
argument_list|(
name|proxyPreferences
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|validateSettings ()
specifier|public
name|boolean
name|validateSettings
parameter_list|()
block|{
name|boolean
name|validSetting
decl_stmt|;
name|boolean
name|validAuthenticationSetting
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|useProxyCheckBox
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|String
name|host
init|=
name|hostnameTextField
operator|.
name|getText
argument_list|()
decl_stmt|;
name|String
name|port
init|=
name|portTextField
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|host
operator|==
literal|null
operator|)
operator|||
name|host
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
operator|(
name|port
operator|==
literal|null
operator|)
operator|||
name|port
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|validSetting
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|Integer
name|p
decl_stmt|;
try|try
block|{
name|p
operator|=
name|Integer
operator|.
name|parseInt
argument_list|(
name|port
argument_list|)
expr_stmt|;
name|validSetting
operator|=
name|p
operator|>
literal|0
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NumberFormatException
name|e
parameter_list|)
block|{
name|validSetting
operator|=
literal|false
expr_stmt|;
block|}
block|}
if|if
condition|(
name|useAuthenticationCheckBox
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|String
name|userName
init|=
name|usernameTextField
operator|.
name|getText
argument_list|()
decl_stmt|;
name|char
index|[]
name|password
init|=
name|passwordTextField
operator|.
name|getText
argument_list|()
operator|.
name|toCharArray
argument_list|()
decl_stmt|;
comment|// no empty proxy passwords currently supported (they make no sense in this case anyway)
if|if
condition|(
operator|(
name|userName
operator|==
literal|null
operator|)
operator|||
name|userName
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
operator|||
operator|(
name|password
operator|.
name|length
operator|==
literal|0
operator|)
condition|)
block|{
name|validAuthenticationSetting
operator|=
literal|false
expr_stmt|;
name|validSetting
operator|=
literal|false
expr_stmt|;
block|}
else|else
block|{
name|validAuthenticationSetting
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
else|else
block|{
name|validSetting
operator|=
literal|true
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|validSetting
condition|)
block|{
if|if
condition|(
name|validAuthenticationSetting
condition|)
block|{
name|DefaultTaskExecutor
operator|.
name|runInJavaFXThread
argument_list|(
parameter_list|()
lambda|->
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Invalid setting"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify both hostname and port"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|DefaultTaskExecutor
operator|.
name|runInJavaFXThread
argument_list|(
parameter_list|()
lambda|->
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Invalid setting"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Please specify both username and password"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|validSetting
return|;
block|}
annotation|@
name|Override
DECL|method|getTabName ()
specifier|public
name|String
name|getTabName
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Network"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

