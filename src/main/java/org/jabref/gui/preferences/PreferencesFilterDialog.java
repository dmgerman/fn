begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.preferences
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|preferences
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|binding
operator|.
name|Bindings
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ReadOnlyObjectWrapper
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ReadOnlyStringWrapper
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|transformation
operator|.
name|FilteredList
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|FXML
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Label
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TableColumn
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TableView
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TextField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BaseDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferencesFilter
import|;
end_import

begin_import
import|import
name|com
operator|.
name|airhacks
operator|.
name|afterburner
operator|.
name|views
operator|.
name|ViewLoader
import|;
end_import

begin_class
DECL|class|PreferencesFilterDialog
specifier|public
class|class
name|PreferencesFilterDialog
extends|extends
name|BaseDialog
argument_list|<
name|Void
argument_list|>
block|{
DECL|field|preferencesFilter
specifier|private
specifier|final
name|JabRefPreferencesFilter
name|preferencesFilter
decl_stmt|;
DECL|field|preferenceOptions
specifier|private
specifier|final
name|ObservableList
argument_list|<
name|JabRefPreferencesFilter
operator|.
name|PreferenceOption
argument_list|>
name|preferenceOptions
decl_stmt|;
DECL|field|filteredOptions
specifier|private
specifier|final
name|FilteredList
argument_list|<
name|JabRefPreferencesFilter
operator|.
name|PreferenceOption
argument_list|>
name|filteredOptions
decl_stmt|;
DECL|field|table
annotation|@
name|FXML
specifier|private
name|TableView
argument_list|<
name|JabRefPreferencesFilter
operator|.
name|PreferenceOption
argument_list|>
name|table
decl_stmt|;
DECL|field|columnType
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|JabRefPreferencesFilter
operator|.
name|PreferenceOption
argument_list|,
name|JabRefPreferencesFilter
operator|.
name|PreferenceType
argument_list|>
name|columnType
decl_stmt|;
DECL|field|columnKey
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|JabRefPreferencesFilter
operator|.
name|PreferenceOption
argument_list|,
name|String
argument_list|>
name|columnKey
decl_stmt|;
DECL|field|columnValue
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|JabRefPreferencesFilter
operator|.
name|PreferenceOption
argument_list|,
name|Object
argument_list|>
name|columnValue
decl_stmt|;
DECL|field|columnDefaultValue
annotation|@
name|FXML
specifier|private
name|TableColumn
argument_list|<
name|JabRefPreferencesFilter
operator|.
name|PreferenceOption
argument_list|,
name|Object
argument_list|>
name|columnDefaultValue
decl_stmt|;
DECL|field|showOnlyDeviatingPreferenceOptions
annotation|@
name|FXML
specifier|private
name|CheckBox
name|showOnlyDeviatingPreferenceOptions
decl_stmt|;
DECL|field|count
annotation|@
name|FXML
specifier|private
name|Label
name|count
decl_stmt|;
DECL|field|searchField
annotation|@
name|FXML
specifier|private
name|TextField
name|searchField
decl_stmt|;
DECL|method|PreferencesFilterDialog (JabRefPreferencesFilter preferencesFilter)
specifier|public
name|PreferencesFilterDialog
parameter_list|(
name|JabRefPreferencesFilter
name|preferencesFilter
parameter_list|)
block|{
name|this
operator|.
name|preferencesFilter
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|preferencesFilter
argument_list|)
expr_stmt|;
name|this
operator|.
name|preferenceOptions
operator|=
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
expr_stmt|;
name|this
operator|.
name|filteredOptions
operator|=
operator|new
name|FilteredList
argument_list|<>
argument_list|(
name|this
operator|.
name|preferenceOptions
argument_list|)
expr_stmt|;
name|ViewLoader
operator|.
name|view
argument_list|(
name|this
argument_list|)
operator|.
name|load
argument_list|()
operator|.
name|setAsDialogPane
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|setTitle
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Preferences"
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|FXML
DECL|method|initialize ()
specifier|private
name|void
name|initialize
parameter_list|()
block|{
name|showOnlyDeviatingPreferenceOptions
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
name|updateModel
argument_list|()
argument_list|)
expr_stmt|;
name|filteredOptions
operator|.
name|predicateProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|Bindings
operator|.
name|createObjectBinding
argument_list|(
parameter_list|()
lambda|->
block|{
name|String
name|searchText
init|=
name|searchField
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|searchText
operator|==
literal|null
operator|)
operator|||
name|searchText
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|null
return|;
block|}
name|String
name|lowerCaseSearchText
init|=
name|searchText
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
return|return
parameter_list|(
name|option
parameter_list|)
lambda|->
name|option
operator|.
name|getKey
argument_list|()
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
operator|.
name|contains
argument_list|(
name|lowerCaseSearchText
argument_list|)
return|;
block|}
argument_list|,
name|searchField
operator|.
name|textProperty
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|columnType
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
operator|new
name|ReadOnlyObjectWrapper
argument_list|<>
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|columnKey
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
operator|new
name|ReadOnlyStringWrapper
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getKey
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|columnValue
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
operator|new
name|ReadOnlyObjectWrapper
argument_list|<>
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getValue
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|columnDefaultValue
operator|.
name|setCellValueFactory
argument_list|(
name|data
lambda|->
operator|new
name|ReadOnlyObjectWrapper
argument_list|<>
argument_list|(
name|data
operator|.
name|getValue
argument_list|()
operator|.
name|getDefaultValue
argument_list|()
operator|.
name|orElse
argument_list|(
literal|""
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|table
operator|.
name|setItems
argument_list|(
name|filteredOptions
argument_list|)
expr_stmt|;
name|count
operator|.
name|textProperty
argument_list|()
operator|.
name|bind
argument_list|(
name|Bindings
operator|.
name|size
argument_list|(
name|table
operator|.
name|getItems
argument_list|()
argument_list|)
operator|.
name|asString
argument_list|(
literal|"(%d)"
argument_list|)
argument_list|)
expr_stmt|;
name|updateModel
argument_list|()
expr_stmt|;
block|}
DECL|method|updateModel ()
specifier|private
name|void
name|updateModel
parameter_list|()
block|{
if|if
condition|(
name|showOnlyDeviatingPreferenceOptions
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|preferenceOptions
operator|.
name|setAll
argument_list|(
name|preferencesFilter
operator|.
name|getDeviatingPreferences
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|preferenceOptions
operator|.
name|setAll
argument_list|(
name|preferencesFilter
operator|.
name|getPreferenceOptions
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

