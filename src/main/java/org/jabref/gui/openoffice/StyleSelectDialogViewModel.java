begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.openoffice
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|openoffice
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleObjectProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonType
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|DialogPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ScrollPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|TextArea
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|desktop
operator|.
name|JabRefDesktop
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
operator|.
name|ExternalFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
operator|.
name|ExternalFileTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileDialogConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|openoffice
operator|.
name|OOBibStyle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|openoffice
operator|.
name|OpenOfficePreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|openoffice
operator|.
name|StyleLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|StandardFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|PreferencesService
import|;
end_import

begin_class
DECL|class|StyleSelectDialogViewModel
specifier|public
class|class
name|StyleSelectDialogViewModel
block|{
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|loader
specifier|private
specifier|final
name|StyleLoader
name|loader
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|OpenOfficePreferences
name|preferences
decl_stmt|;
DECL|field|preferencesService
specifier|private
specifier|final
name|PreferencesService
name|preferencesService
decl_stmt|;
DECL|field|styles
specifier|private
specifier|final
name|ListProperty
argument_list|<
name|StyleSelectItemViewModel
argument_list|>
name|styles
init|=
operator|new
name|SimpleListProperty
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|selectedItem
specifier|private
specifier|final
name|ObjectProperty
argument_list|<
name|StyleSelectItemViewModel
argument_list|>
name|selectedItem
init|=
operator|new
name|SimpleObjectProperty
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|StyleSelectDialogViewModel (DialogService dialogService, StyleLoader loader, PreferencesService preferencesService)
specifier|public
name|StyleSelectDialogViewModel
parameter_list|(
name|DialogService
name|dialogService
parameter_list|,
name|StyleLoader
name|loader
parameter_list|,
name|PreferencesService
name|preferencesService
parameter_list|)
block|{
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|this
operator|.
name|preferences
operator|=
name|preferencesService
operator|.
name|getOpenOfficePreferences
argument_list|()
expr_stmt|;
name|this
operator|.
name|loader
operator|=
name|loader
expr_stmt|;
name|this
operator|.
name|preferencesService
operator|=
name|preferencesService
expr_stmt|;
name|styles
operator|.
name|addAll
argument_list|(
name|loadStyles
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|currentStyle
init|=
name|preferences
operator|.
name|getCurrentStyle
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|StyleSelectItemViewModel
argument_list|>
name|lastUsedStyle
init|=
name|styles
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|style
lambda|->
name|style
operator|.
name|getStylePath
argument_list|()
operator|.
name|equals
argument_list|(
name|currentStyle
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
decl_stmt|;
if|if
condition|(
name|lastUsedStyle
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|selectedItem
operator|.
name|setValue
argument_list|(
name|lastUsedStyle
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|selectedItem
operator|.
name|setValue
argument_list|(
name|styles
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|fromOOBibStyle (OOBibStyle style)
specifier|public
name|StyleSelectItemViewModel
name|fromOOBibStyle
parameter_list|(
name|OOBibStyle
name|style
parameter_list|)
block|{
return|return
operator|new
name|StyleSelectItemViewModel
argument_list|(
name|style
operator|.
name|getName
argument_list|()
argument_list|,
name|String
operator|.
name|join
argument_list|(
literal|", "
argument_list|,
name|style
operator|.
name|getJournals
argument_list|()
argument_list|)
argument_list|,
name|style
operator|.
name|isFromResource
argument_list|()
condition|?
name|Localization
operator|.
name|lang
argument_list|(
literal|"Internal style"
argument_list|)
else|:
name|style
operator|.
name|getPath
argument_list|()
argument_list|,
name|style
argument_list|)
return|;
block|}
DECL|method|toOOBibStyle (StyleSelectItemViewModel item)
specifier|public
name|OOBibStyle
name|toOOBibStyle
parameter_list|(
name|StyleSelectItemViewModel
name|item
parameter_list|)
block|{
return|return
name|item
operator|.
name|getStyle
argument_list|()
return|;
block|}
DECL|method|addStyleFile ()
specifier|public
name|void
name|addStyleFile
parameter_list|()
block|{
name|FileDialogConfiguration
name|fileDialogConfiguration
init|=
operator|new
name|FileDialogConfiguration
operator|.
name|Builder
argument_list|()
operator|.
name|addExtensionFilter
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Style file"
argument_list|)
argument_list|,
name|StandardFileType
operator|.
name|JSTYLE
argument_list|)
operator|.
name|withDefaultExtension
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Style file"
argument_list|)
argument_list|,
name|StandardFileType
operator|.
name|JSTYLE
argument_list|)
operator|.
name|withInitialDirectory
argument_list|(
name|preferencesService
operator|.
name|getWorkingDir
argument_list|()
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|Path
argument_list|>
name|path
init|=
name|dialogService
operator|.
name|showFileOpenDialog
argument_list|(
name|fileDialogConfiguration
argument_list|)
decl_stmt|;
name|path
operator|.
name|map
argument_list|(
name|Path
operator|::
name|toAbsolutePath
argument_list|)
operator|.
name|map
argument_list|(
name|Path
operator|::
name|toString
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|stylePath
lambda|->
block|{
if|if
condition|(
name|loader
operator|.
name|addStyleIfValid
argument_list|(
name|stylePath
argument_list|)
condition|)
block|{
name|preferences
operator|.
name|setCurrentStyle
argument_list|(
name|stylePath
argument_list|)
expr_stmt|;
name|styles
operator|.
name|setAll
argument_list|(
name|loadStyles
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Invalid style selected"
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"You must select a valid style file."
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|loadStyles ()
specifier|public
name|List
argument_list|<
name|StyleSelectItemViewModel
argument_list|>
name|loadStyles
parameter_list|()
block|{
return|return
name|loader
operator|.
name|getStyles
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|this
operator|::
name|fromOOBibStyle
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
DECL|method|stylesProperty ()
specifier|public
name|ListProperty
argument_list|<
name|StyleSelectItemViewModel
argument_list|>
name|stylesProperty
parameter_list|()
block|{
return|return
name|styles
return|;
block|}
DECL|method|deleteStyle ()
specifier|public
name|void
name|deleteStyle
parameter_list|()
block|{
name|OOBibStyle
name|style
init|=
name|selectedItem
operator|.
name|getValue
argument_list|()
operator|.
name|getStyle
argument_list|()
decl_stmt|;
if|if
condition|(
name|loader
operator|.
name|removeStyle
argument_list|(
name|style
argument_list|)
condition|)
block|{
name|styles
operator|.
name|remove
argument_list|(
name|selectedItem
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|editStyle ()
specifier|public
name|void
name|editStyle
parameter_list|()
block|{
name|OOBibStyle
name|style
init|=
name|selectedItem
operator|.
name|getValue
argument_list|()
operator|.
name|getStyle
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|ExternalFileType
argument_list|>
name|type
init|=
name|ExternalFileTypes
operator|.
name|getInstance
argument_list|()
operator|.
name|getExternalFileTypeByExt
argument_list|(
literal|"jstyle"
argument_list|)
decl_stmt|;
try|try
block|{
name|JabRefDesktop
operator|.
name|openExternalFileAnyFormat
argument_list|(
operator|new
name|BibDatabaseContext
argument_list|()
argument_list|,
name|style
operator|.
name|getPath
argument_list|()
argument_list|,
name|type
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|viewStyle (StyleSelectItemViewModel item)
specifier|public
name|void
name|viewStyle
parameter_list|(
name|StyleSelectItemViewModel
name|item
parameter_list|)
block|{
name|DialogPane
name|pane
init|=
operator|new
name|DialogPane
argument_list|()
decl_stmt|;
name|ScrollPane
name|scrollPane
init|=
operator|new
name|ScrollPane
argument_list|()
decl_stmt|;
name|scrollPane
operator|.
name|setFitToHeight
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|scrollPane
operator|.
name|setFitToWidth
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|TextArea
name|styleView
init|=
operator|new
name|TextArea
argument_list|(
name|item
operator|.
name|getStyle
argument_list|()
operator|.
name|getLocalCopy
argument_list|()
argument_list|)
decl_stmt|;
name|scrollPane
operator|.
name|setContent
argument_list|(
name|styleView
argument_list|)
expr_stmt|;
name|pane
operator|.
name|setContent
argument_list|(
name|scrollPane
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showCustomDialogAndWait
argument_list|(
name|item
operator|.
name|getStyle
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|pane
argument_list|,
name|ButtonType
operator|.
name|OK
argument_list|)
expr_stmt|;
block|}
DECL|method|selectedItemProperty ()
specifier|public
name|ObjectProperty
argument_list|<
name|StyleSelectItemViewModel
argument_list|>
name|selectedItemProperty
parameter_list|()
block|{
return|return
name|selectedItem
return|;
block|}
DECL|method|storePrefs ()
specifier|public
name|void
name|storePrefs
parameter_list|()
block|{
name|preferences
operator|.
name|setCurrentStyle
argument_list|(
name|selectedItem
operator|.
name|getValue
argument_list|()
operator|.
name|getStylePath
argument_list|()
argument_list|)
expr_stmt|;
name|preferencesService
operator|.
name|setOpenOfficePreferences
argument_list|(
name|preferences
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

