begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.openoffice
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|openoffice
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|openoffice
operator|.
name|CitationEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|beans
operator|.
name|IllegalTypeException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|beans
operator|.
name|NotRemoveableException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|beans
operator|.
name|PropertyExistException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|beans
operator|.
name|UnknownPropertyException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|container
operator|.
name|NoSuchElementException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|container
operator|.
name|XNameAccess
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|lang
operator|.
name|IllegalArgumentException
import|;
end_import

begin_import
import|import
name|com
operator|.
name|sun
operator|.
name|star
operator|.
name|lang
operator|.
name|WrappedTargetException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|ManageCitationsDialogViewModel
specifier|public
class|class
name|ManageCitationsDialogViewModel
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ManageCitationsDialogViewModel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|citations
specifier|private
specifier|final
name|ListProperty
argument_list|<
name|CitationEntryViewModel
argument_list|>
name|citations
init|=
operator|new
name|SimpleListProperty
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|ooBase
specifier|private
specifier|final
name|OOBibBase
name|ooBase
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|method|ManageCitationsDialogViewModel (OOBibBase ooBase, DialogService dialogService)
specifier|public
name|ManageCitationsDialogViewModel
parameter_list|(
name|OOBibBase
name|ooBase
parameter_list|,
name|DialogService
name|dialogService
parameter_list|)
throws|throws
name|NoSuchElementException
throws|,
name|WrappedTargetException
throws|,
name|UnknownPropertyException
block|{
name|this
operator|.
name|ooBase
operator|=
name|ooBase
expr_stmt|;
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|XNameAccess
name|nameAccess
init|=
name|ooBase
operator|.
name|getReferenceMarks
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
name|ooBase
operator|.
name|getJabRefReferenceMarks
argument_list|(
name|nameAccess
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|names
control|)
block|{
name|CitationEntry
name|entry
init|=
operator|new
name|CitationEntry
argument_list|(
name|name
argument_list|,
name|ooBase
operator|.
name|getCitationContext
argument_list|(
name|nameAccess
argument_list|,
name|name
argument_list|,
literal|30
argument_list|,
literal|30
argument_list|,
literal|true
argument_list|)
argument_list|,
name|ooBase
operator|.
name|getCustomProperty
argument_list|(
name|name
argument_list|)
argument_list|)
decl_stmt|;
name|CitationEntryViewModel
name|itemViewModelEntry
init|=
operator|new
name|CitationEntryViewModel
argument_list|(
name|entry
argument_list|)
decl_stmt|;
name|citations
operator|.
name|add
argument_list|(
name|itemViewModelEntry
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|storeSettings ()
specifier|public
name|void
name|storeSettings
parameter_list|()
block|{
name|List
argument_list|<
name|CitationEntry
argument_list|>
name|ciationEntries
init|=
name|citations
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|CitationEntryViewModel
operator|::
name|toCitationEntry
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
try|try
block|{
for|for
control|(
name|CitationEntry
name|entry
range|:
name|ciationEntries
control|)
block|{
name|Optional
argument_list|<
name|String
argument_list|>
name|pageInfo
init|=
name|entry
operator|.
name|getPageInfo
argument_list|()
decl_stmt|;
if|if
condition|(
name|pageInfo
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|ooBase
operator|.
name|setCustomProperty
argument_list|(
name|entry
operator|.
name|getRefMarkName
argument_list|()
argument_list|,
name|pageInfo
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|UnknownPropertyException
decl||
name|NotRemoveableException
decl||
name|PropertyExistException
decl||
name|IllegalTypeException
decl||
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Problem modifying citation"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Problem modifying citation"
argument_list|)
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|citationsProperty ()
specifier|public
name|ListProperty
argument_list|<
name|CitationEntryViewModel
argument_list|>
name|citationsProperty
parameter_list|()
block|{
return|return
name|citations
return|;
block|}
block|}
end_class

end_unit

