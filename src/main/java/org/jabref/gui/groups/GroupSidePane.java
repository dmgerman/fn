begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.groups
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|groups
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Button
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|Priority
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|SidePaneComponent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|SidePaneManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|SidePaneType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|Action
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|StandardActions
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|icon
operator|.
name|IconTheme
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|com
operator|.
name|airhacks
operator|.
name|afterburner
operator|.
name|views
operator|.
name|ViewLoader
import|;
end_import

begin_comment
comment|/**  * The groups side pane.  */
end_comment

begin_class
DECL|class|GroupSidePane
specifier|public
class|class
name|GroupSidePane
extends|extends
name|SidePaneComponent
block|{
DECL|field|preferences
specifier|private
specifier|final
name|JabRefPreferences
name|preferences
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|intersectionUnionToggle
specifier|private
specifier|final
name|Button
name|intersectionUnionToggle
init|=
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|GROUP_INTERSECTION
operator|.
name|asButton
argument_list|()
decl_stmt|;
DECL|method|GroupSidePane (SidePaneManager manager, JabRefPreferences preferences, DialogService dialogService)
specifier|public
name|GroupSidePane
parameter_list|(
name|SidePaneManager
name|manager
parameter_list|,
name|JabRefPreferences
name|preferences
parameter_list|,
name|DialogService
name|dialogService
parameter_list|)
block|{
name|super
argument_list|(
name|manager
argument_list|,
name|IconTheme
operator|.
name|JabRefIcons
operator|.
name|TOGGLE_GROUPS
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Groups"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getAdditionalHeaderButtons ()
specifier|protected
name|List
argument_list|<
name|Node
argument_list|>
name|getAdditionalHeaderButtons
parameter_list|()
block|{
name|intersectionUnionToggle
operator|.
name|setOnAction
argument_list|(
name|event
lambda|->
name|toggleUnionIntersection
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
name|intersectionUnionToggle
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|afterOpening ()
specifier|public
name|void
name|afterOpening
parameter_list|()
block|{
name|preferences
operator|.
name|putBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|GROUP_SIDEPANE_VISIBLE
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|setGraphicsAndTooltipForButton
argument_list|(
name|preferences
operator|.
name|getGroupViewMode
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getResizePolicy ()
specifier|public
name|Priority
name|getResizePolicy
parameter_list|()
block|{
return|return
name|Priority
operator|.
name|ALWAYS
return|;
block|}
annotation|@
name|Override
DECL|method|beforeClosing ()
specifier|public
name|void
name|beforeClosing
parameter_list|()
block|{
name|preferences
operator|.
name|putBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|GROUP_SIDEPANE_VISIBLE
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getToggleAction ()
specifier|public
name|Action
name|getToggleAction
parameter_list|()
block|{
return|return
name|StandardActions
operator|.
name|TOGGLE_GROUPS
return|;
block|}
DECL|method|toggleUnionIntersection ()
specifier|private
name|void
name|toggleUnionIntersection
parameter_list|()
block|{
name|GroupViewMode
name|mode
init|=
name|preferences
operator|.
name|getGroupViewMode
argument_list|()
decl_stmt|;
if|if
condition|(
name|mode
operator|==
name|GroupViewMode
operator|.
name|UNION
condition|)
block|{
name|preferences
operator|.
name|setGroupViewMode
argument_list|(
name|GroupViewMode
operator|.
name|INTERSECTION
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|notify
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Group view mode set to intersection"
argument_list|)
argument_list|)
expr_stmt|;
block|}
elseif|else
if|if
condition|(
name|mode
operator|==
name|GroupViewMode
operator|.
name|INTERSECTION
condition|)
block|{
name|preferences
operator|.
name|setGroupViewMode
argument_list|(
name|GroupViewMode
operator|.
name|UNION
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|notify
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Group view mode set to union"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|setGraphicsAndTooltipForButton
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
DECL|method|setGraphicsAndTooltipForButton (GroupViewMode mode)
specifier|private
name|void
name|setGraphicsAndTooltipForButton
parameter_list|(
name|GroupViewMode
name|mode
parameter_list|)
block|{
name|GroupModeViewModel
name|modeViewModel
init|=
operator|new
name|GroupModeViewModel
argument_list|(
name|mode
argument_list|)
decl_stmt|;
name|intersectionUnionToggle
operator|.
name|setGraphic
argument_list|(
name|modeViewModel
operator|.
name|getUnionIntersectionGraphic
argument_list|()
argument_list|)
expr_stmt|;
name|intersectionUnionToggle
operator|.
name|setTooltip
argument_list|(
name|modeViewModel
operator|.
name|getUnionIntersectionTooltip
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|createContentPane ()
specifier|protected
name|Node
name|createContentPane
parameter_list|()
block|{
return|return
name|ViewLoader
operator|.
name|view
argument_list|(
name|GroupTreeView
operator|.
name|class
argument_list|)
operator|.
name|load
argument_list|()
operator|.
name|getView
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|getType ()
specifier|public
name|SidePaneType
name|getType
parameter_list|()
block|{
return|return
name|SidePaneType
operator|.
name|GROUPS
return|;
block|}
block|}
end_class

end_unit

