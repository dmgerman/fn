begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.importer
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|ListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|beans
operator|.
name|property
operator|.
name|SimpleListProperty
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|AbstractViewModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|FileDialogConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|CustomImporter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|StandardFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|io
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|PreferencesService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|ImportCustomizationDialogViewModel
specifier|public
class|class
name|ImportCustomizationDialogViewModel
extends|extends
name|AbstractViewModel
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ImportCustomizationDialogViewModel
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|importers
specifier|private
specifier|final
name|ListProperty
argument_list|<
name|CustomImporter
argument_list|>
name|importers
decl_stmt|;
DECL|field|selectedImporters
specifier|private
specifier|final
name|ListProperty
argument_list|<
name|CustomImporter
argument_list|>
name|selectedImporters
init|=
operator|new
name|SimpleListProperty
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
argument_list|)
decl_stmt|;
DECL|field|preferences
specifier|private
specifier|final
name|PreferencesService
name|preferences
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|method|ImportCustomizationDialogViewModel (PreferencesService preferences, DialogService dialogService)
specifier|public
name|ImportCustomizationDialogViewModel
parameter_list|(
name|PreferencesService
name|preferences
parameter_list|,
name|DialogService
name|dialogService
parameter_list|)
block|{
name|this
operator|.
name|preferences
operator|=
name|preferences
expr_stmt|;
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
name|this
operator|.
name|importers
operator|=
operator|new
name|SimpleListProperty
argument_list|<>
argument_list|(
name|FXCollections
operator|.
name|observableArrayList
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|customImports
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Converts a path relative to a base-path into a class name.      *      * @param basePath base path      * @param path     path that includes base-path as a prefix      * @return class name      */
DECL|method|pathToClass (String basePath, Path path)
specifier|private
specifier|static
name|String
name|pathToClass
parameter_list|(
name|String
name|basePath
parameter_list|,
name|Path
name|path
parameter_list|)
block|{
name|String
name|className
init|=
name|FileUtil
operator|.
name|relativize
argument_list|(
name|path
argument_list|,
name|Collections
operator|.
name|singletonList
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
name|basePath
argument_list|)
argument_list|)
argument_list|)
operator|.
name|toString
argument_list|()
decl_stmt|;
if|if
condition|(
name|className
operator|!=
literal|null
condition|)
block|{
name|int
name|lastDot
init|=
name|className
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
decl_stmt|;
if|if
condition|(
name|lastDot
operator|<
literal|0
condition|)
block|{
return|return
name|className
return|;
block|}
name|className
operator|=
name|className
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|lastDot
argument_list|)
expr_stmt|;
block|}
return|return
name|className
return|;
block|}
DECL|method|addImporter ()
specifier|public
name|void
name|addImporter
parameter_list|()
block|{
name|FileDialogConfiguration
name|fileDialogConfiguration
init|=
operator|new
name|FileDialogConfiguration
operator|.
name|Builder
argument_list|()
operator|.
name|addExtensionFilter
argument_list|(
name|StandardFileType
operator|.
name|CLASS
argument_list|,
name|StandardFileType
operator|.
name|JAR
argument_list|,
name|StandardFileType
operator|.
name|ZIP
argument_list|)
operator|.
name|withDefaultExtension
argument_list|(
name|StandardFileType
operator|.
name|CLASS
argument_list|)
operator|.
name|withInitialDirectory
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|WORKING_DIRECTORY
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|Path
argument_list|>
name|selectedFile
init|=
name|dialogService
operator|.
name|showFileOpenDialog
argument_list|(
name|fileDialogConfiguration
argument_list|)
decl_stmt|;
if|if
condition|(
name|selectedFile
operator|.
name|isPresent
argument_list|()
operator|&&
operator|(
name|selectedFile
operator|.
name|get
argument_list|()
operator|.
name|getParent
argument_list|()
operator|!=
literal|null
operator|)
condition|)
block|{
name|boolean
name|isArchive
init|=
name|FileUtil
operator|.
name|getFileExtension
argument_list|(
name|selectedFile
operator|.
name|get
argument_list|()
argument_list|)
operator|.
name|filter
argument_list|(
name|extension
lambda|->
name|extension
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"jar"
argument_list|)
operator|||
name|extension
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"zip"
argument_list|)
argument_list|)
operator|.
name|isPresent
argument_list|()
decl_stmt|;
if|if
condition|(
name|isArchive
condition|)
block|{
try|try
block|{
name|Optional
argument_list|<
name|Path
argument_list|>
name|selectedFileInArchive
init|=
name|dialogService
operator|.
name|showFileOpenFromArchiveDialog
argument_list|(
name|selectedFile
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|selectedFileInArchive
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|String
name|className
init|=
name|selectedFileInArchive
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|selectedFileInArchive
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
operator|.
name|lastIndexOf
argument_list|(
literal|'.'
argument_list|)
argument_list|)
operator|.
name|replace
argument_list|(
literal|"/"
argument_list|,
literal|"."
argument_list|)
decl_stmt|;
name|CustomImporter
name|importer
init|=
operator|new
name|CustomImporter
argument_list|(
name|selectedFile
operator|.
name|get
argument_list|()
operator|.
name|toAbsolutePath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|,
name|className
argument_list|)
decl_stmt|;
name|importers
operator|.
name|add
argument_list|(
name|importer
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|exc
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Could not open ZIP-archive."
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Could not open %0"
argument_list|,
name|selectedFile
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|+
literal|"\n"
operator|+
name|Localization
operator|.
name|lang
argument_list|(
literal|"Have you chosen the correct package path?"
argument_list|)
argument_list|,
name|exc
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|exc
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Could not instantiate importer"
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Could not instantiate %0 %1"
argument_list|,
literal|"importer"
argument_list|)
argument_list|,
name|exc
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
try|try
block|{
name|String
name|basePath
init|=
name|selectedFile
operator|.
name|get
argument_list|()
operator|.
name|getParent
argument_list|()
operator|.
name|toString
argument_list|()
decl_stmt|;
name|String
name|className
init|=
name|pathToClass
argument_list|(
name|basePath
argument_list|,
name|selectedFile
operator|.
name|get
argument_list|()
argument_list|)
decl_stmt|;
name|CustomImporter
name|importer
init|=
operator|new
name|CustomImporter
argument_list|(
name|basePath
argument_list|,
name|className
argument_list|)
decl_stmt|;
name|importers
operator|.
name|add
argument_list|(
name|importer
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|exc
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Could not instantiate importer"
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Could not instantiate %0"
argument_list|,
name|selectedFile
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|exc
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoClassDefFoundError
name|exc
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Could not find class while instantiating importer"
argument_list|,
name|exc
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Could not instantiate %0. Have you chosen the correct package path?"
argument_list|,
name|selectedFile
operator|.
name|get
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
argument_list|,
name|exc
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|removeSelectedImporter ()
specifier|public
name|void
name|removeSelectedImporter
parameter_list|()
block|{
name|importers
operator|.
name|removeAll
argument_list|(
name|selectedImporters
argument_list|)
expr_stmt|;
block|}
DECL|method|saveToPrefs ()
specifier|public
name|void
name|saveToPrefs
parameter_list|()
block|{
name|Globals
operator|.
name|prefs
operator|.
name|customImports
operator|.
name|clear
argument_list|()
expr_stmt|;
name|Globals
operator|.
name|prefs
operator|.
name|customImports
operator|.
name|addAll
argument_list|(
name|importers
argument_list|)
expr_stmt|;
name|Globals
operator|.
name|IMPORT_FORMAT_READER
operator|.
name|resetImportFormats
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getImportFormatPreferences
argument_list|()
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getXMPPreferences
argument_list|()
argument_list|,
name|Globals
operator|.
name|getFileUpdateMonitor
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|selectedImportersProperty ()
specifier|public
name|ListProperty
argument_list|<
name|CustomImporter
argument_list|>
name|selectedImportersProperty
parameter_list|()
block|{
return|return
name|selectedImporters
return|;
block|}
DECL|method|importersProperty ()
specifier|public
name|ListProperty
argument_list|<
name|CustomImporter
argument_list|>
name|importersProperty
parameter_list|()
block|{
return|return
name|importers
return|;
block|}
block|}
end_class

end_unit

