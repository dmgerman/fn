begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.importer
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|FXCollections
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|EntryTypeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|PreferencesService
import|;
end_import

begin_class
DECL|class|ImportCustomEntryTypesDialogViewModel
specifier|public
class|class
name|ImportCustomEntryTypesDialogViewModel
block|{
DECL|field|mode
specifier|private
specifier|final
name|BibDatabaseMode
name|mode
decl_stmt|;
DECL|field|preferencesService
specifier|private
specifier|final
name|PreferencesService
name|preferencesService
decl_stmt|;
DECL|field|newTypes
specifier|private
specifier|final
name|ObservableList
argument_list|<
name|BibEntryType
argument_list|>
name|newTypes
init|=
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
decl_stmt|;
DECL|field|differentCustomizationTypes
specifier|private
specifier|final
name|ObservableList
argument_list|<
name|BibEntryType
argument_list|>
name|differentCustomizationTypes
init|=
name|FXCollections
operator|.
name|observableArrayList
argument_list|()
decl_stmt|;
DECL|method|ImportCustomEntryTypesDialogViewModel (BibDatabaseMode mode, List<BibEntryType> entryTypes, PreferencesService preferencesService)
specifier|public
name|ImportCustomEntryTypesDialogViewModel
parameter_list|(
name|BibDatabaseMode
name|mode
parameter_list|,
name|List
argument_list|<
name|BibEntryType
argument_list|>
name|entryTypes
parameter_list|,
name|PreferencesService
name|preferencesService
parameter_list|)
block|{
name|this
operator|.
name|mode
operator|=
name|mode
expr_stmt|;
name|this
operator|.
name|preferencesService
operator|=
name|preferencesService
expr_stmt|;
for|for
control|(
name|BibEntryType
name|customType
range|:
name|entryTypes
control|)
block|{
name|Optional
argument_list|<
name|BibEntryType
argument_list|>
name|currentlyStoredType
init|=
name|Globals
operator|.
name|entryTypesManager
operator|.
name|enrich
argument_list|(
name|customType
operator|.
name|getType
argument_list|()
argument_list|,
name|mode
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|currentlyStoredType
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|newTypes
operator|.
name|add
argument_list|(
name|customType
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
operator|!
name|EntryTypeFactory
operator|.
name|isEqualNameAndFieldBased
argument_list|(
name|customType
argument_list|,
name|currentlyStoredType
operator|.
name|get
argument_list|()
argument_list|)
condition|)
block|{
name|differentCustomizationTypes
operator|.
name|add
argument_list|(
name|customType
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
DECL|method|newTypes ()
specifier|public
name|ObservableList
argument_list|<
name|BibEntryType
argument_list|>
name|newTypes
parameter_list|()
block|{
return|return
name|this
operator|.
name|newTypes
return|;
block|}
DECL|method|differentCustomizations ()
specifier|public
name|ObservableList
argument_list|<
name|BibEntryType
argument_list|>
name|differentCustomizations
parameter_list|()
block|{
return|return
name|this
operator|.
name|differentCustomizationTypes
return|;
block|}
DECL|method|importBibEntryTypes (List<BibEntryType> checkedUnknownEntryTypes, List<BibEntryType> checkedDifferentEntryTypes)
specifier|public
name|void
name|importBibEntryTypes
parameter_list|(
name|List
argument_list|<
name|BibEntryType
argument_list|>
name|checkedUnknownEntryTypes
parameter_list|,
name|List
argument_list|<
name|BibEntryType
argument_list|>
name|checkedDifferentEntryTypes
parameter_list|)
block|{
if|if
condition|(
operator|!
name|checkedUnknownEntryTypes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|checkedUnknownEntryTypes
operator|.
name|forEach
argument_list|(
name|type
lambda|->
name|Globals
operator|.
name|entryTypesManager
operator|.
name|addCustomizedEntryType
argument_list|(
name|type
argument_list|,
name|mode
argument_list|)
argument_list|)
expr_stmt|;
name|preferencesService
operator|.
name|saveCustomEntryTypes
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|checkedDifferentEntryTypes
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|checkedUnknownEntryTypes
operator|.
name|forEach
argument_list|(
name|type
lambda|->
name|Globals
operator|.
name|entryTypesManager
operator|.
name|addCustomizedEntryType
argument_list|(
name|type
argument_list|,
name|mode
argument_list|)
argument_list|)
expr_stmt|;
name|preferencesService
operator|.
name|saveCustomEntryTypes
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

