begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.importer
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|importer
package|;
end_package

begin_import
import|import
name|javafx
operator|.
name|geometry
operator|.
name|Insets
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|ButtonType
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|CheckBox
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|layout
operator|.
name|GridPane
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|BaseDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_comment
comment|/**  * Asks for details about merge database operation.  */
end_comment

begin_class
DECL|class|AppendDatabaseDialog
specifier|public
class|class
name|AppendDatabaseDialog
extends|extends
name|BaseDialog
argument_list|<
name|Boolean
argument_list|>
block|{
DECL|field|entries
specifier|private
specifier|final
name|CheckBox
name|entries
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
DECL|field|strings
specifier|private
specifier|final
name|CheckBox
name|strings
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
DECL|field|groups
specifier|private
specifier|final
name|CheckBox
name|groups
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
DECL|field|selector
specifier|private
specifier|final
name|CheckBox
name|selector
init|=
operator|new
name|CheckBox
argument_list|()
decl_stmt|;
DECL|method|AppendDatabaseDialog ()
specifier|public
name|AppendDatabaseDialog
parameter_list|()
block|{
name|this
operator|.
name|setTitle
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Append library"
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getDialogPane
argument_list|()
operator|.
name|getButtonTypes
argument_list|()
operator|.
name|addAll
argument_list|(
name|ButtonType
operator|.
name|OK
argument_list|,
name|ButtonType
operator|.
name|CANCEL
argument_list|)
expr_stmt|;
name|this
operator|.
name|setResultConverter
argument_list|(
name|button
lambda|->
name|button
operator|==
name|ButtonType
operator|.
name|OK
argument_list|)
expr_stmt|;
name|init
argument_list|()
expr_stmt|;
block|}
DECL|method|init ()
specifier|private
name|void
name|init
parameter_list|()
block|{
name|entries
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|entries
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Import entries"
argument_list|)
argument_list|)
expr_stmt|;
name|strings
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|strings
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Import strings"
argument_list|)
argument_list|)
expr_stmt|;
name|groups
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Import group definitions"
argument_list|)
argument_list|)
expr_stmt|;
name|selector
operator|.
name|setText
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Import word selector definitions"
argument_list|)
argument_list|)
expr_stmt|;
name|GridPane
name|container
init|=
operator|new
name|GridPane
argument_list|()
decl_stmt|;
name|getDialogPane
argument_list|()
operator|.
name|setContent
argument_list|(
name|container
argument_list|)
expr_stmt|;
name|container
operator|.
name|setHgap
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|container
operator|.
name|setVgap
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|container
operator|.
name|setPadding
argument_list|(
operator|new
name|Insets
argument_list|(
literal|15
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|container
operator|.
name|add
argument_list|(
name|entries
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|container
operator|.
name|add
argument_list|(
name|strings
argument_list|,
literal|0
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|container
operator|.
name|add
argument_list|(
name|groups
argument_list|,
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|container
operator|.
name|add
argument_list|(
name|selector
argument_list|,
literal|0
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|container
operator|.
name|setPadding
argument_list|(
operator|new
name|Insets
argument_list|(
literal|15
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|container
operator|.
name|setGridLinesVisible
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
DECL|method|importEntries ()
specifier|public
name|boolean
name|importEntries
parameter_list|()
block|{
return|return
name|entries
operator|.
name|isSelected
argument_list|()
return|;
block|}
DECL|method|importGroups ()
specifier|public
name|boolean
name|importGroups
parameter_list|()
block|{
return|return
name|groups
operator|.
name|isSelected
argument_list|()
return|;
block|}
DECL|method|importStrings ()
specifier|public
name|boolean
name|importStrings
parameter_list|()
block|{
return|return
name|strings
operator|.
name|isSelected
argument_list|()
return|;
block|}
DECL|method|importSelectorWords ()
specifier|public
name|boolean
name|importSelectorWords
parameter_list|()
block|{
return|return
name|selector
operator|.
name|isSelected
argument_list|()
return|;
block|}
block|}
end_class

end_unit

