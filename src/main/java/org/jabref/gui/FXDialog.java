begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|application
operator|.
name|Platform
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|fxml
operator|.
name|FXMLLoader
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Alert
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|Dialog
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|control
operator|.
name|DialogPane
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|image
operator|.
name|Image
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|Modality
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|stage
operator|.
name|Stage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|JabRefGUI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|keyboard
operator|.
name|KeyBindingPreferences
import|;
end_import

begin_comment
comment|/**  * This class provides a super class for all dialogs implemented in JavaFX.  * It mimics the behavior of a Swing JDialog which means once a object of this class  * is shown all Swing windows will be blocked and stay in the background. Since this  * class extends from a JavaFX {@link Alert} it behaves as a normal dialog towards all  * windows in the JavaFX thread.  *<p>  * To create a custom JavaFX dialog one should create an instance of this class and set a dialog  * pane through the inherited {@link Dialog#setDialogPane(DialogPane)} method.  * The dialog can be shown via {@link Dialog#show()} or {@link Dialog#showAndWait()}.  *  * The layout of the pane should be defined in an external fxml file and loaded it via the  * {@link FXMLLoader}.  */
end_comment

begin_class
DECL|class|FXDialog
specifier|public
class|class
name|FXDialog
extends|extends
name|Alert
block|{
comment|/**      * The WindowAdapter will be added to all Swing windows once an instance      * of this class is shown and redirects the focus towards this instance.      * The WindowAdapter will be removed once the instance of this class gets hidden.      *      */
DECL|field|fxOverSwingHelper
specifier|private
specifier|final
name|WindowAdapter
name|fxOverSwingHelper
init|=
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowActivated
parameter_list|(
name|WindowEvent
name|e
parameter_list|)
block|{
name|Platform
operator|.
name|runLater
argument_list|(
parameter_list|()
lambda|->
block|{
name|Stage
name|fxDialogWindow
init|=
name|getDialogWindow
argument_list|()
decl_stmt|;
name|fxDialogWindow
operator|.
name|toFront
argument_list|()
expr_stmt|;
name|fxDialogWindow
operator|.
name|requestFocus
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|windowGainedFocus
parameter_list|(
name|WindowEvent
name|e
parameter_list|)
block|{
name|Platform
operator|.
name|runLater
argument_list|(
parameter_list|()
lambda|->
block|{
name|Stage
name|fxDialogWindow
init|=
name|getDialogWindow
argument_list|()
decl_stmt|;
name|fxDialogWindow
operator|.
name|toFront
argument_list|()
expr_stmt|;
name|fxDialogWindow
operator|.
name|requestFocus
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
DECL|method|FXDialog (AlertType type, String title, Image image, boolean isModal)
specifier|public
name|FXDialog
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|String
name|title
parameter_list|,
name|Image
name|image
parameter_list|,
name|boolean
name|isModal
parameter_list|)
block|{
name|this
argument_list|(
name|type
argument_list|,
name|title
argument_list|,
name|isModal
argument_list|)
expr_stmt|;
name|setDialogIcon
argument_list|(
name|image
argument_list|)
expr_stmt|;
block|}
DECL|method|FXDialog (AlertType type, String title, Image image)
specifier|public
name|FXDialog
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|String
name|title
parameter_list|,
name|Image
name|image
parameter_list|)
block|{
name|this
argument_list|(
name|type
argument_list|,
name|title
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|setDialogIcon
argument_list|(
name|image
argument_list|)
expr_stmt|;
block|}
DECL|method|FXDialog (AlertType type, String title, boolean isModal)
specifier|public
name|FXDialog
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|String
name|title
parameter_list|,
name|boolean
name|isModal
parameter_list|)
block|{
name|this
argument_list|(
name|type
argument_list|,
name|isModal
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
DECL|method|FXDialog (AlertType type, String title)
specifier|public
name|FXDialog
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|String
name|title
parameter_list|)
block|{
name|this
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|setTitle
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
DECL|method|FXDialog (AlertType type, boolean isModal)
specifier|public
name|FXDialog
parameter_list|(
name|AlertType
name|type
parameter_list|,
name|boolean
name|isModal
parameter_list|)
block|{
name|super
argument_list|(
name|type
argument_list|)
expr_stmt|;
name|setDialogIcon
argument_list|(
name|IconTheme
operator|.
name|getJabRefImageFX
argument_list|()
argument_list|)
expr_stmt|;
name|Stage
name|dialogWindow
init|=
name|getDialogWindow
argument_list|()
decl_stmt|;
name|dialogWindow
operator|.
name|setOnCloseRequest
argument_list|(
name|evt
lambda|->
name|this
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|isModal
condition|)
block|{
name|initModality
argument_list|(
name|Modality
operator|.
name|APPLICATION_MODAL
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|initModality
argument_list|(
name|Modality
operator|.
name|NONE
argument_list|)
expr_stmt|;
block|}
name|dialogWindow
operator|.
name|setOnShown
argument_list|(
name|evt
lambda|->
block|{
name|setSwingWindowsEnabledAndFocusable
argument_list|(
operator|!
name|isModal
argument_list|)
expr_stmt|;
name|setLocationRelativeToMainWindow
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|dialogWindow
operator|.
name|setOnHiding
argument_list|(
name|evt
lambda|->
name|setSwingWindowsEnabledAndFocusable
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|dialogWindow
operator|.
name|setOnCloseRequest
argument_list|(
name|evt
lambda|->
name|this
operator|.
name|close
argument_list|()
argument_list|)
expr_stmt|;
name|dialogWindow
operator|.
name|getScene
argument_list|()
operator|.
name|setOnKeyPressed
argument_list|(
name|evt
lambda|->
block|{
name|KeyBindingPreferences
name|keyPreferences
init|=
name|Globals
operator|.
name|getKeyPrefs
argument_list|()
decl_stmt|;
if|if
condition|(
name|keyPreferences
operator|.
name|checkKeyCombinationEquality
argument_list|(
name|KeyBinding
operator|.
name|CLOSE_DIALOG
argument_list|,
name|evt
argument_list|)
condition|)
block|{
name|dialogWindow
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
DECL|method|FXDialog (AlertType type)
specifier|public
name|FXDialog
parameter_list|(
name|AlertType
name|type
parameter_list|)
block|{
name|this
argument_list|(
name|type
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|setDialogIcon (Image image)
specifier|public
name|void
name|setDialogIcon
parameter_list|(
name|Image
name|image
parameter_list|)
block|{
name|Stage
name|fxDialogWindow
init|=
name|getDialogWindow
argument_list|()
decl_stmt|;
name|fxDialogWindow
operator|.
name|getIcons
argument_list|()
operator|.
name|add
argument_list|(
name|image
argument_list|)
expr_stmt|;
block|}
DECL|method|getDialogWindow ()
specifier|private
name|Stage
name|getDialogWindow
parameter_list|()
block|{
return|return
operator|(
name|Stage
operator|)
name|getDialogPane
argument_list|()
operator|.
name|getScene
argument_list|()
operator|.
name|getWindow
argument_list|()
return|;
block|}
DECL|method|setSwingWindowsEnabledAndFocusable (boolean enabled)
specifier|private
name|void
name|setSwingWindowsEnabledAndFocusable
parameter_list|(
name|boolean
name|enabled
parameter_list|)
block|{
for|for
control|(
name|Window
name|swingWindow
range|:
name|Window
operator|.
name|getWindows
argument_list|()
control|)
block|{
name|swingWindow
operator|.
name|setEnabled
argument_list|(
name|enabled
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|enabled
condition|)
block|{
name|swingWindow
operator|.
name|addWindowListener
argument_list|(
name|fxOverSwingHelper
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|swingWindow
operator|.
name|removeWindowListener
argument_list|(
name|fxOverSwingHelper
argument_list|)
expr_stmt|;
block|}
block|}
block|}
DECL|method|setLocationRelativeToMainWindow ()
specifier|private
name|void
name|setLocationRelativeToMainWindow
parameter_list|()
block|{
name|double
name|mainWindowX
init|=
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|getLocationOnScreen
argument_list|()
operator|.
name|getX
argument_list|()
decl_stmt|;
name|double
name|mainWindowY
init|=
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|getLocationOnScreen
argument_list|()
operator|.
name|getY
argument_list|()
decl_stmt|;
name|double
name|mainWindowWidth
init|=
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|getSize
argument_list|()
operator|.
name|getWidth
argument_list|()
decl_stmt|;
name|double
name|mainWindowHeight
init|=
name|JabRefGUI
operator|.
name|getMainFrame
argument_list|()
operator|.
name|getSize
argument_list|()
operator|.
name|getHeight
argument_list|()
decl_stmt|;
name|setX
argument_list|(
operator|(
name|mainWindowX
operator|+
operator|(
name|mainWindowWidth
operator|/
literal|2
operator|)
operator|)
operator|-
operator|(
name|getWidth
argument_list|()
operator|/
literal|2
operator|)
argument_list|)
expr_stmt|;
name|setY
argument_list|(
operator|(
name|mainWindowY
operator|+
operator|(
name|mainWindowHeight
operator|/
literal|2
operator|)
operator|)
operator|-
operator|(
name|getHeight
argument_list|()
operator|/
literal|2
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

