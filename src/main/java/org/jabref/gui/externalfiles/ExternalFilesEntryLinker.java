begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.externalfiles
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiles
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
operator|.
name|ExternalFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
operator|.
name|ExternalFileTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|externalfiletype
operator|.
name|UnknownExternalFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|cleanup
operator|.
name|MoveFilesCleanup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|cleanup
operator|.
name|RenamePdfCleanup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|io
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|LinkedFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|metadata
operator|.
name|FilePreferences
import|;
end_import

begin_class
DECL|class|ExternalFilesEntryLinker
specifier|public
class|class
name|ExternalFilesEntryLinker
block|{
DECL|field|externalFileTypes
specifier|private
specifier|final
name|ExternalFileTypes
name|externalFileTypes
decl_stmt|;
DECL|field|filePreferences
specifier|private
specifier|final
name|FilePreferences
name|filePreferences
decl_stmt|;
DECL|field|bibDatabaseContext
specifier|private
specifier|final
name|BibDatabaseContext
name|bibDatabaseContext
decl_stmt|;
DECL|field|moveFilesCleanup
specifier|private
specifier|final
name|MoveFilesCleanup
name|moveFilesCleanup
decl_stmt|;
DECL|field|renameFilesCleanup
specifier|private
specifier|final
name|RenamePdfCleanup
name|renameFilesCleanup
decl_stmt|;
DECL|method|ExternalFilesEntryLinker (ExternalFileTypes externalFileTypes, FilePreferences filePreferences, BibDatabaseContext bibDatabaseContext)
specifier|public
name|ExternalFilesEntryLinker
parameter_list|(
name|ExternalFileTypes
name|externalFileTypes
parameter_list|,
name|FilePreferences
name|filePreferences
parameter_list|,
name|BibDatabaseContext
name|bibDatabaseContext
parameter_list|)
block|{
name|this
operator|.
name|externalFileTypes
operator|=
name|externalFileTypes
expr_stmt|;
name|this
operator|.
name|filePreferences
operator|=
name|filePreferences
expr_stmt|;
name|this
operator|.
name|bibDatabaseContext
operator|=
name|bibDatabaseContext
expr_stmt|;
name|this
operator|.
name|moveFilesCleanup
operator|=
operator|new
name|MoveFilesCleanup
argument_list|(
name|bibDatabaseContext
argument_list|,
name|filePreferences
argument_list|)
expr_stmt|;
name|this
operator|.
name|renameFilesCleanup
operator|=
operator|new
name|RenamePdfCleanup
argument_list|(
literal|false
argument_list|,
name|bibDatabaseContext
argument_list|,
name|filePreferences
argument_list|)
expr_stmt|;
block|}
DECL|method|copyFileToFileDir (Path file)
specifier|public
name|Optional
argument_list|<
name|Path
argument_list|>
name|copyFileToFileDir
parameter_list|(
name|Path
name|file
parameter_list|)
block|{
name|Optional
argument_list|<
name|Path
argument_list|>
name|firstExistingFileDir
init|=
name|bibDatabaseContext
operator|.
name|getFirstExistingFileDir
argument_list|(
name|filePreferences
argument_list|)
decl_stmt|;
if|if
condition|(
name|firstExistingFileDir
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|Path
name|targetFile
init|=
name|firstExistingFileDir
operator|.
name|get
argument_list|()
operator|.
name|resolve
argument_list|(
name|file
operator|.
name|getFileName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|FileUtil
operator|.
name|copyFile
argument_list|(
name|file
argument_list|,
name|targetFile
argument_list|,
literal|false
argument_list|)
condition|)
block|{
return|return
name|Optional
operator|.
name|ofNullable
argument_list|(
name|targetFile
argument_list|)
return|;
block|}
block|}
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
DECL|method|renameLinkedFilesToPattern (BibEntry entry)
specifier|public
name|void
name|renameLinkedFilesToPattern
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|renameFilesCleanup
operator|.
name|cleanup
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
DECL|method|moveLinkedFilesToFileDir (BibEntry entry)
specifier|public
name|void
name|moveLinkedFilesToFileDir
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|moveFilesCleanup
operator|.
name|cleanup
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
DECL|method|addFileToEntry (BibEntry entry, Path file)
specifier|public
name|void
name|addFileToEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|,
name|Path
name|file
parameter_list|)
block|{
name|addFilesToEntry
argument_list|(
name|entry
argument_list|,
name|Arrays
operator|.
name|asList
argument_list|(
name|file
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|addFilesToEntry (BibEntry entry, List<Path> files)
specifier|public
name|void
name|addFilesToEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|,
name|List
argument_list|<
name|Path
argument_list|>
name|files
parameter_list|)
block|{
for|for
control|(
name|Path
name|file
range|:
name|files
control|)
block|{
name|FileUtil
operator|.
name|getFileExtension
argument_list|(
name|file
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|ext
lambda|->
block|{
name|ExternalFileType
name|type
init|=
name|externalFileTypes
operator|.
name|getExternalFileTypeByExt
argument_list|(
name|ext
argument_list|)
operator|.
name|orElse
argument_list|(
operator|new
name|UnknownExternalFileType
argument_list|(
name|ext
argument_list|)
argument_list|)
decl_stmt|;
name|Path
name|relativePath
init|=
name|FileUtil
operator|.
name|relativize
argument_list|(
name|file
argument_list|,
name|bibDatabaseContext
operator|.
name|getFileDirectoriesAsPaths
argument_list|(
name|filePreferences
argument_list|)
argument_list|)
decl_stmt|;
name|LinkedFile
name|linkedfile
init|=
operator|new
name|LinkedFile
argument_list|(
literal|""
argument_list|,
name|relativePath
operator|.
name|toString
argument_list|()
argument_list|,
name|type
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|entry
operator|.
name|addFile
argument_list|(
name|linkedfile
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

