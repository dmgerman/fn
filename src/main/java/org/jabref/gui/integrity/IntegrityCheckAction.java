begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.integrity
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|integrity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|concurrent
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|Globals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|Dialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|StateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|SimpleCommand
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|util
operator|.
name|TaskExecutor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
operator|.
name|IntegrityCheck
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
operator|.
name|IntegrityMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|actions
operator|.
name|ActionHelper
operator|.
name|needsDatabase
import|;
end_import

begin_class
DECL|class|IntegrityCheckAction
specifier|public
class|class
name|IntegrityCheckAction
extends|extends
name|SimpleCommand
block|{
DECL|field|taskExecutor
specifier|private
specifier|final
name|TaskExecutor
name|taskExecutor
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|field|frame
specifier|private
specifier|final
name|JabRefFrame
name|frame
decl_stmt|;
DECL|field|stateManager
specifier|private
specifier|final
name|StateManager
name|stateManager
decl_stmt|;
DECL|method|IntegrityCheckAction (JabRefFrame frame, StateManager stateManager, TaskExecutor taskExecutor)
specifier|public
name|IntegrityCheckAction
parameter_list|(
name|JabRefFrame
name|frame
parameter_list|,
name|StateManager
name|stateManager
parameter_list|,
name|TaskExecutor
name|taskExecutor
parameter_list|)
block|{
name|this
operator|.
name|frame
operator|=
name|frame
expr_stmt|;
name|this
operator|.
name|stateManager
operator|=
name|stateManager
expr_stmt|;
name|this
operator|.
name|taskExecutor
operator|=
name|taskExecutor
expr_stmt|;
name|this
operator|.
name|dialogService
operator|=
name|frame
operator|.
name|getDialogService
argument_list|()
expr_stmt|;
name|this
operator|.
name|executable
operator|.
name|bind
argument_list|(
name|needsDatabase
argument_list|(
name|this
operator|.
name|stateManager
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|execute ()
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|BibDatabaseContext
name|database
init|=
name|stateManager
operator|.
name|getActiveDatabase
argument_list|()
operator|.
name|orElseThrow
argument_list|(
parameter_list|()
lambda|->
operator|new
name|NullPointerException
argument_list|(
literal|"Database null"
argument_list|)
argument_list|)
decl_stmt|;
name|IntegrityCheck
name|check
init|=
operator|new
name|IntegrityCheck
argument_list|(
name|database
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getFilePreferences
argument_list|()
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getBibtexKeyPatternPreferences
argument_list|()
argument_list|,
name|Globals
operator|.
name|journalAbbreviationLoader
operator|.
name|getRepository
argument_list|(
name|Globals
operator|.
name|prefs
operator|.
name|getJournalAbbreviationPreferences
argument_list|()
argument_list|)
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|ENFORCE_LEGAL_BIBTEX_KEY
argument_list|)
argument_list|,
name|Globals
operator|.
name|prefs
operator|.
name|getBoolean
argument_list|(
name|JabRefPreferences
operator|.
name|ALLOW_INTEGER_EDITION_BIBTEX
argument_list|)
argument_list|)
decl_stmt|;
name|Task
argument_list|<
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
argument_list|>
name|task
init|=
operator|new
name|Task
argument_list|<
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|protected
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|call
parameter_list|()
block|{
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|ObservableList
argument_list|<
name|BibEntry
argument_list|>
name|entries
init|=
name|database
operator|.
name|getDatabase
argument_list|()
operator|.
name|getEntries
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|entries
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|isCancelled
argument_list|()
condition|)
block|{
break|break;
block|}
name|BibEntry
name|entry
init|=
name|entries
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
name|result
operator|.
name|addAll
argument_list|(
name|check
operator|.
name|checkBibtexEntry
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|updateProgress
argument_list|(
name|i
argument_list|,
name|entries
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
block|}
decl_stmt|;
name|task
operator|.
name|setOnSucceeded
argument_list|(
name|value
lambda|->
block|{
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|messages
init|=
name|task
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|messages
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|dialogService
operator|.
name|notify
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"No problems found."
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|Dialog
argument_list|<
name|Void
argument_list|>
name|dialog
init|=
operator|new
name|IntegrityCheckDialog
argument_list|(
name|messages
argument_list|,
name|frame
operator|.
name|getCurrentBasePanel
argument_list|()
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|showAndWait
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|task
operator|.
name|setOnFailed
argument_list|(
name|event
lambda|->
name|dialogService
operator|.
name|showErrorDialogAndWait
argument_list|(
literal|"Integrity check failed."
argument_list|)
argument_list|)
expr_stmt|;
name|dialogService
operator|.
name|showProgressDialogAndWait
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"Checking integrity..."
argument_list|)
argument_list|,
name|Localization
operator|.
name|lang
argument_list|(
literal|"Checking integrity..."
argument_list|)
argument_list|,
name|task
argument_list|)
expr_stmt|;
name|taskExecutor
operator|.
name|execute
argument_list|(
name|task
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

