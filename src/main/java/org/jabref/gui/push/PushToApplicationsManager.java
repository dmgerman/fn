begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui.push
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|push
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|gui
operator|.
name|DialogService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|preferences
operator|.
name|JabRefPreferences
import|;
end_import

begin_class
DECL|class|PushToApplicationsManager
specifier|public
class|class
name|PushToApplicationsManager
block|{
DECL|field|applications
specifier|private
specifier|final
name|List
argument_list|<
name|PushToApplication
argument_list|>
name|applications
decl_stmt|;
DECL|field|dialogService
specifier|private
specifier|final
name|DialogService
name|dialogService
decl_stmt|;
DECL|method|PushToApplicationsManager (DialogService dialogService)
specifier|public
name|PushToApplicationsManager
parameter_list|(
name|DialogService
name|dialogService
parameter_list|)
block|{
name|this
operator|.
name|dialogService
operator|=
name|dialogService
expr_stmt|;
comment|// Set up the current available choices:
name|applications
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|applications
operator|.
name|add
argument_list|(
operator|new
name|PushToEmacs
argument_list|(
name|dialogService
argument_list|)
argument_list|)
expr_stmt|;
name|applications
operator|.
name|add
argument_list|(
operator|new
name|PushToLyx
argument_list|(
name|dialogService
argument_list|)
argument_list|)
expr_stmt|;
name|applications
operator|.
name|add
argument_list|(
operator|new
name|PushToTexmaker
argument_list|(
name|dialogService
argument_list|)
argument_list|)
expr_stmt|;
name|applications
operator|.
name|add
argument_list|(
operator|new
name|PushToTeXstudio
argument_list|(
name|dialogService
argument_list|)
argument_list|)
expr_stmt|;
name|applications
operator|.
name|add
argument_list|(
operator|new
name|PushToVim
argument_list|(
name|dialogService
argument_list|)
argument_list|)
expr_stmt|;
name|applications
operator|.
name|add
argument_list|(
operator|new
name|PushToWinEdt
argument_list|(
name|dialogService
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getApplications ()
specifier|public
name|List
argument_list|<
name|PushToApplication
argument_list|>
name|getApplications
parameter_list|()
block|{
return|return
name|applications
return|;
block|}
DECL|method|getSettings (PushToApplication application)
specifier|public
name|PushToApplicationSettings
name|getSettings
parameter_list|(
name|PushToApplication
name|application
parameter_list|)
block|{
if|if
condition|(
name|application
operator|instanceof
name|PushToEmacs
condition|)
block|{
return|return
operator|new
name|PushToEmacsSettings
argument_list|(
name|dialogService
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|application
operator|instanceof
name|PushToLyx
condition|)
block|{
return|return
operator|new
name|PushToLyxSettings
argument_list|(
name|dialogService
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|application
operator|instanceof
name|PushToVim
condition|)
block|{
return|return
operator|new
name|PushToVimSettings
argument_list|(
name|dialogService
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|PushToApplicationSettings
argument_list|(
name|dialogService
argument_list|)
return|;
block|}
block|}
DECL|method|getLastUsedApplication (JabRefPreferences preferences)
specifier|public
name|PushToApplication
name|getLastUsedApplication
parameter_list|(
name|JabRefPreferences
name|preferences
parameter_list|)
block|{
name|String
name|appSelected
init|=
name|preferences
operator|.
name|get
argument_list|(
name|JabRefPreferences
operator|.
name|PUSH_TO_APPLICATION
argument_list|)
decl_stmt|;
return|return
name|applications
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|application
lambda|->
name|application
operator|.
name|getApplicationName
argument_list|()
operator|.
name|equals
argument_list|(
name|appSelected
argument_list|)
argument_list|)
operator|.
name|findAny
argument_list|()
operator|.
name|orElse
argument_list|(
name|applications
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

