begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.gui
package|package
name|org
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|scene
operator|.
name|input
operator|.
name|DataFormat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|citationstyle
operator|.
name|PreviewLayout
import|;
end_import

begin_comment
comment|/**  * Contains all the different {@link DataFormat}s that may occur in JabRef.  */
end_comment

begin_class
DECL|class|DragAndDropDataFormats
specifier|public
class|class
name|DragAndDropDataFormats
block|{
DECL|field|GROUP
specifier|public
specifier|static
specifier|final
name|DataFormat
name|GROUP
init|=
operator|new
name|DataFormat
argument_list|(
literal|"dnd/org.jabref.model.groups.GroupTreeNode"
argument_list|)
decl_stmt|;
DECL|field|LINKED_FILE
specifier|public
specifier|static
specifier|final
name|DataFormat
name|LINKED_FILE
init|=
operator|new
name|DataFormat
argument_list|(
literal|"dnd/org.jabref.model.entry.LinkedFile"
argument_list|)
decl_stmt|;
DECL|field|ENTRIES
specifier|public
specifier|static
specifier|final
name|DataFormat
name|ENTRIES
init|=
operator|new
name|DataFormat
argument_list|(
literal|"dnd/org.jabref.model.entry.BibEntries"
argument_list|)
decl_stmt|;
DECL|field|PREVIEWLAYOUTS
specifier|public
specifier|static
specifier|final
name|DataFormat
name|PREVIEWLAYOUTS
init|=
operator|new
name|DataFormat
argument_list|(
literal|"dnd/org.jabref.logic.citationstyle.PreviewLayouts"
argument_list|)
decl_stmt|;
DECL|field|PREVIEWLAYOUT_LIST_CLASS
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
specifier|static
specifier|final
name|Class
argument_list|<
name|List
argument_list|<
name|PreviewLayout
argument_list|>
argument_list|>
name|PREVIEWLAYOUT_LIST_CLASS
init|=
call|(
name|Class
argument_list|<
name|List
argument_list|<
name|PreviewLayout
argument_list|>
argument_list|>
call|)
argument_list|(
name|Class
argument_list|<
name|?
argument_list|>
argument_list|)
name|List
operator|.
name|class
decl_stmt|;
block|}
end_class

end_unit

