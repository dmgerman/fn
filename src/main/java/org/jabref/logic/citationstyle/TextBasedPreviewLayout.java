begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.citationstyle
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|citationstyle
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringReader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|Layout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|LayoutFormatterPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|LayoutHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
DECL|class|TextBasedPreviewLayout
specifier|public
class|class
name|TextBasedPreviewLayout
implements|implements
name|PreviewLayout
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|TextBasedPreviewLayout
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|layout
specifier|private
name|Layout
name|layout
decl_stmt|;
DECL|field|text
specifier|private
name|String
name|text
decl_stmt|;
DECL|field|layoutFormatterPreferences
specifier|private
name|LayoutFormatterPreferences
name|layoutFormatterPreferences
decl_stmt|;
DECL|method|TextBasedPreviewLayout (String text, LayoutFormatterPreferences layoutFormatterPreferences)
specifier|public
name|TextBasedPreviewLayout
parameter_list|(
name|String
name|text
parameter_list|,
name|LayoutFormatterPreferences
name|layoutFormatterPreferences
parameter_list|)
block|{
name|this
operator|.
name|layoutFormatterPreferences
operator|=
name|layoutFormatterPreferences
expr_stmt|;
name|setText
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
DECL|method|TextBasedPreviewLayout (Layout layout)
specifier|public
name|TextBasedPreviewLayout
parameter_list|(
name|Layout
name|layout
parameter_list|)
block|{
name|this
operator|.
name|layout
operator|=
name|layout
expr_stmt|;
name|this
operator|.
name|text
operator|=
name|layout
operator|.
name|toString
argument_list|()
expr_stmt|;
block|}
DECL|method|setText (String text)
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|this
operator|.
name|text
operator|=
name|text
expr_stmt|;
name|StringReader
name|sr
init|=
operator|new
name|StringReader
argument_list|(
name|text
operator|.
name|replace
argument_list|(
literal|"__NEWLINE__"
argument_list|,
literal|"\n"
argument_list|)
argument_list|)
decl_stmt|;
try|try
block|{
name|layout
operator|=
operator|new
name|LayoutHelper
argument_list|(
name|sr
argument_list|,
name|layoutFormatterPreferences
argument_list|)
operator|.
name|getLayoutFromText
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Could not generate layout"
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|generatePreview (BibEntry entry, BibDatabase database)
specifier|public
name|String
name|generatePreview
parameter_list|(
name|BibEntry
name|entry
parameter_list|,
name|BibDatabase
name|database
parameter_list|)
block|{
if|if
condition|(
name|layout
operator|!=
literal|null
condition|)
block|{
return|return
name|layout
operator|.
name|doLayout
argument_list|(
name|entry
argument_list|,
name|database
argument_list|)
return|;
block|}
else|else
block|{
return|return
literal|""
return|;
block|}
block|}
DECL|method|getText ()
specifier|public
name|String
name|getText
parameter_list|()
block|{
return|return
name|text
return|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Preview"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

