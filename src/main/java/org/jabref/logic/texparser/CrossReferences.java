begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.texparser
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|texparser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
operator|.
name|TexParserResult
import|;
end_import

begin_class
DECL|class|CrossReferences
specifier|public
class|class
name|CrossReferences
block|{
DECL|method|CrossReferences ()
specifier|private
name|CrossReferences
parameter_list|()
throws|throws
name|IllegalStateException
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Utility class"
argument_list|)
throw|;
block|}
DECL|method|resolve (BibDatabase database, TexParserResult result, BibEntry entry)
specifier|protected
specifier|static
name|void
name|resolve
parameter_list|(
name|BibDatabase
name|database
parameter_list|,
name|TexParserResult
name|result
parameter_list|,
name|BibEntry
name|entry
parameter_list|)
block|{
name|entry
operator|.
name|getField
argument_list|(
name|FieldName
operator|.
name|CROSSREF
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|crossRef
lambda|->
block|{
if|if
condition|(
operator|!
name|result
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|getEntryByKey
argument_list|(
name|crossRef
argument_list|)
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|refEntry
init|=
name|database
operator|.
name|getEntryByKey
argument_list|(
name|crossRef
argument_list|)
decl_stmt|;
if|if
condition|(
name|refEntry
operator|.
name|isPresent
argument_list|()
condition|)
block|{
name|result
operator|.
name|getGeneratedBibDatabase
argument_list|()
operator|.
name|insertEntry
argument_list|(
operator|(
name|BibEntry
operator|)
name|refEntry
operator|.
name|get
argument_list|()
operator|.
name|clone
argument_list|()
argument_list|)
expr_stmt|;
name|result
operator|.
name|increaseCrossRefEntriesCounter
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|getUnresolvedKeys
argument_list|()
operator|.
name|add
argument_list|(
name|crossRef
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

