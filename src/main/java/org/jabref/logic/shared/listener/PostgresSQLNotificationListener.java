begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.shared.listener
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|shared
operator|.
name|listener
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|shared
operator|.
name|DBMSProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|shared
operator|.
name|DBMSSynchronizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|postgresql
operator|.
name|PGConnection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|postgresql
operator|.
name|PGNotification
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * A listener for PostgreSQL database notifications.  */
end_comment

begin_class
DECL|class|PostgresSQLNotificationListener
specifier|public
class|class
name|PostgresSQLNotificationListener
implements|implements
name|Runnable
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|PostgresSQLNotificationListener
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|dbmsSynchronizer
specifier|private
specifier|final
name|DBMSSynchronizer
name|dbmsSynchronizer
decl_stmt|;
DECL|field|pgConnection
specifier|private
specifier|final
name|PGConnection
name|pgConnection
decl_stmt|;
DECL|field|stop
specifier|private
specifier|volatile
name|boolean
name|stop
decl_stmt|;
DECL|method|PostgresSQLNotificationListener (DBMSSynchronizer dbmsSynchronizer, PGConnection pgConnection)
specifier|public
name|PostgresSQLNotificationListener
parameter_list|(
name|DBMSSynchronizer
name|dbmsSynchronizer
parameter_list|,
name|PGConnection
name|pgConnection
parameter_list|)
block|{
name|this
operator|.
name|dbmsSynchronizer
operator|=
name|dbmsSynchronizer
expr_stmt|;
name|this
operator|.
name|pgConnection
operator|=
name|pgConnection
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|run ()
specifier|public
name|void
name|run
parameter_list|()
block|{
name|stop
operator|=
literal|false
expr_stmt|;
try|try
block|{
comment|//noinspection InfiniteLoopStatement
while|while
condition|(
operator|!
name|stop
condition|)
block|{
name|PGNotification
name|notifications
index|[]
init|=
name|pgConnection
operator|.
name|getNotifications
argument_list|()
decl_stmt|;
if|if
condition|(
name|notifications
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|PGNotification
name|notification
range|:
name|notifications
control|)
block|{
if|if
condition|(
operator|!
name|notification
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|DBMSProcessor
operator|.
name|PROCESSOR_ID
argument_list|)
condition|)
block|{
name|dbmsSynchronizer
operator|.
name|pullChanges
argument_list|()
expr_stmt|;
block|}
block|}
block|}
comment|// Wait a while before checking again for new notifications
name|Thread
operator|.
name|sleep
argument_list|(
literal|500
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|SQLException
decl||
name|InterruptedException
name|exception
parameter_list|)
block|{
name|LOGGER
operator|.
name|error
argument_list|(
literal|"Error while listening for updates to PostgresSQL"
argument_list|,
name|exception
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|stop ()
specifier|public
name|void
name|stop
parameter_list|()
block|{
name|stop
operator|=
literal|true
expr_stmt|;
block|}
block|}
end_class

end_unit

