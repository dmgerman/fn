begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.util
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_class
DECL|class|BuildInfo
specifier|public
class|class
name|BuildInfo
block|{
DECL|field|UNKNOWN_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|UNKNOWN_VERSION
init|=
literal|"*unknown*"
decl_stmt|;
DECL|field|OS
specifier|public
specifier|static
specifier|final
name|String
name|OS
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|,
name|UNKNOWN_VERSION
argument_list|)
decl_stmt|;
DECL|field|OS_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|OS_VERSION
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.version"
argument_list|,
name|UNKNOWN_VERSION
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|OS_ARCH
specifier|public
specifier|static
specifier|final
name|String
name|OS_ARCH
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.arch"
argument_list|,
name|UNKNOWN_VERSION
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|JAVA_VERSION
specifier|public
specifier|static
specifier|final
name|String
name|JAVA_VERSION
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"java.version"
argument_list|,
name|UNKNOWN_VERSION
argument_list|)
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ROOT
argument_list|)
decl_stmt|;
DECL|field|version
specifier|private
specifier|final
name|Version
name|version
decl_stmt|;
DECL|field|authors
specifier|private
specifier|final
name|String
name|authors
decl_stmt|;
DECL|field|developers
specifier|private
specifier|final
name|String
name|developers
decl_stmt|;
DECL|field|year
specifier|private
specifier|final
name|String
name|year
decl_stmt|;
DECL|field|azureInstrumentationKey
specifier|private
specifier|final
name|String
name|azureInstrumentationKey
decl_stmt|;
DECL|field|minRequiredJavaVersion
specifier|private
specifier|final
name|String
name|minRequiredJavaVersion
decl_stmt|;
DECL|field|allowJava9
specifier|private
specifier|final
name|boolean
name|allowJava9
decl_stmt|;
DECL|method|BuildInfo ()
specifier|public
name|BuildInfo
parameter_list|()
block|{
name|this
argument_list|(
literal|"/build.properties"
argument_list|)
expr_stmt|;
block|}
DECL|method|BuildInfo (String path)
specifier|public
name|BuildInfo
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|Properties
name|properties
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
try|try
init|(
name|InputStream
name|stream
init|=
name|BuildInfo
operator|.
name|class
operator|.
name|getResourceAsStream
argument_list|(
name|path
argument_list|)
init|)
block|{
if|if
condition|(
name|stream
operator|!=
literal|null
condition|)
block|{
try|try
init|(
name|InputStreamReader
name|reader
init|=
operator|new
name|InputStreamReader
argument_list|(
name|stream
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
init|)
block|{
name|properties
operator|.
name|load
argument_list|(
name|reader
argument_list|)
expr_stmt|;
block|}
block|}
block|}
catch|catch
parameter_list|(
name|IOException
name|ignored
parameter_list|)
block|{
comment|// nothing to do -> default already set
block|}
name|version
operator|=
name|Version
operator|.
name|parse
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"version"
argument_list|)
argument_list|)
expr_stmt|;
name|authors
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"authors"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|year
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"year"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|developers
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"developers"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|azureInstrumentationKey
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"azureInstrumentationKey"
argument_list|,
literal|""
argument_list|)
expr_stmt|;
name|minRequiredJavaVersion
operator|=
name|properties
operator|.
name|getProperty
argument_list|(
literal|"minRequiredJavaVersion"
argument_list|,
literal|"1.8"
argument_list|)
expr_stmt|;
name|allowJava9
operator|=
literal|"true"
operator|.
name|equals
argument_list|(
name|properties
operator|.
name|getProperty
argument_list|(
literal|"allowJava9"
argument_list|,
literal|""
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|getVersion ()
specifier|public
name|Version
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
DECL|method|getAuthors ()
specifier|public
name|String
name|getAuthors
parameter_list|()
block|{
return|return
name|authors
return|;
block|}
DECL|method|getDevelopers ()
specifier|public
name|String
name|getDevelopers
parameter_list|()
block|{
return|return
name|developers
return|;
block|}
DECL|method|getYear ()
specifier|public
name|String
name|getYear
parameter_list|()
block|{
return|return
name|year
return|;
block|}
DECL|method|getAzureInstrumentationKey ()
specifier|public
name|String
name|getAzureInstrumentationKey
parameter_list|()
block|{
return|return
name|azureInstrumentationKey
return|;
block|}
DECL|method|getMinRequiredJavaVersion ()
specifier|public
name|String
name|getMinRequiredJavaVersion
parameter_list|()
block|{
return|return
name|minRequiredJavaVersion
return|;
block|}
DECL|method|isAllowJava9 ()
specifier|public
name|boolean
name|isAllowJava9
parameter_list|()
block|{
return|return
name|allowJava9
return|;
block|}
block|}
end_class

end_unit

