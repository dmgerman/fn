begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.util.strings
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|strings
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|info
operator|.
name|debatty
operator|.
name|java
operator|.
name|stringsimilarity
operator|.
name|Levenshtein
import|;
end_import

begin_class
DECL|class|StringSimilarity
specifier|public
class|class
name|StringSimilarity
block|{
DECL|field|METRIC_DISTANCE
specifier|private
specifier|final
name|Levenshtein
name|METRIC_DISTANCE
init|=
operator|new
name|Levenshtein
argument_list|()
decl_stmt|;
comment|// edit distance threshold for entry title comnparison
DECL|field|METRIC_THRESHOLD
specifier|private
specifier|final
name|int
name|METRIC_THRESHOLD
init|=
literal|4
decl_stmt|;
comment|/**      * String similarity based on Levenshtein, ignoreCase, and fixed metric threshold of 4.      *      * @param a String to compare      * @param b String to compare      * @return true if Strings are considered as similar by the algorithm      */
DECL|method|isSimilar (String a, String b)
specifier|public
name|boolean
name|isSimilar
parameter_list|(
name|String
name|a
parameter_list|,
name|String
name|b
parameter_list|)
block|{
return|return
name|editDistanceIgnoreCase
argument_list|(
name|a
argument_list|,
name|b
argument_list|)
operator|<=
name|METRIC_THRESHOLD
return|;
block|}
DECL|method|editDistanceIgnoreCase (String a, String b)
specifier|private
name|double
name|editDistanceIgnoreCase
parameter_list|(
name|String
name|a
parameter_list|,
name|String
name|b
parameter_list|)
block|{
comment|// TODO: locale is dependent on the language of the strings?!
return|return
name|METRIC_DISTANCE
operator|.
name|distance
argument_list|(
name|a
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|)
argument_list|,
name|b
operator|.
name|toLowerCase
argument_list|(
name|Locale
operator|.
name|ENGLISH
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

