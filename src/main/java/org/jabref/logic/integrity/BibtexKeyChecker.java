begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.integrity
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
operator|.
name|IntegrityCheck
operator|.
name|Checker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|InternalField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|StandardField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_comment
comment|/**  * Currently only checks the key if there is an author, year, and title present.  */
end_comment

begin_class
DECL|class|BibtexKeyChecker
specifier|public
class|class
name|BibtexKeyChecker
implements|implements
name|Checker
block|{
annotation|@
name|Override
DECL|method|check (BibEntry entry)
specifier|public
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|check
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|Optional
argument_list|<
name|String
argument_list|>
name|author
init|=
name|entry
operator|.
name|getField
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|)
decl_stmt|;
name|Optional
argument_list|<
name|String
argument_list|>
name|title
init|=
name|entry
operator|.
name|getField
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|)
decl_stmt|;
name|Optional
argument_list|<
name|String
argument_list|>
name|year
init|=
name|entry
operator|.
name|getField
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|author
operator|.
name|isPresent
argument_list|()
operator|||
operator|!
name|title
operator|.
name|isPresent
argument_list|()
operator|||
operator|!
name|year
operator|.
name|isPresent
argument_list|()
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
if|if
condition|(
name|StringUtil
operator|.
name|isBlank
argument_list|(
name|entry
operator|.
name|getCiteKeyOptional
argument_list|()
argument_list|)
condition|)
block|{
name|String
name|authorTitleYear
init|=
name|entry
operator|.
name|getAuthorTitleYear
argument_list|(
literal|100
argument_list|)
decl_stmt|;
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
operator|new
name|IntegrityMessage
argument_list|(
name|Localization
operator|.
name|lang
argument_list|(
literal|"empty BibTeX key"
argument_list|)
operator|+
literal|": "
operator|+
name|authorTitleYear
argument_list|,
name|entry
argument_list|,
name|InternalField
operator|.
name|KEY_FIELD
argument_list|)
argument_list|)
return|;
block|}
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
block|}
end_class

end_unit

