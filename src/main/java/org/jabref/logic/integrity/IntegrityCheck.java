begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.integrity
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|integrity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|bibtexkeypattern
operator|.
name|BibtexKeyPatternPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|JournalAbbreviationRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|metadata
operator|.
name|FileDirectoryPreferences
import|;
end_import

begin_class
DECL|class|IntegrityCheck
specifier|public
class|class
name|IntegrityCheck
block|{
DECL|field|bibDatabaseContext
specifier|private
specifier|final
name|BibDatabaseContext
name|bibDatabaseContext
decl_stmt|;
DECL|field|fileDirectoryPreferences
specifier|private
specifier|final
name|FileDirectoryPreferences
name|fileDirectoryPreferences
decl_stmt|;
DECL|field|bibtexKeyPatternPreferences
specifier|private
specifier|final
name|BibtexKeyPatternPreferences
name|bibtexKeyPatternPreferences
decl_stmt|;
DECL|field|journalAbbreviationRepository
specifier|private
specifier|final
name|JournalAbbreviationRepository
name|journalAbbreviationRepository
decl_stmt|;
DECL|method|IntegrityCheck (BibDatabaseContext bibDatabaseContext, FileDirectoryPreferences fileDirectoryPreferences, BibtexKeyPatternPreferences bibtexKeyPatternPreferences, JournalAbbreviationRepository journalAbbreviationRepository )
specifier|public
name|IntegrityCheck
parameter_list|(
name|BibDatabaseContext
name|bibDatabaseContext
parameter_list|,
name|FileDirectoryPreferences
name|fileDirectoryPreferences
parameter_list|,
name|BibtexKeyPatternPreferences
name|bibtexKeyPatternPreferences
parameter_list|,
name|JournalAbbreviationRepository
name|journalAbbreviationRepository
parameter_list|)
block|{
name|this
operator|.
name|bibDatabaseContext
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|bibDatabaseContext
argument_list|)
expr_stmt|;
name|this
operator|.
name|fileDirectoryPreferences
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|fileDirectoryPreferences
argument_list|)
expr_stmt|;
name|this
operator|.
name|bibtexKeyPatternPreferences
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|bibtexKeyPatternPreferences
argument_list|)
expr_stmt|;
name|this
operator|.
name|journalAbbreviationRepository
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|journalAbbreviationRepository
argument_list|)
expr_stmt|;
block|}
DECL|method|checkBibtexDatabase ()
specifier|public
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|checkBibtexDatabase
parameter_list|()
block|{
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|BibEntry
name|entry
range|:
name|bibDatabaseContext
operator|.
name|getDatabase
argument_list|()
operator|.
name|getEntries
argument_list|()
control|)
block|{
name|result
operator|.
name|addAll
argument_list|(
name|checkBibtexEntry
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|result
return|;
block|}
DECL|method|checkBibtexEntry (BibEntry entry)
specifier|private
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|checkBibtexEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|entry
operator|==
literal|null
condition|)
block|{
return|return
name|result
return|;
block|}
name|FieldCheckers
name|fieldCheckers
init|=
operator|new
name|FieldCheckers
argument_list|(
name|bibDatabaseContext
argument_list|,
name|fileDirectoryPreferences
argument_list|,
name|journalAbbreviationRepository
argument_list|)
decl_stmt|;
for|for
control|(
name|FieldChecker
name|checker
range|:
name|fieldCheckers
operator|.
name|getAll
argument_list|()
control|)
block|{
name|result
operator|.
name|addAll
argument_list|(
name|checker
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|bibDatabaseContext
operator|.
name|isBiblatexMode
argument_list|()
condition|)
block|{
comment|// BibTeX only checkers
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|ASCIICharacterChecker
argument_list|()
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|NoBibtexFieldChecker
argument_list|()
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|BibTeXEntryTypeChecker
argument_list|()
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|JournalInAbbreviationListChecker
argument_list|(
name|FieldName
operator|.
name|JOURNAL
argument_list|,
name|journalAbbreviationRepository
argument_list|)
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|JournalInAbbreviationListChecker
argument_list|(
name|FieldName
operator|.
name|JOURNALTITLE
argument_list|,
name|journalAbbreviationRepository
argument_list|)
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|BibtexKeyChecker
argument_list|()
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|TypeChecker
argument_list|()
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|BibStringChecker
argument_list|()
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|HTMLCharacterChecker
argument_list|()
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|EntryLinkChecker
argument_list|(
name|bibDatabaseContext
operator|.
name|getDatabase
argument_list|()
argument_list|)
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
name|result
operator|.
name|addAll
argument_list|(
operator|new
name|BibtexkeyDeviationChecker
argument_list|(
name|bibDatabaseContext
argument_list|,
name|bibtexKeyPatternPreferences
argument_list|)
operator|.
name|check
argument_list|(
name|entry
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|FunctionalInterface
DECL|interface|Checker
specifier|public
interface|interface
name|Checker
block|{
DECL|method|check (BibEntry entry)
name|List
argument_list|<
name|IntegrityMessage
argument_list|>
name|check
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
function_decl|;
block|}
block|}
end_class

end_unit

