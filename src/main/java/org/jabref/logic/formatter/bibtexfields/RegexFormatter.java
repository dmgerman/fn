begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.formatter.bibtexfields
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|formatter
operator|.
name|bibtexfields
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|l10n
operator|.
name|Localization
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|cleanup
operator|.
name|Formatter
import|;
end_import

begin_class
DECL|class|RegexFormatter
specifier|public
class|class
name|RegexFormatter
implements|implements
name|Formatter
block|{
DECL|field|regex
specifier|private
specifier|static
name|String
index|[]
name|regex
decl_stmt|;
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Regex"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getKey ()
specifier|public
name|String
name|getKey
parameter_list|()
block|{
return|return
literal|"regex"
return|;
block|}
annotation|@
name|Override
DECL|method|format (String input)
specifier|public
name|String
name|format
parameter_list|(
name|String
name|input
parameter_list|)
block|{
if|if
condition|(
name|regex
operator|==
literal|null
condition|)
block|{
return|return
name|input
return|;
block|}
return|return
name|input
operator|.
name|replaceAll
argument_list|(
name|regex
index|[
literal|0
index|]
argument_list|,
name|regex
index|[
literal|1
index|]
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|Localization
operator|.
name|lang
argument_list|(
literal|"Add a regular expression for the key pattern."
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getExampleInput ()
specifier|public
name|String
name|getExampleInput
parameter_list|()
block|{
return|return
literal|"Please replace the spaces"
return|;
block|}
DECL|method|setRegex (String rex)
specifier|public
specifier|static
name|void
name|setRegex
parameter_list|(
name|String
name|rex
parameter_list|)
block|{
comment|// formatting is like ("exp1","exp2"), we want to remove (" and ")
name|rex
operator|=
name|rex
operator|.
name|substring
argument_list|(
literal|2
argument_list|,
name|rex
operator|.
name|length
argument_list|()
operator|-
literal|2
argument_list|)
expr_stmt|;
name|String
index|[]
name|parts
init|=
name|rex
operator|.
name|split
argument_list|(
literal|"\",\""
argument_list|)
decl_stmt|;
name|regex
operator|=
name|parts
expr_stmt|;
block|}
block|}
end_class

end_unit

