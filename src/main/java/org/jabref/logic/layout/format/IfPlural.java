begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.layout.format
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|format
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|AbstractParamLayoutFormatter
import|;
end_import

begin_comment
comment|/**  * @author ralmond  *  * This formatter takes two arguments and examines the field text.  * If the field text represents multiple individuals, that is it contains the string "and"  * then the field text is replaced with the first argument, otherwise it is replaced with the second.  * For example:  *  * \format[IfPlural(Eds.,Ed.)]{\editor}  *  * Should expand to 'Eds.' if the document has more than one editor and 'Ed.' if it only has one.  *  *  */
end_comment

begin_class
DECL|class|IfPlural
specifier|public
class|class
name|IfPlural
extends|extends
name|AbstractParamLayoutFormatter
block|{
DECL|field|pluralText
specifier|private
name|String
name|pluralText
decl_stmt|;
DECL|field|singularText
specifier|private
name|String
name|singularText
decl_stmt|;
annotation|@
name|Override
DECL|method|setArgument (String arg)
specifier|public
name|void
name|setArgument
parameter_list|(
name|String
name|arg
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|parts
init|=
name|AbstractParamLayoutFormatter
operator|.
name|parseArgument
argument_list|(
name|arg
argument_list|)
decl_stmt|;
if|if
condition|(
name|parts
operator|.
name|size
argument_list|()
operator|<
literal|2
condition|)
block|{
return|return;
comment|// TODO: too few arguments. Print an error message here?
block|}
name|pluralText
operator|=
name|parts
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|singularText
operator|=
name|parts
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|format (String fieldText)
specifier|public
name|String
name|format
parameter_list|(
name|String
name|fieldText
parameter_list|)
block|{
if|if
condition|(
operator|(
name|fieldText
operator|==
literal|null
operator|)
operator|||
name|fieldText
operator|.
name|isEmpty
argument_list|()
operator|||
operator|(
name|pluralText
operator|==
literal|null
operator|)
condition|)
block|{
return|return
literal|""
return|;
comment|// TODO: argument missing or invalid. Print an error message here?
block|}
if|if
condition|(
name|fieldText
operator|.
name|matches
argument_list|(
literal|".*\\sand\\s.*"
argument_list|)
condition|)
block|{
return|return
name|pluralText
return|;
block|}
else|else
block|{
return|return
name|singularText
return|;
block|}
block|}
block|}
end_class

end_unit

