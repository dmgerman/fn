begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.layout.format
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|format
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|ZonedDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|format
operator|.
name|DateTimeFormatter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|LayoutFormatter
import|;
end_import

begin_comment
comment|/**  * Inserts the current date (the time a database is being exported).  *  *<p>If a fieldText is given, it must be a valid {@link DateTimeFormatter} pattern.  * If none is given, the format pattern will be<code>yyyy-MM-dd hh:mm:ss z</code>.  * This follows ISO-8601. Reason:<a href="https://xkcd.com/1179/">https://xkcd.com/1179/</a>.</p>  *  * @author andreas_sf at rudert-home dot de  */
end_comment

begin_class
DECL|class|CurrentDate
specifier|public
class|class
name|CurrentDate
implements|implements
name|LayoutFormatter
block|{
comment|// default time stamp follows ISO-8601. Reason: https://xkcd.com/1179/
DECL|field|DEFAULT_FORMAT
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_FORMAT
init|=
literal|"yyyy-MM-dd hh:mm:ss z"
decl_stmt|;
comment|/*      *  (non-Javadoc)      * @see net.sf.jabref.export.layout.LayoutFormatter#format(java.lang.String)      */
annotation|@
name|Override
DECL|method|format (String fieldText)
specifier|public
name|String
name|format
parameter_list|(
name|String
name|fieldText
parameter_list|)
block|{
name|String
name|format
init|=
name|CurrentDate
operator|.
name|DEFAULT_FORMAT
decl_stmt|;
if|if
condition|(
operator|(
name|fieldText
operator|!=
literal|null
operator|)
operator|&&
operator|!
name|fieldText
operator|.
name|trim
argument_list|()
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|format
operator|=
name|fieldText
expr_stmt|;
block|}
return|return
name|ZonedDateTime
operator|.
name|now
argument_list|()
operator|.
name|format
argument_list|(
name|DateTimeFormatter
operator|.
name|ofPattern
argument_list|(
name|format
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

