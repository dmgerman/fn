begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.layout.format
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|format
package|;
end_package

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|layout
operator|.
name|LayoutFormatter
import|;
end_import

begin_class
DECL|class|CreateBibORDFAuthors
specifier|public
class|class
name|CreateBibORDFAuthors
implements|implements
name|LayoutFormatter
block|{
annotation|@
name|Override
DECL|method|format (String fieldText)
specifier|public
name|String
name|format
parameter_list|(
name|String
name|fieldText
parameter_list|)
block|{
comment|// Yeah, the format is quite verbose... sorry about that :)
comment|//<bibo:contribution>
comment|//<bibo:Contribution>
comment|//<bibo:role rdf:resource="http://purl.org/ontology/bibo/roles/author" />
comment|//<bibo:contributor><foaf:Person foaf:name="Ola Spjuth"/></bibo:contributor>
comment|//<bibo:position>1</bibo:position>
comment|//</bibo:Contribution>
comment|//</bibo:contribution>
name|StringBuilder
name|sb
init|=
operator|new
name|StringBuilder
argument_list|(
literal|100
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|fieldText
operator|.
name|contains
argument_list|(
literal|" and "
argument_list|)
condition|)
block|{
name|singleAuthor
argument_list|(
name|sb
argument_list|,
name|fieldText
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
index|[]
name|names
init|=
name|fieldText
operator|.
name|split
argument_list|(
literal|" and "
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|names
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|singleAuthor
argument_list|(
name|sb
argument_list|,
name|names
index|[
name|i
index|]
argument_list|,
name|i
operator|+
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|<
operator|(
name|names
operator|.
name|length
operator|-
literal|1
operator|)
condition|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|'\n'
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|sb
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|singleAuthor (StringBuilder sb, String author, int position)
specifier|private
specifier|static
name|void
name|singleAuthor
parameter_list|(
name|StringBuilder
name|sb
parameter_list|,
name|String
name|author
parameter_list|,
name|int
name|position
parameter_list|)
block|{
name|sb
operator|.
name|append
argument_list|(
literal|"<bibo:contribution>\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"<bibo:Contribution>\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"<bibo:role rdf:resource=\"http://purl.org/ontology/bibo/roles/author\" />\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"<bibo:contributor><foaf:Person foaf:name=\""
argument_list|)
operator|.
name|append
argument_list|(
name|author
argument_list|)
operator|.
name|append
argument_list|(
literal|"\"/></bibo:contributor>\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"<bibo:position>"
argument_list|)
operator|.
name|append
argument_list|(
name|position
argument_list|)
operator|.
name|append
argument_list|(
literal|"</bibo:position>\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"</bibo:Contribution>\n"
argument_list|)
expr_stmt|;
name|sb
operator|.
name|append
argument_list|(
literal|"</bibo:contribution>\n"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

