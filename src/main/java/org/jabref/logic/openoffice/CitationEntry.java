begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.openoffice
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|openoffice
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_class
DECL|class|CitationEntry
specifier|public
class|class
name|CitationEntry
implements|implements
name|Comparable
argument_list|<
name|CitationEntry
argument_list|>
block|{
DECL|field|refMarkName
specifier|private
specifier|final
name|String
name|refMarkName
decl_stmt|;
DECL|field|pageInfo
specifier|private
specifier|final
name|Optional
argument_list|<
name|String
argument_list|>
name|pageInfo
decl_stmt|;
DECL|field|context
specifier|private
specifier|final
name|String
name|context
decl_stmt|;
DECL|method|CitationEntry (String refMarkName, String context)
specifier|public
name|CitationEntry
parameter_list|(
name|String
name|refMarkName
parameter_list|,
name|String
name|context
parameter_list|)
block|{
name|this
argument_list|(
name|refMarkName
argument_list|,
name|context
argument_list|,
name|Optional
operator|.
name|empty
argument_list|()
argument_list|)
expr_stmt|;
block|}
DECL|method|CitationEntry (String refMarkName, String context, String pageInfo)
specifier|public
name|CitationEntry
parameter_list|(
name|String
name|refMarkName
parameter_list|,
name|String
name|context
parameter_list|,
name|String
name|pageInfo
parameter_list|)
block|{
name|this
argument_list|(
name|refMarkName
argument_list|,
name|context
argument_list|,
name|Optional
operator|.
name|ofNullable
argument_list|(
name|pageInfo
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|CitationEntry (String refMarkName, String context, Optional<String> pageInfo)
specifier|public
name|CitationEntry
parameter_list|(
name|String
name|refMarkName
parameter_list|,
name|String
name|context
parameter_list|,
name|Optional
argument_list|<
name|String
argument_list|>
name|pageInfo
parameter_list|)
block|{
name|this
operator|.
name|refMarkName
operator|=
name|refMarkName
expr_stmt|;
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|this
operator|.
name|pageInfo
operator|=
name|pageInfo
expr_stmt|;
block|}
DECL|method|getPageInfo ()
specifier|public
name|Optional
argument_list|<
name|String
argument_list|>
name|getPageInfo
parameter_list|()
block|{
return|return
name|pageInfo
return|;
block|}
DECL|method|getRefMarkName ()
specifier|public
name|String
name|getRefMarkName
parameter_list|()
block|{
return|return
name|refMarkName
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (CitationEntry other)
specifier|public
name|int
name|compareTo
parameter_list|(
name|CitationEntry
name|other
parameter_list|)
block|{
return|return
name|this
operator|.
name|refMarkName
operator|.
name|compareTo
argument_list|(
name|other
operator|.
name|refMarkName
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|instanceof
name|CitationEntry
condition|)
block|{
name|CitationEntry
name|other
init|=
operator|(
name|CitationEntry
operator|)
name|o
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|this
operator|.
name|refMarkName
argument_list|,
name|other
operator|.
name|refMarkName
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|refMarkName
argument_list|)
return|;
block|}
DECL|method|getContext ()
specifier|public
name|String
name|getContext
parameter_list|()
block|{
return|return
name|context
return|;
block|}
block|}
end_class

end_unit

