begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.cleanup
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|cleanup
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EnumSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|cleanup
operator|.
name|FieldFormatterCleanups
import|;
end_import

begin_class
DECL|class|CleanupPreset
specifier|public
class|class
name|CleanupPreset
block|{
DECL|field|activeJobs
specifier|private
specifier|final
name|Set
argument_list|<
name|CleanupStep
argument_list|>
name|activeJobs
decl_stmt|;
DECL|field|formatterCleanups
specifier|private
specifier|final
name|FieldFormatterCleanups
name|formatterCleanups
decl_stmt|;
DECL|method|CleanupPreset (Set<CleanupStep> activeJobs)
specifier|public
name|CleanupPreset
parameter_list|(
name|Set
argument_list|<
name|CleanupStep
argument_list|>
name|activeJobs
parameter_list|)
block|{
name|this
argument_list|(
name|activeJobs
argument_list|,
operator|new
name|FieldFormatterCleanups
argument_list|(
literal|false
argument_list|,
operator|new
name|ArrayList
argument_list|<>
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|CleanupPreset (CleanupStep activeJob)
specifier|public
name|CleanupPreset
parameter_list|(
name|CleanupStep
name|activeJob
parameter_list|)
block|{
name|this
argument_list|(
name|EnumSet
operator|.
name|of
argument_list|(
name|activeJob
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|CleanupPreset (FieldFormatterCleanups formatterCleanups)
specifier|public
name|CleanupPreset
parameter_list|(
name|FieldFormatterCleanups
name|formatterCleanups
parameter_list|)
block|{
name|this
argument_list|(
name|EnumSet
operator|.
name|noneOf
argument_list|(
name|CleanupStep
operator|.
name|class
argument_list|)
argument_list|,
name|formatterCleanups
argument_list|)
expr_stmt|;
block|}
DECL|method|CleanupPreset (Set<CleanupStep> activeJobs, FieldFormatterCleanups formatterCleanups)
specifier|public
name|CleanupPreset
parameter_list|(
name|Set
argument_list|<
name|CleanupStep
argument_list|>
name|activeJobs
parameter_list|,
name|FieldFormatterCleanups
name|formatterCleanups
parameter_list|)
block|{
name|this
operator|.
name|activeJobs
operator|=
name|activeJobs
expr_stmt|;
name|this
operator|.
name|formatterCleanups
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|formatterCleanups
argument_list|)
expr_stmt|;
block|}
DECL|method|getActiveJobs ()
specifier|public
name|Set
argument_list|<
name|CleanupStep
argument_list|>
name|getActiveJobs
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|activeJobs
argument_list|)
return|;
block|}
DECL|method|isRenamePDFActive ()
specifier|public
name|boolean
name|isRenamePDFActive
parameter_list|()
block|{
return|return
name|isActive
argument_list|(
name|CleanupStep
operator|.
name|RENAME_PDF
argument_list|)
operator|||
name|isActive
argument_list|(
name|CleanupStep
operator|.
name|RENAME_PDF_ONLY_RELATIVE_PATHS
argument_list|)
return|;
block|}
DECL|method|isActive (CleanupStep step)
specifier|public
name|Boolean
name|isActive
parameter_list|(
name|CleanupStep
name|step
parameter_list|)
block|{
return|return
name|activeJobs
operator|.
name|contains
argument_list|(
name|step
argument_list|)
return|;
block|}
DECL|method|getFormatterCleanups ()
specifier|public
name|FieldFormatterCleanups
name|getFormatterCleanups
parameter_list|()
block|{
return|return
name|formatterCleanups
return|;
block|}
DECL|enum|CleanupStep
specifier|public
enum|enum
name|CleanupStep
block|{
comment|/**          * Removes the http://... for each DOI. Moves DOIs from URL and NOTE filed to DOI field.          */
DECL|enumConstant|CLEAN_UP_DOI
name|CLEAN_UP_DOI
block|,
DECL|enumConstant|CLEANUP_EPRINT
name|CLEANUP_EPRINT
block|,
DECL|enumConstant|MAKE_PATHS_RELATIVE
name|MAKE_PATHS_RELATIVE
block|,
DECL|enumConstant|RENAME_PDF
name|RENAME_PDF
block|,
DECL|enumConstant|RENAME_PDF_ONLY_RELATIVE_PATHS
name|RENAME_PDF_ONLY_RELATIVE_PATHS
block|,
comment|/**          * Collects file links from the pdf or ps field, and adds them to the list contained in the file field.          */
DECL|enumConstant|CLEAN_UP_UPGRADE_EXTERNAL_LINKS
name|CLEAN_UP_UPGRADE_EXTERNAL_LINKS
block|,
comment|/**          * Converts to biblatex format          */
DECL|enumConstant|CONVERT_TO_BIBLATEX
name|CONVERT_TO_BIBLATEX
block|,
comment|/**          * Converts to bibtex format          */
DECL|enumConstant|CONVERT_TO_BIBTEX
name|CONVERT_TO_BIBTEX
block|,
DECL|enumConstant|MOVE_PDF
name|MOVE_PDF
block|,
DECL|enumConstant|FIX_FILE_LINKS
name|FIX_FILE_LINKS
block|,
DECL|enumConstant|CLEAN_UP_ISSN
name|CLEAN_UP_ISSN
block|}
block|}
end_class

end_unit

