begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.exporter
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|exporter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|Charset
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|FileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabaseContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_class
DECL|class|Exporter
specifier|public
specifier|abstract
class|class
name|Exporter
block|{
DECL|field|id
specifier|private
name|String
name|id
decl_stmt|;
DECL|field|displayName
specifier|private
name|String
name|displayName
decl_stmt|;
DECL|field|fileType
specifier|private
name|FileType
name|fileType
decl_stmt|;
DECL|method|Exporter (String id, String displayName, FileType fileType)
specifier|public
name|Exporter
parameter_list|(
name|String
name|id
parameter_list|,
name|String
name|displayName
parameter_list|,
name|FileType
name|fileType
parameter_list|)
block|{
name|this
operator|.
name|id
operator|=
name|id
expr_stmt|;
name|this
operator|.
name|displayName
operator|=
name|displayName
expr_stmt|;
name|this
operator|.
name|fileType
operator|=
name|fileType
expr_stmt|;
block|}
comment|/**      * Returns a one-word ID (used, for example, to identify the exporter in the console).      */
DECL|method|getId ()
specifier|public
name|String
name|getId
parameter_list|()
block|{
return|return
name|id
return|;
block|}
comment|/**      * Returns the name of the exporter (to display to the user).      */
DECL|method|getDisplayName ()
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
return|return
name|displayName
return|;
block|}
comment|/**      * Returns the type of files this exporter creates.      */
DECL|method|getFileType ()
specifier|public
name|FileType
name|getFileType
parameter_list|()
block|{
return|return
name|fileType
return|;
block|}
comment|/**      * Performs the export.      *      * @param databaseContext the database to export from      * @param file            the file to write to      * @param encoding        the encoding to use      * @param entries         a list containing all entries that should be exported      */
DECL|method|export (BibDatabaseContext databaseContext, Path file, Charset encoding, List<BibEntry> entries)
specifier|public
specifier|abstract
name|void
name|export
parameter_list|(
name|BibDatabaseContext
name|databaseContext
parameter_list|,
name|Path
name|file
parameter_list|,
name|Charset
name|encoding
parameter_list|,
name|List
argument_list|<
name|BibEntry
argument_list|>
name|entries
parameter_list|)
throws|throws
name|Exception
function_decl|;
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|getFileType
argument_list|()
operator|.
name|getDescription
argument_list|()
return|;
block|}
block|}
end_class

end_unit

