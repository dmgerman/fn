begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.autocompleter
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|autocompleter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
operator|.
name|JournalAbbreviationLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|InternalBibtexFields
import|;
end_import

begin_comment
comment|/**  * Returns an autocompleter to a given fieldname.  *  * @author kahlert, cordes  */
end_comment

begin_class
DECL|class|AutoCompleterFactory
specifier|public
class|class
name|AutoCompleterFactory
block|{
DECL|field|preferences
specifier|private
specifier|final
name|AutoCompletePreferences
name|preferences
decl_stmt|;
DECL|field|abbreviationLoader
specifier|private
specifier|final
name|JournalAbbreviationLoader
name|abbreviationLoader
decl_stmt|;
DECL|method|AutoCompleterFactory (AutoCompletePreferences preferences, JournalAbbreviationLoader abbreviationLoader)
specifier|public
name|AutoCompleterFactory
parameter_list|(
name|AutoCompletePreferences
name|preferences
parameter_list|,
name|JournalAbbreviationLoader
name|abbreviationLoader
parameter_list|)
block|{
name|this
operator|.
name|preferences
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|preferences
argument_list|)
expr_stmt|;
name|this
operator|.
name|abbreviationLoader
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|abbreviationLoader
argument_list|)
expr_stmt|;
block|}
DECL|method|getFor (String fieldName)
specifier|public
name|AutoCompleter
argument_list|<
name|String
argument_list|>
name|getFor
parameter_list|(
name|String
name|fieldName
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|fieldName
argument_list|)
expr_stmt|;
if|if
condition|(
name|InternalBibtexFields
operator|.
name|getFieldProperties
argument_list|(
name|fieldName
argument_list|)
operator|.
name|contains
argument_list|(
name|FieldProperty
operator|.
name|PERSON_NAMES
argument_list|)
condition|)
block|{
return|return
operator|new
name|NameFieldAutoCompleter
argument_list|(
name|fieldName
argument_list|,
name|preferences
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|InternalBibtexFields
operator|.
name|getFieldProperties
argument_list|(
name|fieldName
argument_list|)
operator|.
name|contains
argument_list|(
name|FieldProperty
operator|.
name|SINGLE_ENTRY_LINK
argument_list|)
condition|)
block|{
return|return
operator|new
name|BibtexKeyAutoCompleter
argument_list|(
name|preferences
argument_list|)
return|;
block|}
elseif|else
if|if
condition|(
name|InternalBibtexFields
operator|.
name|getFieldProperties
argument_list|(
name|fieldName
argument_list|)
operator|.
name|contains
argument_list|(
name|FieldProperty
operator|.
name|JOURNAL_NAME
argument_list|)
operator|||
name|FieldName
operator|.
name|PUBLISHER
operator|.
name|equals
argument_list|(
name|fieldName
argument_list|)
condition|)
block|{
return|return
operator|new
name|JournalAutoCompleter
argument_list|(
name|fieldName
argument_list|,
name|preferences
argument_list|,
name|abbreviationLoader
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|DefaultAutoCompleter
argument_list|(
name|fieldName
argument_list|,
name|preferences
argument_list|)
return|;
block|}
block|}
DECL|method|getPersonAutoCompleter ()
specifier|public
name|AutoCompleter
argument_list|<
name|String
argument_list|>
name|getPersonAutoCompleter
parameter_list|()
block|{
return|return
operator|new
name|NameFieldAutoCompleter
argument_list|(
name|InternalBibtexFields
operator|.
name|getPersonNameFields
argument_list|()
argument_list|,
literal|true
argument_list|,
name|preferences
argument_list|)
return|;
block|}
block|}
end_class

end_unit

