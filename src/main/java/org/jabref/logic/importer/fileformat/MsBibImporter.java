begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer.fileformat
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|ParserConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|Importer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ParserResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|msbib
operator|.
name|MSBibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|util
operator|.
name|StandardFileType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ErrorHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXParseException
import|;
end_import

begin_comment
comment|/**  * Importer for the MS Office 2007 XML bibliography format  *  * ...  */
end_comment

begin_class
DECL|class|MsBibImporter
specifier|public
class|class
name|MsBibImporter
extends|extends
name|Importer
block|{
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MsBibImporter
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|field|DISABLEDTD
specifier|private
specifier|static
specifier|final
name|String
name|DISABLEDTD
init|=
literal|"http://apache.org/xml/features/disallow-doctype-decl"
decl_stmt|;
DECL|field|DISABLEEXTERNALDTD
specifier|private
specifier|static
specifier|final
name|String
name|DISABLEEXTERNALDTD
init|=
literal|"http://apache.org/xml/features/nonvalidating/load-external-dtd"
decl_stmt|;
annotation|@
name|Override
DECL|method|isRecognizedFormat (BufferedReader reader)
specifier|public
name|boolean
name|isRecognizedFormat
parameter_list|(
name|BufferedReader
name|reader
parameter_list|)
throws|throws
name|IOException
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|reader
argument_list|)
expr_stmt|;
comment|/*             The correct behavior is to return false if it is certain that the file is             not of the MsBib type, and true otherwise. Returning true is the safe choice             if not certain.          */
name|Document
name|docin
decl_stmt|;
try|try
block|{
name|DocumentBuilder
name|dbuild
init|=
name|makeSafeDocBuilderFactory
argument_list|(
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
argument_list|)
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
name|dbuild
operator|.
name|setErrorHandler
argument_list|(
operator|new
name|ErrorHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|warning
parameter_list|(
name|SAXParseException
name|exception
parameter_list|)
throws|throws
name|SAXException
block|{
comment|// ignore warnings
block|}
annotation|@
name|Override
specifier|public
name|void
name|fatalError
parameter_list|(
name|SAXParseException
name|exception
parameter_list|)
throws|throws
name|SAXException
block|{
throw|throw
name|exception
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|SAXParseException
name|exception
parameter_list|)
throws|throws
name|SAXException
block|{
throw|throw
name|exception
throw|;
block|}
block|}
argument_list|)
expr_stmt|;
name|docin
operator|=
name|dbuild
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
name|reader
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
return|return
operator|(
name|docin
operator|==
literal|null
operator|)
operator|||
name|docin
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getTagName
argument_list|()
operator|.
name|contains
argument_list|(
literal|"Sources"
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|importDatabase (BufferedReader reader)
specifier|public
name|ParserResult
name|importDatabase
parameter_list|(
name|BufferedReader
name|reader
parameter_list|)
throws|throws
name|IOException
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|reader
argument_list|)
expr_stmt|;
name|MSBibDatabase
name|dbase
init|=
operator|new
name|MSBibDatabase
argument_list|()
decl_stmt|;
return|return
operator|new
name|ParserResult
argument_list|(
name|dbase
operator|.
name|importEntriesFromXml
argument_list|(
name|reader
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"MSBib"
return|;
block|}
annotation|@
name|Override
DECL|method|getFileType ()
specifier|public
name|StandardFileType
name|getFileType
parameter_list|()
block|{
return|return
name|StandardFileType
operator|.
name|XML
return|;
block|}
annotation|@
name|Override
DECL|method|getDescription ()
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
literal|"Importer for the MS Office 2007 XML bibliography format."
return|;
block|}
comment|/**      * DocumentBuilderFactory makes a XXE safe Builder factory from dBuild. If not supported by current      * XML then returns original builder given and logs error.      * @param dBuild | DocumentBuilderFactory to be made XXE safe.      * @return If supported, XXE safe DocumentBuilderFactory. Else, returns original builder given      */
DECL|method|makeSafeDocBuilderFactory (DocumentBuilderFactory dBuild)
specifier|private
name|DocumentBuilderFactory
name|makeSafeDocBuilderFactory
parameter_list|(
name|DocumentBuilderFactory
name|dBuild
parameter_list|)
block|{
name|String
name|feature
init|=
literal|null
decl_stmt|;
try|try
block|{
name|feature
operator|=
name|DISABLEDTD
expr_stmt|;
name|dBuild
operator|.
name|setFeature
argument_list|(
name|feature
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|feature
operator|=
name|DISABLEEXTERNALDTD
expr_stmt|;
name|dBuild
operator|.
name|setFeature
argument_list|(
name|feature
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|dBuild
operator|.
name|setXIncludeAware
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|dBuild
operator|.
name|setExpandEntityReferences
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParserConfigurationException
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Builder not fully configured. Feature:'{}' is probably not supported by current XML processor. {}"
argument_list|,
name|feature
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
return|return
name|dBuild
return|;
block|}
block|}
end_class

end_unit

