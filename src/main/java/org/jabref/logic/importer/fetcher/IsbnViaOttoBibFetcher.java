begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer.fetcher
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|FetcherException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ImportFormatPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|BibtexParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|URLDownload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|strings
operator|.
name|StringUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|util
operator|.
name|DummyFileUpdateMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsoup
operator|.
name|Jsoup
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsoup
operator|.
name|nodes
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jsoup
operator|.
name|nodes
operator|.
name|Element
import|;
end_import

begin_comment
comment|/**  * Fetcher for ISBN using https://www.ottobib.com  */
end_comment

begin_class
DECL|class|IsbnViaOttoBibFetcher
specifier|public
class|class
name|IsbnViaOttoBibFetcher
extends|extends
name|AbstractIsbnFetcher
block|{
DECL|field|BASE_URL
specifier|private
specifier|static
specifier|final
name|String
name|BASE_URL
init|=
literal|"https://www.ottobib.com/isbn/"
decl_stmt|;
DECL|method|IsbnViaOttoBibFetcher (ImportFormatPreferences importFormatPreferences)
specifier|public
name|IsbnViaOttoBibFetcher
parameter_list|(
name|ImportFormatPreferences
name|importFormatPreferences
parameter_list|)
block|{
name|super
argument_list|(
name|importFormatPreferences
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|getName ()
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"ISBN (OttoBib)"
return|;
block|}
comment|/**      * @return null, because the identifier is passed using form data. This method is not used.      */
annotation|@
name|Override
DECL|method|getURLForID (String identifier)
specifier|public
name|URL
name|getURLForID
parameter_list|(
name|String
name|identifier
parameter_list|)
throws|throws
name|URISyntaxException
throws|,
name|MalformedURLException
throws|,
name|FetcherException
block|{
return|return
literal|null
return|;
block|}
annotation|@
name|Override
DECL|method|performSearchById (String identifier)
specifier|public
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|performSearchById
parameter_list|(
name|String
name|identifier
parameter_list|)
throws|throws
name|FetcherException
block|{
if|if
condition|(
name|StringUtil
operator|.
name|isBlank
argument_list|(
name|identifier
argument_list|)
condition|)
block|{
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
name|this
operator|.
name|ensureThatIsbnIsValid
argument_list|(
name|identifier
argument_list|)
expr_stmt|;
name|Document
name|html
decl_stmt|;
try|try
block|{
name|html
operator|=
name|Jsoup
operator|.
name|connect
argument_list|(
name|BASE_URL
operator|+
name|identifier
operator|+
literal|"/bibtex"
argument_list|)
operator|.
name|userAgent
argument_list|(
name|URLDownload
operator|.
name|USER_AGENT
argument_list|)
operator|.
name|get
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|FetcherException
argument_list|(
literal|"Could not "
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|Element
name|textArea
init|=
name|html
operator|.
name|select
argument_list|(
literal|"textarea"
argument_list|)
operator|.
name|first
argument_list|()
decl_stmt|;
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|entry
init|=
name|Optional
operator|.
name|empty
argument_list|()
decl_stmt|;
try|try
block|{
name|entry
operator|=
name|BibtexParser
operator|.
name|singleFromString
argument_list|(
name|textArea
operator|.
name|text
argument_list|()
argument_list|,
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|FetcherException
argument_list|(
literal|"An internal parser error occurred"
argument_list|,
name|e
argument_list|)
throw|;
block|}
return|return
name|entry
return|;
block|}
block|}
end_class

end_unit

