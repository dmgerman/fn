begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.importer.fetcher
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fetcher
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ImportFormatPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|ParseException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|importer
operator|.
name|fileformat
operator|.
name|BibtexParser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|net
operator|.
name|URLDownload
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|util
operator|.
name|DummyFileUpdateMonitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_comment
comment|/**  * Convenience class for getting BibTeX entries from the BibSonomy scraper,  * from an URL pointing to an entry.  */
end_comment

begin_class
DECL|class|BibsonomyScraper
specifier|public
class|class
name|BibsonomyScraper
block|{
DECL|field|BIBSONOMY_SCRAPER
specifier|private
specifier|static
specifier|final
name|String
name|BIBSONOMY_SCRAPER
init|=
literal|"https://scraper.bibsonomy.org/service?url="
decl_stmt|;
DECL|field|BIBSONOMY_SCRAPER_POST
specifier|private
specifier|static
specifier|final
name|String
name|BIBSONOMY_SCRAPER_POST
init|=
literal|"&format=bibtex"
decl_stmt|;
DECL|field|LOGGER
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|BibsonomyScraper
operator|.
name|class
argument_list|)
decl_stmt|;
DECL|method|BibsonomyScraper ()
specifier|private
name|BibsonomyScraper
parameter_list|()
block|{     }
comment|/**      * Return a BibEntry by looking up the given url from the BibSonomy scraper.      * @param entryUrl      * @return      */
DECL|method|getEntry (String entryUrl, ImportFormatPreferences importFormatPreferences)
specifier|public
specifier|static
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|getEntry
parameter_list|(
name|String
name|entryUrl
parameter_list|,
name|ImportFormatPreferences
name|importFormatPreferences
parameter_list|)
block|{
try|try
block|{
comment|// Replace special characters by corresponding sequences:
name|String
name|cleanURL
init|=
name|entryUrl
operator|.
name|replace
argument_list|(
literal|"%"
argument_list|,
literal|"%25"
argument_list|)
operator|.
name|replace
argument_list|(
literal|":"
argument_list|,
literal|"%3A"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"/"
argument_list|,
literal|"%2F"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"?"
argument_list|,
literal|"%3F"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"&"
argument_list|,
literal|"%26"
argument_list|)
operator|.
name|replace
argument_list|(
literal|"="
argument_list|,
literal|"%3D"
argument_list|)
decl_stmt|;
name|URL
name|url
init|=
operator|new
name|URL
argument_list|(
name|BibsonomyScraper
operator|.
name|BIBSONOMY_SCRAPER
operator|+
name|cleanURL
operator|+
name|BibsonomyScraper
operator|.
name|BIBSONOMY_SCRAPER_POST
argument_list|)
decl_stmt|;
name|String
name|bibtex
init|=
operator|new
name|URLDownload
argument_list|(
name|url
argument_list|)
operator|.
name|asString
argument_list|()
decl_stmt|;
return|return
name|BibtexParser
operator|.
name|singleFromString
argument_list|(
name|bibtex
argument_list|,
name|importFormatPreferences
argument_list|,
operator|new
name|DummyFileUpdateMonitor
argument_list|()
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|ex
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Could not download entry"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|ParseException
name|ex
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Could not parse entry"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
catch|catch
parameter_list|(
name|RuntimeException
name|ex
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Could not get entry"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
return|return
name|Optional
operator|.
name|empty
argument_list|()
return|;
block|}
block|}
block|}
end_class

end_unit

