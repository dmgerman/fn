begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.journals
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|journals
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_comment
comment|/**  * A repository for all journal abbreviations, including add and find methods.  */
end_comment

begin_class
DECL|class|JournalAbbreviationRepository
specifier|public
class|class
name|JournalAbbreviationRepository
block|{
DECL|field|abbreviations
specifier|private
specifier|final
name|Set
argument_list|<
name|Abbreviation
argument_list|>
name|abbreviations
init|=
operator|new
name|HashSet
argument_list|<>
argument_list|(
literal|16000
argument_list|)
decl_stmt|;
comment|// We have over 15.000 abbreviations in the built-in lists
DECL|method|JournalAbbreviationRepository (Abbreviation... abbreviations)
specifier|public
name|JournalAbbreviationRepository
parameter_list|(
name|Abbreviation
modifier|...
name|abbreviations
parameter_list|)
block|{
for|for
control|(
name|Abbreviation
name|abbreviation
range|:
name|abbreviations
control|)
block|{
name|addEntry
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
block|}
block|}
DECL|method|isMatched (String name, Abbreviation abbreviation)
specifier|private
specifier|static
name|boolean
name|isMatched
parameter_list|(
name|String
name|name
parameter_list|,
name|Abbreviation
name|abbreviation
parameter_list|)
block|{
return|return
name|name
operator|.
name|equalsIgnoreCase
argument_list|(
name|abbreviation
operator|.
name|getName
argument_list|()
argument_list|)
operator|||
name|name
operator|.
name|equalsIgnoreCase
argument_list|(
name|abbreviation
operator|.
name|getIsoAbbreviation
argument_list|()
argument_list|)
operator|||
name|name
operator|.
name|equalsIgnoreCase
argument_list|(
name|abbreviation
operator|.
name|getMedlineAbbreviation
argument_list|()
argument_list|)
return|;
block|}
DECL|method|isMatchedAbbreviated (String name, Abbreviation abbreviation)
specifier|private
specifier|static
name|boolean
name|isMatchedAbbreviated
parameter_list|(
name|String
name|name
parameter_list|,
name|Abbreviation
name|abbreviation
parameter_list|)
block|{
name|boolean
name|isAbbreviated
init|=
name|name
operator|.
name|equalsIgnoreCase
argument_list|(
name|abbreviation
operator|.
name|getIsoAbbreviation
argument_list|()
argument_list|)
operator|||
name|name
operator|.
name|equalsIgnoreCase
argument_list|(
name|abbreviation
operator|.
name|getMedlineAbbreviation
argument_list|()
argument_list|)
decl_stmt|;
name|boolean
name|isExpanded
init|=
name|name
operator|.
name|equalsIgnoreCase
argument_list|(
name|abbreviation
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|isAbbreviated
operator|&&
operator|!
name|isExpanded
return|;
block|}
DECL|method|size ()
specifier|public
name|int
name|size
parameter_list|()
block|{
return|return
name|abbreviations
operator|.
name|size
argument_list|()
return|;
block|}
comment|/**      * Returns true if the given journal name is contained in the list either in its full form (e.g Physical Review      * Letters) or its abbreviated form (e.g. Phys. Rev. Lett.).      */
DECL|method|isKnownName (String journalName)
specifier|public
name|boolean
name|isKnownName
parameter_list|(
name|String
name|journalName
parameter_list|)
block|{
return|return
name|abbreviations
operator|.
name|stream
argument_list|()
operator|.
name|anyMatch
argument_list|(
name|abbreviation
lambda|->
name|isMatched
argument_list|(
name|journalName
operator|.
name|trim
argument_list|()
argument_list|,
name|abbreviation
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * Returns true if the given journal name is in its abbreviated form (e.g. Phys. Rev. Lett.). The test is strict,      * i.e. journals whose abbreviation is the same as the full name are not considered      */
DECL|method|isAbbreviatedName (String journalName)
specifier|public
name|boolean
name|isAbbreviatedName
parameter_list|(
name|String
name|journalName
parameter_list|)
block|{
return|return
name|abbreviations
operator|.
name|stream
argument_list|()
operator|.
name|anyMatch
argument_list|(
name|abbreviation
lambda|->
name|isMatchedAbbreviated
argument_list|(
name|journalName
operator|.
name|trim
argument_list|()
argument_list|,
name|abbreviation
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * Attempts to get the abbreviated name of the journal given. May contain dots.      *      * @param journalName The journal name to abbreviate.      * @return The abbreviated name      */
DECL|method|getAbbreviation (String journalName)
specifier|public
name|Optional
argument_list|<
name|Abbreviation
argument_list|>
name|getAbbreviation
parameter_list|(
name|String
name|journalName
parameter_list|)
block|{
return|return
name|abbreviations
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|abbreviation
lambda|->
name|isMatched
argument_list|(
name|journalName
operator|.
name|trim
argument_list|()
argument_list|,
name|abbreviation
argument_list|)
argument_list|)
operator|.
name|findFirst
argument_list|()
return|;
block|}
DECL|method|addEntry (Abbreviation abbreviation)
specifier|public
name|void
name|addEntry
parameter_list|(
name|Abbreviation
name|abbreviation
parameter_list|)
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
comment|// Abbreviation equality is tested on name only, so we might have to remove an old abbreviation
if|if
condition|(
name|abbreviations
operator|.
name|contains
argument_list|(
name|abbreviation
argument_list|)
condition|)
block|{
name|abbreviations
operator|.
name|remove
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
block|}
name|abbreviations
operator|.
name|add
argument_list|(
name|abbreviation
argument_list|)
expr_stmt|;
block|}
DECL|method|addEntries (Collection<Abbreviation> abbreviationsToAdd)
specifier|public
name|void
name|addEntries
parameter_list|(
name|Collection
argument_list|<
name|Abbreviation
argument_list|>
name|abbreviationsToAdd
parameter_list|)
block|{
name|abbreviationsToAdd
operator|.
name|forEach
argument_list|(
name|this
operator|::
name|addEntry
argument_list|)
expr_stmt|;
block|}
DECL|method|getAbbreviations ()
specifier|public
name|Set
argument_list|<
name|Abbreviation
argument_list|>
name|getAbbreviations
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|abbreviations
argument_list|)
return|;
block|}
DECL|method|getNextAbbreviation (String text)
specifier|public
name|Optional
argument_list|<
name|String
argument_list|>
name|getNextAbbreviation
parameter_list|(
name|String
name|text
parameter_list|)
block|{
return|return
name|getAbbreviation
argument_list|(
name|text
argument_list|)
operator|.
name|map
argument_list|(
name|abbreviation
lambda|->
name|abbreviation
operator|.
name|getNext
argument_list|(
name|text
argument_list|)
argument_list|)
return|;
block|}
DECL|method|getMedlineAbbreviation (String text)
specifier|public
name|Optional
argument_list|<
name|String
argument_list|>
name|getMedlineAbbreviation
parameter_list|(
name|String
name|text
parameter_list|)
block|{
return|return
name|getAbbreviation
argument_list|(
name|text
argument_list|)
operator|.
name|map
argument_list|(
name|Abbreviation
operator|::
name|getMedlineAbbreviation
argument_list|)
return|;
block|}
DECL|method|getIsoAbbreviation (String text)
specifier|public
name|Optional
argument_list|<
name|String
argument_list|>
name|getIsoAbbreviation
parameter_list|(
name|String
name|text
parameter_list|)
block|{
return|return
name|getAbbreviation
argument_list|(
name|text
argument_list|)
operator|.
name|map
argument_list|(
name|Abbreviation
operator|::
name|getIsoAbbreviation
argument_list|)
return|;
block|}
block|}
end_class

end_unit

