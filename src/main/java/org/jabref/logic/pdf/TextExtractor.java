begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.logic.pdf
package|package
name|org
operator|.
name|jabref
operator|.
name|logic
operator|.
name|pdf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|geom
operator|.
name|Rectangle2D
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSArray
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSFloat
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|cos
operator|.
name|COSInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|PDPage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|pdmodel
operator|.
name|common
operator|.
name|PDRectangle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|pdfbox
operator|.
name|text
operator|.
name|PDFTextStripperByArea
import|;
end_import

begin_comment
comment|/**  * Extracts the text of marked annotations using bounding boxes.  */
end_comment

begin_class
DECL|class|TextExtractor
specifier|public
specifier|final
class|class
name|TextExtractor
block|{
DECL|field|boundingBoxes
specifier|private
specifier|final
name|COSArray
name|boundingBoxes
decl_stmt|;
DECL|field|page
specifier|private
specifier|final
name|PDPage
name|page
decl_stmt|;
comment|/**      * @param page       the page the annotation is on, must not be null      * @param boundingBoxes the raw annotation, must not be null      */
DECL|method|TextExtractor (PDPage page, COSArray boundingBoxes)
specifier|public
name|TextExtractor
parameter_list|(
name|PDPage
name|page
parameter_list|,
name|COSArray
name|boundingBoxes
parameter_list|)
block|{
name|this
operator|.
name|page
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|this
operator|.
name|boundingBoxes
operator|=
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|boundingBoxes
argument_list|)
expr_stmt|;
block|}
comment|/**      * Extracts the text of a marked annotation such as highlights, underlines, strikeouts etc.      *      * @return The text of the annotation      * @throws IOException If the PDFTextStripperByArea fails to initialize.      */
DECL|method|extractMarkedText ()
specifier|public
name|String
name|extractMarkedText
parameter_list|()
throws|throws
name|IOException
block|{
comment|// Text has to be extracted by the rectangle calculated from the marking
name|PDFTextStripperByArea
name|stripperByArea
init|=
operator|new
name|PDFTextStripperByArea
argument_list|()
decl_stmt|;
name|String
name|markedText
init|=
literal|""
decl_stmt|;
comment|// Iterates over the array of segments. Each segment consists of 8 points forming a bounding box.
name|int
name|totalSegments
init|=
name|boundingBoxes
operator|.
name|size
argument_list|()
operator|/
literal|8
decl_stmt|;
for|for
control|(
name|int
name|currentSegment
init|=
literal|1
init|,
name|segmentPointer
init|=
literal|0
init|;
name|currentSegment
operator|<=
name|totalSegments
condition|;
name|currentSegment
operator|++
operator|,
name|segmentPointer
operator|+=
literal|8
control|)
block|{
try|try
block|{
name|stripperByArea
operator|.
name|addRegion
argument_list|(
literal|"markedRegion"
argument_list|,
name|calculateSegmentBoundingBox
argument_list|(
name|boundingBoxes
argument_list|,
name|segmentPointer
argument_list|)
argument_list|)
expr_stmt|;
name|stripperByArea
operator|.
name|extractRegions
argument_list|(
name|page
argument_list|)
expr_stmt|;
name|markedText
operator|=
name|markedText
operator|.
name|concat
argument_list|(
name|stripperByArea
operator|.
name|getTextForRegion
argument_list|(
literal|"markedRegion"
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|IOException
argument_list|(
literal|"Cannot read annotation coordinates!"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|markedText
operator|.
name|trim
argument_list|()
return|;
block|}
DECL|method|calculateSegmentBoundingBox (COSArray quadsArray, int segmentPointer)
specifier|private
name|Rectangle2D
name|calculateSegmentBoundingBox
parameter_list|(
name|COSArray
name|quadsArray
parameter_list|,
name|int
name|segmentPointer
parameter_list|)
block|{
comment|// Extract coordinate values
name|float
name|upperLeftX
init|=
name|toFloat
argument_list|(
name|quadsArray
operator|.
name|get
argument_list|(
name|segmentPointer
argument_list|)
argument_list|)
decl_stmt|;
name|float
name|upperLeftY
init|=
name|toFloat
argument_list|(
name|quadsArray
operator|.
name|get
argument_list|(
name|segmentPointer
operator|+
literal|1
argument_list|)
argument_list|)
decl_stmt|;
name|float
name|upperRightX
init|=
name|toFloat
argument_list|(
name|quadsArray
operator|.
name|get
argument_list|(
name|segmentPointer
operator|+
literal|2
argument_list|)
argument_list|)
decl_stmt|;
name|float
name|upperRightY
init|=
name|toFloat
argument_list|(
name|quadsArray
operator|.
name|get
argument_list|(
name|segmentPointer
operator|+
literal|3
argument_list|)
argument_list|)
decl_stmt|;
name|float
name|lowerLeftX
init|=
name|toFloat
argument_list|(
name|quadsArray
operator|.
name|get
argument_list|(
name|segmentPointer
operator|+
literal|4
argument_list|)
argument_list|)
decl_stmt|;
name|float
name|lowerLeftY
init|=
name|toFloat
argument_list|(
name|quadsArray
operator|.
name|get
argument_list|(
name|segmentPointer
operator|+
literal|5
argument_list|)
argument_list|)
decl_stmt|;
comment|// Post-processing of the raw coordinates.
name|PDRectangle
name|pageSize
init|=
name|page
operator|.
name|getMediaBox
argument_list|()
decl_stmt|;
name|float
name|ulx
init|=
name|upperLeftX
operator|-
literal|1
decl_stmt|;
comment|// It is magic.
name|float
name|uly
init|=
name|pageSize
operator|.
name|getHeight
argument_list|()
operator|-
name|upperLeftY
decl_stmt|;
name|float
name|width
init|=
name|upperRightX
operator|-
name|lowerLeftX
decl_stmt|;
name|float
name|height
init|=
name|upperRightY
operator|-
name|lowerLeftY
decl_stmt|;
return|return
operator|new
name|Rectangle2D
operator|.
name|Float
argument_list|(
name|ulx
argument_list|,
name|uly
argument_list|,
name|width
argument_list|,
name|height
argument_list|)
return|;
block|}
DECL|method|toFloat (Object cosNumber)
specifier|private
name|float
name|toFloat
parameter_list|(
name|Object
name|cosNumber
parameter_list|)
block|{
if|if
condition|(
name|cosNumber
operator|instanceof
name|COSFloat
condition|)
block|{
return|return
operator|(
operator|(
name|COSFloat
operator|)
name|cosNumber
operator|)
operator|.
name|floatValue
argument_list|()
return|;
block|}
if|if
condition|(
name|cosNumber
operator|instanceof
name|COSInteger
condition|)
block|{
return|return
operator|(
operator|(
name|COSInteger
operator|)
name|cosNumber
operator|)
operator|.
name|floatValue
argument_list|()
return|;
block|}
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"The number type of the annotation is not supported!"
argument_list|)
throw|;
block|}
block|}
end_class

end_unit

