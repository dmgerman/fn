begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.groups
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|groups
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|FieldName
import|;
end_import

begin_comment
comment|/**  * This group contains entries, which were manually assigned to it.  * Assignments are stored in the {@link FieldName#GROUPS} field.  * Thus, internally, we represent {@link ExplicitGroup} as a special {@link WordKeywordGroup} operating on  * {@link FieldName#GROUPS}.  */
end_comment

begin_class
DECL|class|ExplicitGroup
specifier|public
class|class
name|ExplicitGroup
extends|extends
name|WordKeywordGroup
block|{
comment|/**      * Previous versions of JabRef stored the linked entries directly in the "jabref-meta" comment at the end of the      * file. These keys are still parsed and stored in this field.      */
DECL|field|legacyEntryKeys
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|legacyEntryKeys
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
DECL|method|ExplicitGroup (String name, GroupHierarchyType context, Character keywordSeparator)
specifier|public
name|ExplicitGroup
parameter_list|(
name|String
name|name
parameter_list|,
name|GroupHierarchyType
name|context
parameter_list|,
name|Character
name|keywordSeparator
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|context
argument_list|,
name|FieldName
operator|.
name|GROUPS
argument_list|,
name|name
argument_list|,
literal|true
argument_list|,
name|keywordSeparator
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
DECL|method|addLegacyEntryKey (String key)
specifier|public
name|void
name|addLegacyEntryKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|this
operator|.
name|legacyEntryKeys
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|deepCopy ()
specifier|public
name|AbstractGroup
name|deepCopy
parameter_list|()
block|{
name|ExplicitGroup
name|copy
init|=
operator|new
name|ExplicitGroup
argument_list|(
name|getName
argument_list|()
argument_list|,
name|getHierarchicalContext
argument_list|()
argument_list|,
name|keywordSeparator
argument_list|)
decl_stmt|;
name|copy
operator|.
name|legacyEntryKeys
operator|.
name|addAll
argument_list|(
name|legacyEntryKeys
argument_list|)
expr_stmt|;
return|return
name|copy
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|ExplicitGroup
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|ExplicitGroup
name|other
init|=
operator|(
name|ExplicitGroup
operator|)
name|o
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|getName
argument_list|()
argument_list|,
name|other
operator|.
name|getName
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getHierarchicalContext
argument_list|()
argument_list|,
name|other
operator|.
name|getHierarchicalContext
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getIconName
argument_list|()
argument_list|,
name|other
operator|.
name|getIconName
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getDescription
argument_list|()
argument_list|,
name|other
operator|.
name|getDescription
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getColor
argument_list|()
argument_list|,
name|other
operator|.
name|getColor
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|isExpanded
argument_list|()
argument_list|,
name|other
operator|.
name|isExpanded
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getLegacyEntryKeys
argument_list|()
argument_list|,
name|other
operator|.
name|getLegacyEntryKeys
argument_list|()
argument_list|)
return|;
block|}
DECL|method|clearLegacyEntryKeys ()
specifier|public
name|void
name|clearLegacyEntryKeys
parameter_list|()
block|{
name|legacyEntryKeys
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
DECL|method|getLegacyEntryKeys ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getLegacyEntryKeys
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableList
argument_list|(
name|legacyEntryKeys
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|name
operator|.
name|getValue
argument_list|()
argument_list|,
name|context
argument_list|,
name|legacyEntryKeys
argument_list|,
name|iconName
argument_list|,
name|color
argument_list|,
name|description
argument_list|,
name|isExpanded
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|isDynamic ()
specifier|public
name|boolean
name|isDynamic
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

