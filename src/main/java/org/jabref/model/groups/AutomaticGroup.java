begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.groups
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|groups
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javafx
operator|.
name|collections
operator|.
name|ObservableList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|util
operator|.
name|TreeCollector
import|;
end_import

begin_class
DECL|class|AutomaticGroup
specifier|public
specifier|abstract
class|class
name|AutomaticGroup
extends|extends
name|AbstractGroup
block|{
DECL|method|AutomaticGroup (String name, GroupHierarchyType context)
specifier|public
name|AutomaticGroup
parameter_list|(
name|String
name|name
parameter_list|,
name|GroupHierarchyType
name|context
parameter_list|)
block|{
name|super
argument_list|(
name|name
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|contains (BibEntry entry)
specifier|public
name|boolean
name|contains
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
annotation|@
name|Override
DECL|method|isDynamic ()
specifier|public
name|boolean
name|isDynamic
parameter_list|()
block|{
return|return
literal|false
return|;
block|}
DECL|method|createSubgroups (BibEntry entry)
specifier|public
specifier|abstract
name|Set
argument_list|<
name|GroupTreeNode
argument_list|>
name|createSubgroups
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
function_decl|;
DECL|method|createSubgroups (ObservableList<BibEntry> entries)
specifier|public
name|ObservableList
argument_list|<
name|GroupTreeNode
argument_list|>
name|createSubgroups
parameter_list|(
name|ObservableList
argument_list|<
name|BibEntry
argument_list|>
name|entries
parameter_list|)
block|{
comment|// TODO: Propagate changes to entry list (however: there is no flatMap and collect as TransformationList)
return|return
name|entries
operator|.
name|stream
argument_list|()
operator|.
name|flatMap
argument_list|(
name|entry
lambda|->
name|createSubgroups
argument_list|(
name|entry
argument_list|)
operator|.
name|stream
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|TreeCollector
operator|.
name|mergeIntoTree
argument_list|(
name|GroupTreeNode
operator|::
name|isSameGroupAs
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

