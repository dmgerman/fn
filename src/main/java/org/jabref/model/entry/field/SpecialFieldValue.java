begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry.field
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|Keyword
import|;
end_import

begin_enum
DECL|enum|SpecialFieldValue
specifier|public
enum|enum
name|SpecialFieldValue
block|{
DECL|enumConstant|PRINTED
name|PRINTED
argument_list|(
literal|"printed"
argument_list|)
block|,
DECL|enumConstant|CLEAR_PRIORITY
name|CLEAR_PRIORITY
argument_list|(
literal|null
argument_list|)
block|,
DECL|enumConstant|PRIORITY_HIGH
name|PRIORITY_HIGH
argument_list|(
literal|"prio1"
argument_list|)
block|,
DECL|enumConstant|PRIORITY_MEDIUM
name|PRIORITY_MEDIUM
argument_list|(
literal|"prio2"
argument_list|)
block|,
DECL|enumConstant|PRIORITY_LOW
name|PRIORITY_LOW
argument_list|(
literal|"prio3"
argument_list|)
block|,
DECL|enumConstant|QUALITY_ASSURED
name|QUALITY_ASSURED
argument_list|(
literal|"qualityAssured"
argument_list|)
block|,
DECL|enumConstant|CLEAR_RANK
name|CLEAR_RANK
argument_list|(
literal|null
argument_list|)
block|,
DECL|enumConstant|RANK_1
name|RANK_1
argument_list|(
literal|"rank1"
argument_list|)
block|,
DECL|enumConstant|RANK_2
name|RANK_2
argument_list|(
literal|"rank2"
argument_list|)
block|,
DECL|enumConstant|RANK_3
name|RANK_3
argument_list|(
literal|"rank3"
argument_list|)
block|,
DECL|enumConstant|RANK_4
name|RANK_4
argument_list|(
literal|"rank4"
argument_list|)
block|,
DECL|enumConstant|RANK_5
name|RANK_5
argument_list|(
literal|"rank5"
argument_list|)
block|,
DECL|enumConstant|CLEAR_READ_STATUS
name|CLEAR_READ_STATUS
argument_list|(
literal|null
argument_list|)
block|,
DECL|enumConstant|READ
name|READ
argument_list|(
literal|"read"
argument_list|)
block|,
DECL|enumConstant|SKIMMED
name|SKIMMED
argument_list|(
literal|"skimmed"
argument_list|)
block|,
DECL|enumConstant|RELEVANT
name|RELEVANT
argument_list|(
literal|"relevant"
argument_list|)
block|;
comment|// keyword used in keyword field
DECL|field|keyword
specifier|private
specifier|final
name|Optional
argument_list|<
name|Keyword
argument_list|>
name|keyword
decl_stmt|;
comment|/**      *      * @param keyword - The keyword to be used at BibTex's keyword field. May be "null" if no keyword is to be set      */
DECL|method|SpecialFieldValue (String keyword)
name|SpecialFieldValue
parameter_list|(
name|String
name|keyword
parameter_list|)
block|{
name|this
operator|.
name|keyword
operator|=
name|Optional
operator|.
name|ofNullable
argument_list|(
name|keyword
argument_list|)
operator|.
name|map
argument_list|(
name|Keyword
operator|::
operator|new
argument_list|)
expr_stmt|;
block|}
DECL|method|getRating (int ranking)
specifier|public
specifier|static
name|SpecialFieldValue
name|getRating
parameter_list|(
name|int
name|ranking
parameter_list|)
block|{
switch|switch
condition|(
name|ranking
condition|)
block|{
case|case
literal|1
case|:
return|return
name|RANK_1
return|;
case|case
literal|2
case|:
return|return
name|RANK_2
return|;
case|case
literal|3
case|:
return|return
name|RANK_3
return|;
case|case
literal|4
case|:
return|return
name|RANK_4
return|;
case|case
literal|5
case|:
return|return
name|RANK_5
return|;
default|default:
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|ranking
operator|+
literal|"is not a valid ranking"
argument_list|)
throw|;
block|}
block|}
DECL|method|getKeyword ()
specifier|public
name|Optional
argument_list|<
name|Keyword
argument_list|>
name|getKeyword
parameter_list|()
block|{
return|return
name|keyword
return|;
block|}
DECL|method|getFieldValue ()
specifier|public
name|Optional
argument_list|<
name|String
argument_list|>
name|getFieldValue
parameter_list|()
block|{
return|return
name|keyword
operator|.
name|map
argument_list|(
name|Keyword
operator|::
name|toString
argument_list|)
return|;
block|}
DECL|method|toRating ()
specifier|public
name|int
name|toRating
parameter_list|()
block|{
switch|switch
condition|(
name|this
condition|)
block|{
case|case
name|RANK_1
case|:
return|return
literal|1
return|;
case|case
name|RANK_2
case|:
return|return
literal|2
return|;
case|case
name|RANK_3
case|:
return|return
literal|3
return|;
case|case
name|RANK_4
case|:
return|return
literal|4
return|;
case|case
name|RANK_5
case|:
return|return
literal|5
return|;
default|default:
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
name|this
operator|+
literal|"is not a valid ranking"
argument_list|)
throw|;
block|}
block|}
block|}
end_enum

end_unit

