begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry.field
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|BibField
specifier|public
class|class
name|BibField
implements|implements
name|Comparable
argument_list|<
name|BibField
argument_list|>
block|{
DECL|field|priority
specifier|private
specifier|final
name|FieldPriority
name|priority
decl_stmt|;
DECL|field|field
specifier|private
specifier|final
name|Field
name|field
decl_stmt|;
DECL|method|BibField (Field field, FieldPriority priority)
specifier|public
name|BibField
parameter_list|(
name|Field
name|field
parameter_list|,
name|FieldPriority
name|priority
parameter_list|)
block|{
name|this
operator|.
name|priority
operator|=
name|priority
expr_stmt|;
name|this
operator|.
name|field
operator|=
name|field
expr_stmt|;
block|}
DECL|method|getField ()
specifier|public
name|Field
name|getField
parameter_list|()
block|{
return|return
name|field
return|;
block|}
DECL|method|getPriority ()
specifier|public
name|FieldPriority
name|getPriority
parameter_list|()
block|{
return|return
name|priority
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|o
operator|instanceof
name|BibField
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|BibField
name|other
init|=
operator|(
name|BibField
operator|)
name|o
decl_stmt|;
return|return
name|field
operator|.
name|getName
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
name|other
operator|.
name|field
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|field
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"BibField{"
operator|+
literal|"field="
operator|+
name|field
operator|.
name|getName
argument_list|()
operator|+
literal|", priority="
operator|+
name|priority
operator|+
literal|'}'
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (BibField o)
specifier|public
name|int
name|compareTo
parameter_list|(
name|BibField
name|o
parameter_list|)
block|{
return|return
name|field
operator|.
name|getName
argument_list|()
operator|.
name|compareTo
argument_list|(
name|o
operator|.
name|field
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

