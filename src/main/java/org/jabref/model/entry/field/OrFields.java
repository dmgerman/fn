begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry.field
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringJoiner
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_class
DECL|class|OrFields
specifier|public
class|class
name|OrFields
extends|extends
name|TreeSet
argument_list|<
name|Field
argument_list|>
implements|implements
name|Comparable
argument_list|<
name|OrFields
argument_list|>
block|{
DECL|method|OrFields (Field field)
specifier|public
name|OrFields
parameter_list|(
name|Field
name|field
parameter_list|)
block|{
name|super
argument_list|(
name|Comparator
operator|.
name|comparing
argument_list|(
name|Field
operator|::
name|getName
argument_list|)
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|field
argument_list|)
expr_stmt|;
block|}
DECL|method|OrFields (Field... fields)
specifier|public
name|OrFields
parameter_list|(
name|Field
modifier|...
name|fields
parameter_list|)
block|{
name|super
argument_list|(
name|Comparator
operator|.
name|comparing
argument_list|(
name|Field
operator|::
name|getName
argument_list|)
argument_list|)
expr_stmt|;
name|addAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|fields
argument_list|)
argument_list|)
expr_stmt|;
block|}
DECL|method|OrFields (Collection<Field> fields)
specifier|public
name|OrFields
parameter_list|(
name|Collection
argument_list|<
name|Field
argument_list|>
name|fields
parameter_list|)
block|{
name|super
argument_list|(
name|Comparator
operator|.
name|comparing
argument_list|(
name|Field
operator|::
name|getName
argument_list|)
argument_list|)
expr_stmt|;
name|addAll
argument_list|(
name|fields
argument_list|)
expr_stmt|;
block|}
DECL|method|getDisplayName ()
specifier|public
name|String
name|getDisplayName
parameter_list|()
block|{
name|StringJoiner
name|joiner
init|=
operator|new
name|StringJoiner
argument_list|(
literal|"/"
argument_list|)
decl_stmt|;
for|for
control|(
name|Field
name|field
range|:
name|this
control|)
block|{
name|joiner
operator|.
name|add
argument_list|(
name|field
operator|.
name|getDisplayName
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|joiner
operator|.
name|toString
argument_list|()
return|;
block|}
DECL|method|getPrimary ()
specifier|public
name|Field
name|getPrimary
parameter_list|()
block|{
return|return
name|this
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|compareTo (OrFields o)
specifier|public
name|int
name|compareTo
parameter_list|(
name|OrFields
name|o
parameter_list|)
block|{
return|return
name|FieldFactory
operator|.
name|serializeOrFields
argument_list|(
name|this
argument_list|)
operator|.
name|compareTo
argument_list|(
name|FieldFactory
operator|.
name|serializeOrFields
argument_list|(
name|o
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

