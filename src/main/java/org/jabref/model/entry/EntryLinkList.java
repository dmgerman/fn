begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_class
DECL|class|EntryLinkList
specifier|public
class|class
name|EntryLinkList
block|{
DECL|field|SEPARATOR
specifier|private
specifier|static
name|String
name|SEPARATOR
init|=
literal|","
decl_stmt|;
DECL|method|EntryLinkList ()
specifier|private
name|EntryLinkList
parameter_list|()
block|{     }
DECL|method|parse (String fieldValue, BibDatabase database)
specifier|public
specifier|static
name|List
argument_list|<
name|ParsedEntryLink
argument_list|>
name|parse
parameter_list|(
name|String
name|fieldValue
parameter_list|,
name|BibDatabase
name|database
parameter_list|)
block|{
name|List
argument_list|<
name|ParsedEntryLink
argument_list|>
name|result
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
operator|(
name|fieldValue
operator|!=
literal|null
operator|)
operator|&&
operator|!
name|fieldValue
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|String
index|[]
name|entries
init|=
name|fieldValue
operator|.
name|split
argument_list|(
name|SEPARATOR
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|entry
range|:
name|entries
control|)
block|{
name|result
operator|.
name|add
argument_list|(
operator|new
name|ParsedEntryLink
argument_list|(
name|entry
argument_list|,
name|database
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|result
return|;
block|}
DECL|method|serialize (List<ParsedEntryLink> list)
specifier|public
specifier|static
name|String
name|serialize
parameter_list|(
name|List
argument_list|<
name|ParsedEntryLink
argument_list|>
name|list
parameter_list|)
block|{
return|return
name|String
operator|.
name|join
argument_list|(
name|SEPARATOR
argument_list|,
name|list
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|link
lambda|->
name|link
operator|.
name|getKey
argument_list|()
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

