begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry.types
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|types
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntryType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntryTypeBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|OrFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|StandardField
import|;
end_import

begin_comment
comment|/**  * This class represents all supported BibTex entry types.  *<p>  * Article, Book, Booklet, Conference, Inbook, Incollection, Inproceedings,  * Manual, Mastersthesis, Misc, Phdthesis, Proceedings, Techreport, Unpublished  */
end_comment

begin_class
DECL|class|BibtexEntryTypeDefinitions
specifier|public
class|class
name|BibtexEntryTypeDefinitions
block|{
comment|/**      * An article from a journal or magazine.      *<p>      * Required fields: author, title, journal, year.      * Optional fields: volume, number, pages, month, note.      */
DECL|field|ARTICLE
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|ARTICLE
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Article
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|JOURNAL
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|PAGES
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|ISSN
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A book with an explicit publisher.      *<p>      * Required fields: author or editor, title, publisher, year.      * Optional fields: volume or number, series, address, edition, month, note.      */
DECL|field|BOOK
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|BOOK
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Book
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
operator|new
name|OrFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|EDITOR
argument_list|)
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|SERIES
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|EDITION
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|ISBN
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A work that is printed and bound, but without a named publisher or sponsoring institution.      *<p>      * Required field: title.      * Optional fields: author, howpublished, address, month, year, note.      */
DECL|field|BOOKLET
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|BOOKLET
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Booklet
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|HOWPUBLISHED
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * An article in a conference proceedings.      *<p>      * Required fields: author, title, booktitle, year.      * Optional fields: editor, volume or number, series, pages, address, month, organization, publisher, note.      */
DECL|field|CONFERENCE
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|CONFERENCE
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Conference
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|BOOKTITLE
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|EDITOR
argument_list|,
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|SERIES
argument_list|,
name|StandardField
operator|.
name|PAGES
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|ORGANIZATION
argument_list|,
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A part of a book, which may be a chapter (or section or whatever) and/or a range of pages.      *<p>      * Required fields: author or editor, title, chapter and/or pages, publisher, year.      * Optional fields: volume or number, series, type, address, edition, month, note.      */
DECL|field|INBOOK
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|INBOOK
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|InBook
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
operator|new
name|OrFields
argument_list|(
name|StandardField
operator|.
name|CHAPTER
argument_list|,
name|StandardField
operator|.
name|PAGES
argument_list|)
argument_list|,
operator|new
name|OrFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|EDITOR
argument_list|)
argument_list|)
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|SERIES
argument_list|,
name|StandardField
operator|.
name|TYPE
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|EDITION
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|ISBN
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A part of a book having its own title.      * Required fields: author, title, booktitle, publisher, year.      * Optional fields: editor, volume or number, series, type, chapter, pages, address, edition, month, note.      */
DECL|field|INCOLLECTION
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|INCOLLECTION
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|InCollection
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|BOOKTITLE
argument_list|,
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|EDITOR
argument_list|,
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|SERIES
argument_list|,
name|StandardField
operator|.
name|TYPE
argument_list|,
name|StandardField
operator|.
name|CHAPTER
argument_list|,
name|StandardField
operator|.
name|PAGES
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|EDITION
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|ISBN
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * An article in a conference proceedings.      *<p>      * Required fields: author, title, booktitle, year.      * Optional fields: editor, volume or number, series, pages, address, month, organization, publisher, note.      */
DECL|field|INPROCEEDINGS
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|INPROCEEDINGS
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|InProceedings
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|BOOKTITLE
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|EDITOR
argument_list|,
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|SERIES
argument_list|,
name|StandardField
operator|.
name|PAGES
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|ORGANIZATION
argument_list|,
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * Technical documentation.      * Required field: title.      * Optional fields: author, organization, address, edition, month, year, note.      */
DECL|field|MANUAL
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|MANUAL
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|ORGANIZATION
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|EDITION
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|ISBN
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Manual
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A Master's thesis.      *<p>      * Required fields: author, title, school, year.      * Optional fields: type, address, month, note.      */
DECL|field|MASTERSTHESIS
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|MASTERSTHESIS
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|MastersThesis
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|SCHOOL
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|TYPE
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * Use this type when nothing else fits.      *<p>      * Required fields: none.      * Optional fields: author, title, howpublished, month, year, note.      */
DECL|field|MISC
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|MISC
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Misc
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|HOWPUBLISHED
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A PhD thesis.      *<p>      * Required fields: author, title, school, year.      * Optional fields: type, address, month, note.      */
DECL|field|PHDTHESIS
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|PHDTHESIS
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|PhdThesis
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|SCHOOL
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|TYPE
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * The proceedings of a conference.      *<p>      * Required fields: title, year.      * Optional fields: editor, volume or number, series, address, month, organization, publisher, note.      */
DECL|field|PROCEEDINGS
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|PROCEEDINGS
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Proceedings
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|EDITOR
argument_list|,
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|SERIES
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|PUBLISHER
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|ORGANIZATION
argument_list|,
name|StandardField
operator|.
name|ISBN
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A report published by a school or other institution, usually numbered within a series.      *<p>      * Required fields: author, title, institution, year.      * Optional fields: type, number, address, month, note.      */
DECL|field|TECHREPORT
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|TECHREPORT
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|TechReport
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|INSTITUTION
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|TYPE
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * A document having an author and title, but not formally published.      *<p>      * Required fields: author, title, note.      * Optional fields: month, year.      */
DECL|field|UNPUBLISHED
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|UNPUBLISHED
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Unpublished
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|SOFTWARE
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|SOFTWARE
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Software
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|HOWPUBLISHED
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|DATESET
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|DATESET
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|DATESET
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|HOWPUBLISHED
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|ALL
specifier|public
specifier|static
specifier|final
name|List
argument_list|<
name|BibEntryType
argument_list|>
name|ALL
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|ARTICLE
argument_list|,
name|INBOOK
argument_list|,
name|BOOK
argument_list|,
name|BOOKLET
argument_list|,
name|INCOLLECTION
argument_list|,
name|CONFERENCE
argument_list|,
name|INPROCEEDINGS
argument_list|,
name|PROCEEDINGS
argument_list|,
name|MANUAL
argument_list|,
name|MASTERSTHESIS
argument_list|,
name|PHDTHESIS
argument_list|,
name|TECHREPORT
argument_list|,
name|UNPUBLISHED
argument_list|,
name|MISC
argument_list|,
name|SOFTWARE
argument_list|,
name|DATESET
argument_list|)
decl_stmt|;
DECL|method|BibtexEntryTypeDefinitions ()
specifier|private
name|BibtexEntryTypeDefinitions
parameter_list|()
block|{     }
block|}
end_class

end_unit

