begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.entry
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|IEEEField
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|OrFields
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|field
operator|.
name|StandardField
import|;
end_import

begin_comment
comment|/**  * This class represents all supported IEEETran entry types.  *  * @see http://ctan.sharelatex.com/tex-archive/macros/latex/contrib/IEEEtran/bibtex/IEEEtran_bst_HOWTO.pdf  *<p>  *         Electronic, IEEETranBSTCTL, Periodical, Patent, Standard  */
end_comment

begin_class
DECL|class|IEEETranEntryTypes
specifier|public
class|class
name|IEEETranEntryTypes
block|{
comment|/**      * Electronic entry type for internet references      *<p>      * Required fields:      * Optional fields: author, month, year, title, language, howpublished, organization, address, note, url      */
DECL|field|ELECTRONIC
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|ELECTRONIC
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Electronic
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|LANGUAGE
argument_list|,
name|StandardField
operator|.
name|HOWPUBLISHED
argument_list|,
name|StandardField
operator|.
name|ORGANIZATION
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|,
name|StandardField
operator|.
name|URL
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * Special entry type that can be used to externally control some aspects of the bibliography style.      */
DECL|field|IEEETRANBSTCTL
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|IEEETRANBSTCTL
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|IEEEtranBSTCTL
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|IEEEField
operator|.
name|CTLUSE_ARTICLE_NUMBER
argument_list|,
name|IEEEField
operator|.
name|CTLUSE_PAPER
argument_list|,
name|IEEEField
operator|.
name|CTLUSE_FORCED_ETAL
argument_list|,
name|IEEEField
operator|.
name|CTLUSE_URL
argument_list|,
name|IEEEField
operator|.
name|CTLMAX_NAMES_FORCED_ETAL
argument_list|,
name|IEEEField
operator|.
name|CTLNAMES_SHOW_ETAL
argument_list|,
name|IEEEField
operator|.
name|CTLUSE_ALT_SPACING
argument_list|,
name|IEEEField
operator|.
name|CTLALT_STRETCH_FACTOR
argument_list|,
name|IEEEField
operator|.
name|CTLDASH_REPEATED_NAMES
argument_list|,
name|IEEEField
operator|.
name|CTLNAME_FORMAT_STRING
argument_list|,
name|IEEEField
operator|.
name|CTLNAME_LATEX_CMD
argument_list|,
name|IEEEField
operator|.
name|CTLNAME_URL_PREFIX
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * The periodical entry type is used for journals and magazines.      *<p>      * Required fields: title, year      * Optional fields: editor, language, series, volume, number, organization, month, note, url      */
DECL|field|PERIODICAL
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|PERIODICAL
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Periodical
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|EDITOR
argument_list|,
name|StandardField
operator|.
name|LANGUAGE
argument_list|,
name|StandardField
operator|.
name|SERIES
argument_list|,
name|StandardField
operator|.
name|VOLUME
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|ORGANIZATION
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|,
name|StandardField
operator|.
name|URL
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * Entry type for patents.      *<p>      * Required fields: nationality, number, year or yearfiled      * Optional fields: author, title, language, assignee, address, type, number, day, dayfiled, month, monthfiled, note, url      */
DECL|field|PATENT
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|PATENT
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Patent
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
operator|new
name|OrFields
argument_list|(
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|YEARFILED
argument_list|)
argument_list|,
name|StandardField
operator|.
name|NATIONALITY
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|,
name|StandardField
operator|.
name|LANGUAGE
argument_list|,
name|StandardField
operator|.
name|ASSIGNEE
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|TYPE
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|DAY
argument_list|,
name|StandardField
operator|.
name|DAYFILED
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|MONTHFILED
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|,
name|StandardField
operator|.
name|URL
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
comment|/**      * The standard entry type is used for proposed or formally published standards.      *<p>      * Required fields: title, organization or institution      * Optional fields: author, language, howpublished, type, number, revision, address, month, year, note, url      */
DECL|field|STANDARD
specifier|private
specifier|static
specifier|final
name|BibEntryType
name|STANDARD
init|=
operator|new
name|BibEntryTypeBuilder
argument_list|()
operator|.
name|withType
argument_list|(
name|StandardEntryType
operator|.
name|Standard
argument_list|)
operator|.
name|withRequiredFields
argument_list|(
operator|new
name|OrFields
argument_list|(
name|StandardField
operator|.
name|ORGANIZATION
argument_list|,
name|StandardField
operator|.
name|INSTITUTION
argument_list|)
argument_list|,
name|StandardField
operator|.
name|TITLE
argument_list|)
operator|.
name|withImportantFields
argument_list|(
name|StandardField
operator|.
name|AUTHOR
argument_list|,
name|StandardField
operator|.
name|LANGUAGE
argument_list|,
name|StandardField
operator|.
name|HOWPUBLISHED
argument_list|,
name|StandardField
operator|.
name|TYPE
argument_list|,
name|StandardField
operator|.
name|NUMBER
argument_list|,
name|StandardField
operator|.
name|REVISION
argument_list|,
name|StandardField
operator|.
name|ADDRESS
argument_list|,
name|StandardField
operator|.
name|MONTH
argument_list|,
name|StandardField
operator|.
name|YEAR
argument_list|,
name|StandardField
operator|.
name|NOTE
argument_list|,
name|StandardField
operator|.
name|URL
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
DECL|field|ALL
specifier|public
specifier|static
specifier|final
name|List
argument_list|<
name|BibEntryType
argument_list|>
name|ALL
init|=
name|Arrays
operator|.
name|asList
argument_list|(
name|ELECTRONIC
argument_list|,
name|IEEETRANBSTCTL
argument_list|,
name|PERIODICAL
argument_list|,
name|PATENT
argument_list|,
name|STANDARD
argument_list|)
decl_stmt|;
DECL|method|IEEETranEntryTypes ()
specifier|private
name|IEEETranEntryTypes
parameter_list|()
block|{     }
block|}
end_class

end_unit

