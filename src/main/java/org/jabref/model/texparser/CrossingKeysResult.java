begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.texparser
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Optional
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|StringJoiner
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_class
DECL|class|CrossingKeysResult
specifier|public
class|class
name|CrossingKeysResult
block|{
DECL|field|texParserResult
specifier|private
specifier|final
name|TexParserResult
name|texParserResult
decl_stmt|;
DECL|field|masterDatabase
specifier|private
specifier|final
name|BibDatabase
name|masterDatabase
decl_stmt|;
DECL|field|unresolvedKeys
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|unresolvedKeys
decl_stmt|;
DECL|field|newDatabase
specifier|private
specifier|final
name|BibDatabase
name|newDatabase
decl_stmt|;
DECL|field|crossRefsCount
specifier|private
name|int
name|crossRefsCount
decl_stmt|;
DECL|method|CrossingKeysResult (TexParserResult texParserResult, BibDatabase masterDatabase)
specifier|public
name|CrossingKeysResult
parameter_list|(
name|TexParserResult
name|texParserResult
parameter_list|,
name|BibDatabase
name|masterDatabase
parameter_list|)
block|{
name|this
operator|.
name|texParserResult
operator|=
name|texParserResult
expr_stmt|;
name|this
operator|.
name|masterDatabase
operator|=
name|masterDatabase
expr_stmt|;
name|this
operator|.
name|unresolvedKeys
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|newDatabase
operator|=
operator|new
name|BibDatabase
argument_list|()
expr_stmt|;
name|this
operator|.
name|crossRefsCount
operator|=
literal|0
expr_stmt|;
block|}
DECL|method|getTexParserResult ()
specifier|public
name|TexParserResult
name|getTexParserResult
parameter_list|()
block|{
return|return
name|texParserResult
return|;
block|}
DECL|method|getMasterDatabase ()
specifier|public
name|BibDatabase
name|getMasterDatabase
parameter_list|()
block|{
return|return
name|masterDatabase
return|;
block|}
DECL|method|getUnresolvedKeys ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getUnresolvedKeys
parameter_list|()
block|{
return|return
name|unresolvedKeys
return|;
block|}
DECL|method|getNewDatabase ()
specifier|public
name|BibDatabase
name|getNewDatabase
parameter_list|()
block|{
return|return
name|newDatabase
return|;
block|}
DECL|method|getCrossRefsCount ()
specifier|public
name|int
name|getCrossRefsCount
parameter_list|()
block|{
return|return
name|crossRefsCount
return|;
block|}
comment|/**      * Return the citations map from the TexParserResult object.      */
DECL|method|getCitations ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Set
argument_list|<
name|Citation
argument_list|>
argument_list|>
name|getCitations
parameter_list|()
block|{
return|return
name|texParserResult
operator|.
name|getCitations
argument_list|()
return|;
block|}
comment|/**      * Return a set of strings with the keys of the citations map from the TexParserResult object.      */
DECL|method|getCitationsKeySet ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCitationsKeySet
parameter_list|()
block|{
return|return
name|texParserResult
operator|.
name|getCitations
argument_list|()
operator|.
name|keySet
argument_list|()
return|;
block|}
comment|/**      * Return the master database in a set, for comparing two objects.      */
DECL|method|getMasterDatabaseSet ()
specifier|public
name|Set
argument_list|<
name|BibEntry
argument_list|>
name|getMasterDatabaseSet
parameter_list|()
block|{
return|return
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|masterDatabase
operator|.
name|getEntries
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Get if an entry with the given key is present in the master database.      */
DECL|method|getEntryMasterDatabase (String key)
specifier|public
name|Optional
argument_list|<
name|BibEntry
argument_list|>
name|getEntryMasterDatabase
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|masterDatabase
operator|.
name|getEntryByKey
argument_list|(
name|key
argument_list|)
return|;
block|}
comment|/**      * Add an unresolved key to the list.      */
DECL|method|addUnresolvedKey (String key)
specifier|public
name|void
name|addUnresolvedKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|unresolvedKeys
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
comment|/**      * Return the new database in a set, for comparing two objects.      */
DECL|method|getNewDatabaseSet ()
specifier|public
name|Set
argument_list|<
name|BibEntry
argument_list|>
name|getNewDatabaseSet
parameter_list|()
block|{
return|return
operator|new
name|HashSet
argument_list|<>
argument_list|(
name|newDatabase
operator|.
name|getEntries
argument_list|()
argument_list|)
return|;
block|}
comment|/**      * Check if an entry with the given key is present in the new database.      */
DECL|method|checkEntryNewDatabase (String key)
specifier|public
name|boolean
name|checkEntryNewDatabase
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|newDatabase
operator|.
name|getEntryByKey
argument_list|(
name|key
argument_list|)
operator|.
name|isPresent
argument_list|()
return|;
block|}
comment|/**      * Add 1 to cross references counter.      */
DECL|method|increaseCrossRefsCount ()
specifier|public
name|void
name|increaseCrossRefsCount
parameter_list|()
block|{
name|crossRefsCount
operator|++
expr_stmt|;
block|}
comment|/**      * Insert into the database a clone of an entry with the given key. The cloned entry has a new unique ID.      */
DECL|method|insertEntry (String key)
specifier|public
name|void
name|insertEntry
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|insertEntry
argument_list|(
name|masterDatabase
operator|.
name|getEntryByKey
argument_list|(
name|key
argument_list|)
operator|.
name|get
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Insert into the database a clone of the given entry. The cloned entry has a new unique ID.      */
DECL|method|insertEntry (BibEntry entry)
specifier|public
name|void
name|insertEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|BibEntry
name|clonedEntry
init|=
operator|(
name|BibEntry
operator|)
name|entry
operator|.
name|clone
argument_list|()
decl_stmt|;
name|newDatabase
operator|.
name|insertEntry
argument_list|(
name|clonedEntry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|new
name|StringJoiner
argument_list|(
literal|", "
argument_list|,
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getSimpleName
argument_list|()
operator|+
literal|"["
argument_list|,
literal|"]"
argument_list|)
operator|.
name|add
argument_list|(
literal|"texParserResult = "
operator|+
name|texParserResult
argument_list|)
operator|.
name|add
argument_list|(
literal|"masterDatabase = "
operator|+
name|masterDatabase
argument_list|)
operator|.
name|add
argument_list|(
literal|"unresolvedKeys = "
operator|+
name|unresolvedKeys
argument_list|)
operator|.
name|add
argument_list|(
literal|"newDatabase = "
operator|+
name|newDatabase
argument_list|)
operator|.
name|add
argument_list|(
literal|"crossRefsCount = "
operator|+
name|crossRefsCount
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|CrossingKeysResult
name|that
init|=
operator|(
name|CrossingKeysResult
operator|)
name|o
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|texParserResult
argument_list|,
name|that
operator|.
name|texParserResult
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getMasterDatabaseSet
argument_list|()
argument_list|,
name|that
operator|.
name|getMasterDatabaseSet
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|masterDatabase
argument_list|,
name|that
operator|.
name|masterDatabase
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|unresolvedKeys
argument_list|,
name|that
operator|.
name|unresolvedKeys
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|getNewDatabaseSet
argument_list|()
argument_list|,
name|that
operator|.
name|getNewDatabaseSet
argument_list|()
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|crossRefsCount
argument_list|,
name|that
operator|.
name|crossRefsCount
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|texParserResult
argument_list|,
name|masterDatabase
argument_list|,
name|unresolvedKeys
argument_list|,
name|newDatabase
argument_list|,
name|crossRefsCount
argument_list|)
return|;
block|}
block|}
end_class

end_unit

