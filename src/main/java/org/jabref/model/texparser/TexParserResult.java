begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.texparser
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
DECL|class|TexParserResult
specifier|public
class|class
name|TexParserResult
block|{
DECL|field|fileList
specifier|private
specifier|final
name|List
argument_list|<
name|Path
argument_list|>
name|fileList
decl_stmt|;
DECL|field|nestedFiles
specifier|private
specifier|final
name|List
argument_list|<
name|Path
argument_list|>
name|nestedFiles
decl_stmt|;
DECL|field|citations
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Citation
argument_list|>
argument_list|>
name|citations
decl_stmt|;
DECL|method|TexParserResult ()
specifier|public
name|TexParserResult
parameter_list|()
block|{
name|this
operator|.
name|fileList
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|nestedFiles
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|citations
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
DECL|method|getFileList ()
specifier|public
name|List
argument_list|<
name|Path
argument_list|>
name|getFileList
parameter_list|()
block|{
return|return
name|fileList
return|;
block|}
DECL|method|getNestedFiles ()
specifier|public
name|List
argument_list|<
name|Path
argument_list|>
name|getNestedFiles
parameter_list|()
block|{
return|return
name|nestedFiles
return|;
block|}
DECL|method|getCitations ()
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|List
argument_list|<
name|Citation
argument_list|>
argument_list|>
name|getCitations
parameter_list|()
block|{
return|return
name|citations
return|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"%nTexParserResult{fileList=%s // nestedFiles=%s // citations=%s}%n"
argument_list|,
name|fileList
argument_list|,
name|nestedFiles
argument_list|,
name|citations
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object o)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|TexParserResult
name|result
init|=
operator|(
name|TexParserResult
operator|)
name|o
decl_stmt|;
return|return
name|fileList
operator|.
name|equals
argument_list|(
name|result
operator|.
name|fileList
argument_list|)
operator|&&
name|nestedFiles
operator|.
name|equals
argument_list|(
name|result
operator|.
name|nestedFiles
argument_list|)
operator|&&
name|citations
operator|.
name|equals
argument_list|(
name|result
operator|.
name|citations
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|fileList
argument_list|,
name|nestedFiles
argument_list|,
name|citations
argument_list|)
return|;
block|}
block|}
end_class

end_unit

