begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|org.jabref.model.texparser
package|package
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|texparser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|database
operator|.
name|BibDatabase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jabref
operator|.
name|model
operator|.
name|entry
operator|.
name|BibEntry
import|;
end_import

begin_import
import|import
name|com
operator|.
name|google
operator|.
name|common
operator|.
name|collect
operator|.
name|Multimap
import|;
end_import

begin_class
DECL|class|TexBibEntriesResolverResult
specifier|public
class|class
name|TexBibEntriesResolverResult
block|{
DECL|field|texParserResult
specifier|private
specifier|final
name|TexParserResult
name|texParserResult
decl_stmt|;
DECL|field|unresolvedKeys
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|unresolvedKeys
decl_stmt|;
DECL|field|newEntries
specifier|private
specifier|final
name|List
argument_list|<
name|BibEntry
argument_list|>
name|newEntries
decl_stmt|;
DECL|field|crossRefsCount
specifier|private
name|int
name|crossRefsCount
decl_stmt|;
DECL|method|TexBibEntriesResolverResult (TexParserResult texParserResult)
specifier|public
name|TexBibEntriesResolverResult
parameter_list|(
name|TexParserResult
name|texParserResult
parameter_list|)
block|{
name|this
operator|.
name|texParserResult
operator|=
name|texParserResult
expr_stmt|;
name|this
operator|.
name|unresolvedKeys
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|newEntries
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|crossRefsCount
operator|=
literal|0
expr_stmt|;
block|}
DECL|method|getTexParserResult ()
specifier|public
name|TexParserResult
name|getTexParserResult
parameter_list|()
block|{
return|return
name|texParserResult
return|;
block|}
DECL|method|getUnresolvedKeys ()
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|getUnresolvedKeys
parameter_list|()
block|{
return|return
name|unresolvedKeys
return|;
block|}
DECL|method|getNewEntries ()
specifier|public
name|List
argument_list|<
name|BibEntry
argument_list|>
name|getNewEntries
parameter_list|()
block|{
return|return
name|newEntries
return|;
block|}
DECL|method|getCrossRefsCount ()
specifier|public
name|int
name|getCrossRefsCount
parameter_list|()
block|{
return|return
name|crossRefsCount
return|;
block|}
comment|/**      * Return the citations multimap from the TexParserResult object.      */
DECL|method|getCitations ()
specifier|public
name|Multimap
argument_list|<
name|String
argument_list|,
name|Citation
argument_list|>
name|getCitations
parameter_list|()
block|{
return|return
name|texParserResult
operator|.
name|getCitations
argument_list|()
return|;
block|}
comment|/**      * Return a set of strings with the keys of the citations multimap from the TexParserResult object.      */
DECL|method|getCitationsKeySet ()
specifier|public
name|Set
argument_list|<
name|String
argument_list|>
name|getCitationsKeySet
parameter_list|()
block|{
return|return
name|texParserResult
operator|.
name|getCitationsKeySet
argument_list|()
return|;
block|}
comment|/**      * Add an unresolved key to the list.      */
DECL|method|addUnresolvedKey (String key)
specifier|public
name|void
name|addUnresolvedKey
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|unresolvedKeys
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
comment|/**      * Check if an entry with the given key is not present in the list of new entries.      */
DECL|method|isNotKeyIntoNewEntries (String key)
specifier|public
name|boolean
name|isNotKeyIntoNewEntries
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
name|newEntries
operator|.
name|stream
argument_list|()
operator|.
name|noneMatch
argument_list|(
name|entry
lambda|->
name|key
operator|.
name|equals
argument_list|(
name|entry
operator|.
name|getCiteKeyOptional
argument_list|()
operator|.
name|orElse
argument_list|(
literal|null
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
comment|/**      * Add 1 to the cross references counter.      */
DECL|method|increaseCrossRefsCount ()
specifier|public
name|void
name|increaseCrossRefsCount
parameter_list|()
block|{
name|crossRefsCount
operator|++
expr_stmt|;
block|}
comment|/**      * Insert into the list of new entries an entry with the given key.      */
DECL|method|insertEntry (BibDatabase masterDatabase, String key)
specifier|public
name|void
name|insertEntry
parameter_list|(
name|BibDatabase
name|masterDatabase
parameter_list|,
name|String
name|key
parameter_list|)
block|{
name|masterDatabase
operator|.
name|getEntryByKey
argument_list|(
name|key
argument_list|)
operator|.
name|ifPresent
argument_list|(
name|this
operator|::
name|insertEntry
argument_list|)
expr_stmt|;
block|}
comment|/**      * Insert into the list of new entries the given entry.      */
DECL|method|insertEntry (BibEntry entry)
specifier|public
name|void
name|insertEntry
parameter_list|(
name|BibEntry
name|entry
parameter_list|)
block|{
name|newEntries
operator|.
name|add
argument_list|(
name|entry
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|toString ()
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
name|String
operator|.
name|format
argument_list|(
literal|"TexBibEntriesResolverResult{texParserResult=%s, unresolvedKeys=%s, newEntries=%s, crossRefsCount=%s}"
argument_list|,
name|this
operator|.
name|texParserResult
argument_list|,
name|this
operator|.
name|unresolvedKeys
argument_list|,
name|this
operator|.
name|newEntries
argument_list|,
name|this
operator|.
name|crossRefsCount
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|equals (Object obj)
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|obj
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|obj
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|obj
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|TexBibEntriesResolverResult
name|that
init|=
operator|(
name|TexBibEntriesResolverResult
operator|)
name|obj
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|texParserResult
argument_list|,
name|that
operator|.
name|texParserResult
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|unresolvedKeys
argument_list|,
name|that
operator|.
name|unresolvedKeys
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|newEntries
argument_list|,
name|that
operator|.
name|newEntries
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|crossRefsCount
argument_list|,
name|that
operator|.
name|crossRefsCount
argument_list|)
return|;
block|}
annotation|@
name|Override
DECL|method|hashCode ()
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|texParserResult
argument_list|,
name|unresolvedKeys
argument_list|,
name|newEntries
argument_list|,
name|crossRefsCount
argument_list|)
return|;
block|}
block|}
end_class

end_unit

