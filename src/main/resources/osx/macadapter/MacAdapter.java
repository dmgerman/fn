begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  Copyright (C) 2015 JabRef contributors.     This program is free software; you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation; either version 2 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License along     with this program; if not, write to the Free Software Foundation, Inc.,     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. */
end_comment

begin_package
DECL|package|osx.macadapter
package|package
name|osx
operator|.
name|macadapter
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|JabRefFrame
import|;
end_import

begin_import
import|import
name|com
operator|.
name|apple
operator|.
name|eawt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|com
operator|.
name|apple
operator|.
name|eawt
operator|.
name|AppEvent
operator|.
name|AboutEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|apple
operator|.
name|eawt
operator|.
name|AppEvent
operator|.
name|OpenFilesEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|apple
operator|.
name|eawt
operator|.
name|AppEvent
operator|.
name|PreferencesEvent
import|;
end_import

begin_import
import|import
name|com
operator|.
name|apple
operator|.
name|eawt
operator|.
name|AppEvent
operator|.
name|QuitEvent
import|;
end_import

begin_class
DECL|class|MacAdapter
specifier|public
class|class
name|MacAdapter
implements|implements
name|PreferencesHandler
implements|,
name|AboutHandler
implements|,
name|QuitHandler
implements|,
name|OpenFilesHandler
block|{
DECL|field|parentFrame
specifier|private
name|JabRefFrame
name|parentFrame
init|=
literal|null
decl_stmt|;
DECL|method|registerMacEvents (JabRefFrame inputFrame)
specifier|public
name|void
name|registerMacEvents
parameter_list|(
name|JabRefFrame
name|inputFrame
parameter_list|)
block|{
name|parentFrame
operator|=
name|inputFrame
expr_stmt|;
name|Application
operator|.
name|getApplication
argument_list|()
operator|.
name|setOpenFileHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|Application
operator|.
name|getApplication
argument_list|()
operator|.
name|setAboutHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|Application
operator|.
name|getApplication
argument_list|()
operator|.
name|setPreferencesHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|Application
operator|.
name|getApplication
argument_list|()
operator|.
name|setQuitHandler
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
comment|// The OSXAdapter calls this method when a ".bib" file has been double-clicked from the Finder.
DECL|method|openFiles (OpenFilesEvent event)
specifier|public
name|void
name|openFiles
parameter_list|(
name|OpenFilesEvent
name|event
parameter_list|)
block|{
if|if
condition|(
name|parentFrame
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|File
argument_list|>
name|files
init|=
name|event
operator|.
name|getFiles
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|files
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
name|parentFrame
operator|.
name|openAction
argument_list|(
name|files
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getAbsolutePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|handleQuitRequestWith (QuitEvent evt, QuitResponse resp)
specifier|public
name|void
name|handleQuitRequestWith
parameter_list|(
name|QuitEvent
name|evt
parameter_list|,
name|QuitResponse
name|resp
parameter_list|)
block|{
if|if
condition|(
name|parentFrame
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|parentFrame
operator|.
name|quit
argument_list|()
condition|)
name|resp
operator|.
name|performQuit
argument_list|()
expr_stmt|;
else|else
name|resp
operator|.
name|cancelQuit
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
DECL|method|handleAbout (AboutEvent arg0)
specifier|public
name|void
name|handleAbout
parameter_list|(
name|AboutEvent
name|arg0
parameter_list|)
block|{
if|if
condition|(
name|parentFrame
operator|!=
literal|null
condition|)
name|parentFrame
operator|.
name|about
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
DECL|method|handlePreferences (PreferencesEvent arg0)
specifier|public
name|void
name|handlePreferences
parameter_list|(
name|PreferencesEvent
name|arg0
parameter_list|)
block|{
if|if
condition|(
name|parentFrame
operator|!=
literal|null
condition|)
name|parentFrame
operator|.
name|preferences
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

