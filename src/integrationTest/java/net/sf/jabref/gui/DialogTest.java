begin_unit|revision:0.9.5;language:Java;cregit-version:0.0.1
begin_package
DECL|package|net.sf.jabref.gui
package|package
name|net
operator|.
name|sf
operator|.
name|jabref
operator|.
name|gui
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|assertj
operator|.
name|swing
operator|.
name|core
operator|.
name|GenericTypeMatcher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|assertj
operator|.
name|swing
operator|.
name|dependency
operator|.
name|jsr305
operator|.
name|Nonnull
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|assertj
operator|.
name|swing
operator|.
name|finder
operator|.
name|WindowFinder
operator|.
name|findDialog
import|;
end_import

begin_class
DECL|class|DialogTest
specifier|public
class|class
name|DialogTest
extends|extends
name|AbstractUITest
block|{
annotation|@
name|Test
DECL|method|testProtectedTermsDialog ()
specifier|public
name|void
name|testProtectedTermsDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Options"
argument_list|,
literal|"Manage protected terms"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Manage protected terms files"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testContentSelectorDialog ()
specifier|public
name|void
name|testContentSelectorDialog
parameter_list|()
block|{
name|newDatabase
argument_list|()
expr_stmt|;
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Options"
argument_list|,
literal|"Manage content selectors"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Manage content selectors"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testJournalAbbreviationDialog ()
specifier|public
name|void
name|testJournalAbbreviationDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Options"
argument_list|,
literal|"Manage journal abbreviations"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Journal abbreviations"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testExternalFilesDialog ()
specifier|public
name|void
name|testExternalFilesDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Options"
argument_list|,
literal|"Manage external file types"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Manage external file types"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCustomExportsDialog ()
specifier|public
name|void
name|testCustomExportsDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Options"
argument_list|,
literal|"Manage custom exports"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Manage custom exports"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Close"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCustomImportsDialog ()
specifier|public
name|void
name|testCustomImportsDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Options"
argument_list|,
literal|"Manage custom imports"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Manage custom imports"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Close"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testKeybindingsDialog ()
specifier|public
name|void
name|testKeybindingsDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Options"
argument_list|,
literal|"Customize key bindings"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Key bindings"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testReplaceStringDialog ()
specifier|public
name|void
name|testReplaceStringDialog
parameter_list|()
block|{
name|newDatabase
argument_list|()
expr_stmt|;
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Search"
argument_list|,
literal|"Replace string..."
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Replace string"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testCustomizeEntryTypesDialog ()
specifier|public
name|void
name|testCustomizeEntryTypesDialog
parameter_list|()
block|{
name|newDatabase
argument_list|()
expr_stmt|;
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"BibTeX"
argument_list|,
literal|"Customize entry types"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Customize entry types"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Cancel"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testErrorConsoleDialog ()
specifier|public
name|void
name|testErrorConsoleDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Help"
argument_list|,
literal|"Show error console"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Program output"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"OK"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testFindUnlinkedFilesDialog ()
specifier|public
name|void
name|testFindUnlinkedFilesDialog
parameter_list|()
block|{
name|newDatabase
argument_list|()
expr_stmt|;
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Quality"
argument_list|,
literal|"Find unlinked files..."
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Find unlinked files"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|button
argument_list|(
operator|new
name|GenericTypeMatcher
argument_list|<
name|JButton
argument_list|>
argument_list|(
name|JButton
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
annotation|@
name|Nonnull
name|JButton
name|jButton
parameter_list|)
block|{
return|return
literal|"Close"
operator|.
name|equals
argument_list|(
name|jButton
operator|.
name|getText
argument_list|()
argument_list|)
return|;
block|}
block|}
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testAboutDialog ()
specifier|public
name|void
name|testAboutDialog
parameter_list|()
block|{
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"Help"
argument_list|,
literal|"About JabRef"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"About JabRef"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testStringsDialog ()
specifier|public
name|void
name|testStringsDialog
parameter_list|()
block|{
name|newDatabase
argument_list|()
expr_stmt|;
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"BibTeX"
argument_list|,
literal|"Edit strings"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Strings for database: untitled"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
DECL|method|testPreambleDialog ()
specifier|public
name|void
name|testPreambleDialog
parameter_list|()
block|{
name|newDatabase
argument_list|()
expr_stmt|;
name|mainFrame
operator|.
name|menuItemWithPath
argument_list|(
literal|"BibTeX"
argument_list|,
literal|"Edit preamble"
argument_list|)
operator|.
name|click
argument_list|()
expr_stmt|;
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
name|matcher
init|=
operator|new
name|GenericTypeMatcher
argument_list|<
name|JDialog
argument_list|>
argument_list|(
name|JDialog
operator|.
name|class
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|boolean
name|isMatching
parameter_list|(
name|JDialog
name|dialog
parameter_list|)
block|{
return|return
literal|"Edit preamble"
operator|.
name|equals
argument_list|(
name|dialog
operator|.
name|getTitle
argument_list|()
argument_list|)
return|;
block|}
block|}
decl_stmt|;
name|findDialog
argument_list|(
name|matcher
argument_list|)
operator|.
name|withTimeout
argument_list|(
literal|10_000
argument_list|)
operator|.
name|using
argument_list|(
name|robot
argument_list|()
argument_list|)
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

